{"version":3,"file":"component---src-pages-media-jsx-2de5970684528389f86a.js","mappings":"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","sources":["webpack://gatsby-starter-advanced/./node_modules/reactstrap/es/PaginationItem.js","webpack://gatsby-starter-advanced/./node_modules/reactstrap/es/PaginationLink.js","webpack://gatsby-starter-advanced/./src/components/MediaPagination/MediaPagination.jsx","webpack://gatsby-starter-advanced/./src/components/Media/Media.jsx","webpack://gatsby-starter-advanced/./src/pages/media.jsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"active\", \"className\", \"cssModule\", \"disabled\", \"tag\"];\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  tag: 'li'\n};\nvar PaginationItem = function PaginationItem(props) {\n  var active = props.active,\n    className = props.className,\n    cssModule = props.cssModule,\n    disabled = props.disabled,\n    Tag = props.tag,\n    attributes = _objectWithoutPropertiesLoose(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'page-item', {\n    active: active,\n    disabled: disabled\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\nPaginationItem.defaultProps = defaultProps;\nexport default PaginationItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"next\", \"previous\", \"first\", \"last\", \"tag\"];\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  tag: 'a'\n};\nvar PaginationLink = function PaginationLink(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    next = props.next,\n    previous = props.previous,\n    first = props.first,\n    last = props.last,\n    Tag = props.tag,\n    attributes = _objectWithoutPropertiesLoose(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'page-link'), cssModule);\n  var defaultAriaLabel;\n  if (previous) {\n    defaultAriaLabel = 'Previous';\n  } else if (next) {\n    defaultAriaLabel = 'Next';\n  } else if (first) {\n    defaultAriaLabel = 'First';\n  } else if (last) {\n    defaultAriaLabel = 'Last';\n  }\n  var ariaLabel = props['aria-label'] || defaultAriaLabel;\n  var defaultCaret;\n  if (previous) {\n    defaultCaret = \"\\u2039\";\n  } else if (next) {\n    defaultCaret = \"\\u203A\";\n  } else if (first) {\n    defaultCaret = \"\\xAB\";\n  } else if (last) {\n    defaultCaret = \"\\xBB\";\n  }\n  var children = props.children;\n  if (children && Array.isArray(children) && children.length === 0) {\n    children = null;\n  }\n  if (!attributes.href && Tag === 'a') {\n    Tag = 'button';\n  }\n  if (previous || next || first || last) {\n    children = [/*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      key: \"caret\"\n    }, children || defaultCaret), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      key: \"sr\"\n    }, ariaLabel)];\n  }\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": ariaLabel\n  }), children);\n};\nPaginationLink.defaultProps = defaultProps;\nexport default PaginationLink;","import React from \"react\";\nimport { PaginationItem, PaginationLink } from \"reactstrap\";\nimport { IconContext } from \"react-icons\";\nimport { GiPlainSquare, GiSquare } from \"react-icons/gi\";\n\nconst MediaPagination = ({\n  imagePerPage,\n  totalImages,\n  paginate,\n  currentSlider,\n}) => {\n  const sildeNumber = [];\n\n  for (let page = 1; page <= Math.ceil(totalImages / imagePerPage); page++) {\n    sildeNumber.push(page);\n  }\n\n  return (\n    <div className=\"d-flex page-section\">\n      {sildeNumber.map((number) => {\n        return (\n          <PaginationItem key={number} className=\"mt-3\">\n            <PaginationLink onClick={() => paginate(number)} href=\"#\">\n              <IconContext.Provider\n                value={{ className: \"pagination-icon\", size: \"1.5em\" }}\n              >\n                {(() => {\n                  if (currentSlider === number) {\n                    return <GiPlainSquare />;\n                  }\n                  return <GiSquare />;\n                })()}\n              </IconContext.Provider>\n            </PaginationLink>\n          </PaginationItem>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default MediaPagination;\n","import React, { useState } from \"react\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport { Row, Col } from \"reactstrap\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { FaCaretLeft, FaCaretRight } from \"react-icons/fa\";\nimport { ImCross } from \"react-icons/im\";\nimport { IconContext } from \"react-icons\";\nimport MediaPagination from \"../MediaPagination/MediaPagination\";\n\nconst Gallery = () => {\n  const data = useStaticQuery(graphql`\n    query Images {\n      images: allFile(filter: { relativeDirectory: { eq: \"images\" } }) {\n        nodes {\n          id\n          name\n          childImageSharp {\n            gatsbyImageData(width: 1200, placeholder: BLURRED)\n          }\n        }\n      }\n    }\n  `);\n\n  const imgArray = [];\n  data.images.nodes.array?.forEach((img) => {\n    imgArray.push(img.childImageSharp.gatsbyImageData);\n  });\n\n  const [imageDisplay, setImageDisplay] = useState(false);\n  const [imageToShow, setImageToShow] = useState(``);\n\n  const showImage = (image) => {\n    setImageToShow(image);\n    setImageDisplay(true);\n  };\n\n  const hideImage = () => {\n    setImageDisplay(false);\n  };\n\n  const showNext = (e) => {\n    e.stopPropagation();\n    const currentIndex = imgArray.indexOf(imageToShow);\n    if (currentIndex >= imgArray.length - 1) {\n      setImageDisplay(false);\n    } else {\n      const nextImage = imgArray[currentIndex + 1];\n      setImageToShow(nextImage);\n    }\n  };\n\n  const showPrev = (e) => {\n    e.stopPropagation();\n    const currentIndex = imgArray.indexOf(imageToShow);\n    if (currentIndex <= 0) {\n      setImageDisplay(false);\n    } else {\n      const nextImage = imgArray[currentIndex - 1];\n      setImageToShow(nextImage);\n    }\n  };\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [imagePerPage] = useState(9);\n  const indexOfLastImage = currentPage * imagePerPage;\n  const indexOfFirstImage = indexOfLastImage - imagePerPage;\n  const currentImgArray = imgArray.slice(indexOfFirstImage, indexOfLastImage);\n  const paginate = (pageNum) => setCurrentPage(pageNum);\n\n  return (\n    <div>\n      <div>\n        <h1 className=\"text-center\">Screenshots</h1>\n        <div className=\"container my-4\">\n          <div className=\"home-underline\" />\n        </div>\n      </div>\n\n      <div>\n        <Row className=\"justify-content-center\">\n          {currentImgArray.map((image) => (\n            <Col lg=\"4\" md=\"6\" sm=\"6\" xs=\"6\" onClick={() => showImage(image)}>\n              <div className=\"media-img\">\n                {\" \"}\n                <GatsbyImage\n                  image={image}\n                  imgStyle={{\n                    transform: \"none\",\n                  }}\n                />\n              </div>\n            </Col>\n          ))}\n\n          {imageDisplay ? (\n            <div className=\"media-modal\">\n              <div className=\"lightbox\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-lg btn-primary font-weigth-bolder rounded-circle media-button\"\n                    onClick={showPrev}\n                  >\n                    {\" \"}\n                    <IconContext.Provider\n                      value={{ size: \"2em\", className: \"mr-1\" }}\n                    >\n                      <FaCaretLeft />\n                    </IconContext.Provider>\n                  </button>\n                </div>\n\n                <div className=\"align-items-center\">\n                  <Col className=\"d-flex justify-content-end\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-lg btn-primary rounded-circle media-button-cancel\"\n                      onClick={hideImage}\n                    >\n                      <IconContext.Provider value={{ size: \"1.5em\" }}>\n                        <ImCross />\n                      </IconContext.Provider>\n                    </button>\n                  </Col>\n\n                  <div>\n                    <GatsbyImage\n                      image={imageToShow}\n                      id=\"lightbox-img\"\n                      onClick={hideImage}\n                      className=\"m-4\"\n                      imgStyle={{ boxShadow: \"0 0 30px rgba(0, 0, 0, 0.5)\" }}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-lg btn-primary ml-3 font-weigth-bolder rounded-circle media-button\"\n                    onClick={showNext}\n                  >\n                    <IconContext.Provider\n                      value={{ size: \"2em\", className: \"ml-1\" }}\n                    >\n                      <FaCaretRight />\n                    </IconContext.Provider>\n                  </button>\n                </div>\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </Row>\n      </div>\n      <MediaPagination\n        imagePerPage={imagePerPage}\n        totalImages={imgArray.length}\n        paginate={paginate}\n        currentSlider={currentPage}\n      />\n    </div>\n  );\n};\n\nexport default Gallery;\n","import React from \"react\";\nimport Layout from \"../layout\";\nimport Media from \"../components/Media/Media\";\nimport config from \"../../data/SiteConfig\";\nimport SEO from \"../components/SEO/SEO\";\n\nconst media = () => (\n  <Layout>\n    <div className=\"media-container\">\n      <Media />\n    </div>\n  </Layout>\n);\n\nexport default media;\n\nexport const Head = () => <SEO title={`Media | ${config.siteTitle}`} />;\n"],"names":["_excluded","PaginationItem","props","active","className","cssModule","disabled","Tag","tag","attributes","classes","defaultProps","PaginationLink","defaultAriaLabel","next","previous","first","last","defaultCaret","ariaLabel","children","Array","isArray","length","href","key","imagePerPage","totalImages","paginate","currentSlider","sildeNumber","page","Math","ceil","push","map","number","onClick","value","size","data","useStaticQuery","imgArray","images","nodes","array","forEach","img","childImageSharp","gatsbyImageData","imageDisplay","setImageDisplay","useState","imageToShow","setImageToShow","hideImage","currentPage","setCurrentPage","indexOfLastImage","indexOfFirstImage","currentImgArray","slice","Row","image","Col","lg","md","sm","xs","showImage","G","imgStyle","transform","type","e","stopPropagation","currentIndex","indexOf","nextImage","id","boxShadow","pageNum","Media","Head","SEO","title","config"],"sourceRoot":""}