[
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMTE5ODU0MjU=",
    "name": "AdditionalFruits",
    "url": "https://github.com/Terasology/AdditionalFruits",
    "description": "A set of fruits that grow using SimpleFarming",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/77c56b1c258aa6b0a885a2fdd072709bac8306b92936b160fea38e9c95d8ea13/Terasology/AdditionalFruits",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"AdditionalFruits\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"jellysnake\",\n  \"displayName\": \"AdditionalFruits\",\n  \"description\": \"A fruit expansion pack for EdibleFlora\",\n  \"dependencies\": [\n    {\n      \"id\": \"EdibleFlora\",\n      \"minVersion\": \"1.0.0\"\n    }\n  ],\n  \"serverSideOnly\": false,\n  \"isAsset\": true\n}\n"
    },
    "readme": {
      "text": "# AdditionalFruits\nA set of plants that grow using the SimpleFarming module. This module contains fruits; more plants are contained in the CommonEdibleFlora and [AdditionalVegetables](https://github.com/Terasology/AdditionalVegetables) modules. For more information, check out the [SimpleFarming Module](https://github.com/Terasology/SimpleFarming).\n\n## Contains:\n * Blueberry\n * Cranberry\n * Gojiberry\n * Gooseberry\n * Guava\n * Melon\n * Passionfruit\n * Peach\n * Pineapple\n * Raspberry\n * Strawberry\n * Tomato\n\nTo add another fruit, fork the repository, make the changes, and submit a pull request. For instructions on how to add fruits look at the readme in SimpleFarming. Make sure that anything you add is a fruit, though!\n\n## Credits for Images:\n * Blueberry: Made by TheJYKoder (Original)\n * BlueberryBushFull: Made by TheJYKoder (Original)\n * Strawberry: Made by Patrick Wang (Original)\n * Raspberry: Made by SufurElite (Original)\n * Gojiberry: Made by Harry Wang (Original)\n * Immature, Mature, and Ripe Pineapple: Made by mdj117 (Original)\n * Pineapple Fruit: Made by mdj117 (Original)\n * Pineapple: https://pixabay.com/en/pineapple-fruit-exotic-tropical-1916996/\n * Pineapple Sapling : https://pixabay.com/en/chestnuts-conker-marron-nuts-seeds-151927/\n * Cranberry and all related: [András Ottó Földes](https://github.com/andriii25)\n * Peach Tree Saplings, Fruits: iojw (Fruits modified from GreenLeaf)\n * Peach: https://pixabay.com/en/peach-fruit-nectarine-plant-nature-41169/\n * Peach Seed: https://pixabay.com/en/peach-nectarine-fruit-food-sweet-42902/\n * Melon: Mandar Juvekar (original)\n * Melon Vine Seed: Mandar Juvekar (original)\n * Melon Vine Trunk: Mandar Juvekar (original)\n * Tomato: SufurElite (original)\n * Tomato Vine Seed: SufurElite based on Mandar Juvekar's original\n * Tomato Vine Stem: SufurElite based on Mandar Juvekar's original\n * PassionFruit: mdj117 (original)\n * PassionFruit seed: mdj117 (original)\n * PassionFruit trunk: mdj117 (original)\n * PassionFruit Sapling: mdj117 (original)\n * Guava: https://upload.wikimedia.org/wikipedia/commons/d/d4/A_aesthetic_guava_fruits.JPG (Resized)\n * GuavaSeed : https://pixabay.com/en/seeds-shells-yellow-foods-nuts-576562/ (Resized)\n * GuavaBush : https://pixabay.com/en/apple-branch-deciduous-fruit-1300027/ (Resized)\n * GuavaBushFull : https://pixabay.com/en/apple-branch-deciduous-fruit-1300027/ (Resized) (Edited by Jay)\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMTU2NzAwODQ=",
    "name": "AdditionalItemPipes",
    "url": "https://github.com/Terasology/AdditionalItemPipes",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/811a92c9468b24ce1b04707230f7bfb136c40f41760f3e98e291ad3929555a3f/Terasology/AdditionalItemPipes",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"AdditionalItemPipes\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"The Terasology Foundation\",\n  \"displayName\": \"AdditionalItemPipes\",\n  \"description\": \"This module adds both logic and assets for item pipes\",\n  \"dependencies\": [\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"ItemPipes\",\n      \"minVersion\": \"1.0.0\"\n    }\n  ],\n  \"serverSideOnly\": false,\n  \"isAsset\": true,\n  \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMTAyNjk0NzU=",
    "name": "AdditionalRails",
    "url": "https://github.com/Terasology/AdditionalRails",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/2dc98f86f943befc8fe7ca3240d251cb3bef63e72cf358fcc7600d0bc3c61c90/Terasology/AdditionalRails",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"AdditionalRails\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"The Terasology Foundation\",\n    \"displayName\": \"Additional Rails\",\n    \"description\": \"This module adds assets and logic for rails\",\n    \"dependencies\": [\n        {\n            \"id\": \"Drops\",\n            \"minVersion\": \"1.0.1\"\n        },\n        {\n            \"id\": \"Explosives\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Rails\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"SegmentedPaths\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Signalling\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"SimpleFarming\",\n            \"minVersion\": \"2.1.0\"\n        }\n    ],\n    \"isAsset\": true,\n    \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "# AdditionalRails\n\nAdditionalRails is an extension for the [Rails](https://github.com/Terasology/Rails) module which adds many new carts, rails, and other features.\n\n## Features\n\nHere is a brief list of the features which this module adds:\n\n### Carts\n- Activable Cart Example: Prints a message to the logger when is passes over an Activator Rail\n- Explosive Cart: Explodes when it passes over an Activator Rail\n- Harvesting Cart: Harvests plants from the [SimpleFarming](https://github.com/Terasology/SimpleFarming) module\n- Planting Cart: Plants plants from the [SimpleFarming](https://github.com/Terasology/SimpleFarming) module\n- Hoover Cart: Picks up items around it when fueled by torches\n- Track Layer Cart: Lays tracks from its inventory as it moves\n- Tunnel Bore Cart: Lays tracks and digs a 3x3 tunnel as it moves\n- Cargo Cart: Holds a lot of items, but gets heavier and moves slower the more it is holding\n\n### Rails\n- Booster Rail: Boosts carts that pass over it\n- One-way Booster Rail: Boosts carts in only one direction\n- Activator Rail: Activates carts that pass over it\n- Friction Rail: Has much more friction than other rails\n\n### Switches\n- Lever Switch: Controls the rail juntion direction, controlled by 'use target' action (usually 'E' key)\n- Signal Switch: Same as the Lever Switch, but controlled by a signal from the [Signalling](https://github.com/Terasology/Signalling) module instead of the player\n\n## Screenshots\n\n![Rail Types](screenshots/railtypes.png)\n\n_Booster Rail, One-way Booster Rail, Activator Rail, and Friction Rail_\n\n![Explosive Cart](screenshots/expcart.png)\n\n_Results of an explosive cart_\n\n![Tunnel Bore](screenshots/tunnel.png)\n\n_Tunnel dug by a Tunnel Bore Cart_\n\n![Lever Switch](screenshots/switch.png)\n\n_Lever Switch in action_\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk3ODcwNTEzMw==",
    "name": "AdditionalStructureTemplates",
    "url": "https://github.com/Terasology/AdditionalStructureTemplates",
    "description": "Adds generated mineshaft structures to Terasology.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/5294feb505b39c1e6a501cc0474e6b7fa83c4be44f1865cdc1dfdf434155ab9d/Terasology/AdditionalStructureTemplates",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMTE5ODUzOTg=",
    "name": "AdditionalVegetables",
    "url": "https://github.com/Terasology/AdditionalVegetables",
    "description": "A set of vegetables that grow using SimpleFarming",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/aef0dc784ae202872dc603365319685261db49ff07d8fbae3331ac3307d0e72d/Terasology/AdditionalVegetables",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"AdditionalVegetables\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"jellysnake\",\n  \"displayName\": \"AdditionalVegetables\",\n  \"description\": \"A vegetable expansion pack for EdibleFlora\",\n  \"dependencies\": [\n    {\n      \"id\": \"EdibleFlora\",\n      \"minVersion\": \"1.0.0\"\n    }\n  ],\n  \"serverSideOnly\": false,\n  \"isAsset\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMTExOTM0ODg=",
    "name": "AdditionalWorlds",
    "url": "https://github.com/Terasology/AdditionalWorlds",
    "description": "A collection of interesting world generators",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/e043d76532c22c704012d8dc20704fec85e547bb43c1c58d9ebbb7faccc6e823/Terasology/AdditionalWorlds",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxOTQ1MTYwMzI=",
    "name": "AdvancedRails",
    "url": "https://github.com/Terasology/AdvancedRails",
    "description": "Part of the work on the GSOC 2019 proposal \"Metal Renegades - Multiplayer\"",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/01efa2ebf24d55a3da2656cd922358c01f902101e1d651bbaf3bd44dd941d5e7/Terasology/AdvancedRails",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"AdvancedRails\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"The Terasology Foundation\",\n  \"displayName\": \"Advanced Rails\",\n  \"description\": \"This module adds logic and assets for locomotives\",\n  \"dependencies\": [\n    {\n      \"id\": \"Health\",\n      \"minVersion\": \"2.0.0-SNAPSHOT\"\n    },\n    {\n      \"id\": \"Rails\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"SegmentedPaths\",\n      \"minVersion\": \"1.0.0\"\n    }\n  ],\n  \"serverSideOnly\": false,\n  \"isAsset\": true,\n  \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk5MzE3NDEzNQ==",
    "name": "AdventureAssets",
    "url": "https://github.com/Terasology/AdventureAssets",
    "description": "Adventure related assets like traps and monsters for Terasology",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/a38471e052710e314af2d8f7e90969fe8f26add8fdc592654d4dc5349a150e59/Terasology/AdventureAssets",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"AdventureAssets\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"flo, nihal111\",\n    \"displayName\": \"AdventureAssets\",\n    \"description\": \"This module adds logic and assets related to adventuring\",\n    \"dependencies\": [\n        {\n            \"id\": \"CoreAdvancedAssets\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"Drops\",\n            \"minVersion\": \"1.0.1\"\n        },\n        {\n            \"id\": \"Furnishings\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Projectile\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"StructureTemplates\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"WorldlyTooltipAPI\",\n            \"minVersion\": \"1.0.0\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isAsset\": true,\n    \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "# AdventureAssets\nAdventure related assets like traps and monsters, for Terasology.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk2MTY3NDQ1NA==",
    "name": "Alchemy",
    "url": "https://github.com/Terasology/Alchemy",
    "description": "Brewing potions and fun things!",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/a5de232a8f2a38b720fcf4ea2cdbb51d1808350386d117437ed917846065a4ce/Terasology/Alchemy",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Alchemy\",\n    \"version\": \"1.3.0-SNAPSHOT\",\n    \"author\": \"The Terasology Foundation\",\n    \"displayName\": \"Alchemy\",\n    \"description\": \"A module that allows the brewing of potions, elixirs, tonics, and other vials.\",\n    \"dependencies\": [\n        {\n            \"id\": \"AlterationEffects\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"AnotherWorld\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"AnotherWorldPlants\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"BiomesAPI\",\n            \"minVersion\": \"4.0.0\"\n        },\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"Drops\",\n            \"minVersion\": \"1.0.1\"\n        },\n        {\n            \"id\": \"Durability\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Fluid\",\n            \"minVersion\": \"2.0.0\"\n        },\n        {\n            \"id\": \"Genome\",\n            \"minVersion\": \"1.0.1-SNAPSHOT\"\n        },\n        {\n            \"id\": \"GrowingFlora\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },        \n        {\n            \"id\": \"InGameHelpAPI\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"MultiBlock\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"NameGenerator\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"PlantPack\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Potions\",\n            \"minVersion\": \"1.2.0\"\n        },\n        {\n            \"id\": \"Workstation\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"WorkstationCrafting\",\n            \"minVersion\": \"2.0.0\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isLibrary\": true,\n    \"isAsset\": true\n}\n"
    },
    "readme": {
      "text": "# Alchemy\n\nThis module adds several kinds of herbs and the ability to brew potions with a variety of effects. The herbs are either\nprocedurally generated by the herbalism system or pre-defined by the developers. The herbalism system manages how herbs\nare grown and where they are generated onto the world. The brewable potions all originate from the Potions module.\n\nThe potion brewing process involves a HerbalismStation, and requires water, fuel, the prerequisite herbs for the\nrecipe, and a potion bottle. Please note that a more durable potion bottle will be able to be reused more times compared\nto less durable one.\n\nCredits for images:\n\nMortar and Pestle: https://commons.wikimedia.org/wiki/File:White-Mortar-and-Pestle.jpg\n\nSkull and Crossbones: https://commons.wikimedia.org/wiki/File%3ASkull_and_crossbones.svg"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMTM1OTA2NzI=",
    "name": "AlchemyPlantGenerator",
    "url": "https://github.com/Terasology/AlchemyPlantGenerator",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/680e697c8abc7e91724ca3b9ecd4e5bd924e7233d86da908211a30fe87d20fd1/Terasology/AlchemyPlantGenerator",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"AlchemyPlantGenerator\",\n    \"version\": \"1.0.0-SNAPSHOT\",\n    \"author\": \"Thomas O'Keeffe\",\n    \"displayName\": \"Alchemy - Plant Generator\",\n    \"description\": \"Simple module for spawning plants from the Alchemy module into the world.\",\n    \"dependencies\": [\n        { \"id\": \"Alchemy\", \"minVersion\": \"1.1.0\" }\n    ],\n    \"serverSideOnly\": false,\n    \"isWorld\": true\n}\n"
    },
    "readme": {
      "text": "# Overview\nAlchemyPlantGenertor is a simple module for spawning plants from the Alchemy module into the world using a plugin. Note: Because it is a plugin, this module doesn't contain a world generator. You *plug in* this module to your generator. Hence the name.\n\n# Dependencies\nJust [Alchemy](https://github.com/Terasology/Alchemy), really.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNzY0OTM3OQ==",
    "name": "AlterationEffects",
    "url": "https://github.com/Terasology/AlterationEffects",
    "description": "Allows for applying modifying effects to a player (or something else) that alters their base state in some fashion. Possible link to the typical \"Alteration\" school of magic common in RPG settings.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/7ce182b53e9f472954dbaae2e90586c3ba005076e1a5eb21f74c382a9455d235/Terasology/AlterationEffects",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"AlterationEffects\",\n    \"version\": \"1.2.0-SNAPSHOT\",\n    \"author\": \"Marcin Sciesinski <marcins78@gmail.com>, XTariq, Isaac (iojw)\",\n    \"displayName\": \"AlterationEffects\",\n    \"description\": \"Allows for applying effects to a player (or something else) that alter their base state in some fashion.\",\n    \"dependencies\": [\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        }\n    ],\n    \"isServerSideOnly\": false,\n    \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "# Alteration Effects module\nThe Alteration Effects module contains a set of status effects (buffs and debuffs) that can alter a player's base state in some fashion.\n\nThese are the `AlterationEffects` that current exist in the module:  \n- `HealthBoostAlterationEffect`- increases the maximum health of the player by a specified amount \n- `WaterBreathingAlterationEffect` - allows the player to breathe in water i.e. they do not take damage from staying in the water for too long\n- `DamageOverTimeAlterationEffect` - deals damage of a specified amount to the player at regular intervals \n- `CureAllDamageOverTimeAlterationEffect` - removes any damage over time effect on the play immediately\n- `CureDamageOverTimeAlterationEffect` - counteracts damage dealt by any damage over time effect on the player \n- `DecoverAlterationEffect` - prevents the player from healing from any source\n- `RegenerationAlterationEffect` - heals the entity for a specified amount at regular time intervals\n- `ResistDamageAlterationEffect` - reduces damage dealt of a specific type to the player by a specified amount \n- `GlueAlterationEffect` - reduces the player's movement speed by 10% and prevents them from jumping\n- `ItemUseSpeedAlterationEffect` - reduces cooldowns on items used by the player for a specified amount\n- `JumpSpeedAlterationEffect` - increases the speed of the player's jump by a specified amount i.e. they jump higher\n- `MultiJumpAlterationEffect` - allows to player to multi-jump in the iar for a specified nuber of times\n- `StunAlterationEffect` - prevents the player from moving or jumping\n- `SwimSpeedAlterationEffect` - increases the speed with which the players swims by a specified amount\n- `WalkSpeedAlterationEffect` - increases the speed with which the player walks by a specified amount\n\n# Usage\nAll `AlterationEffect` objects have two methods that you can use to apply the effects:\n\n`applyEffect(EntityRef instigator, EntityRef entity, float magnitude, long duration)`  \n`applyEffect(EntityRef instigator, EntityRef entity, String id, float magnitude, long duration)`\n\n`instigator` - the entity which applies the effect  \n`entity` - the entity the effect is applied on  \n`magnitude` - the magnitude of the effect  \n`duration` -  the duration of the effect, in milliseconds  \n`id` - an optional ID for certain effects which require them (e.g. ResistDamage)\n\nNot all alteration effects will make use of all these parameters. Take a look at the individual classes to see which parameters are used and how.\n\n# Example\nThe following example shows how you can initialise a StunAlterationEffect object and apply it on an entity.\n```java\n@In\nprivate Context context\n\npublic void applyStunEffect(EntityRef instigator, EntityRef player) {\n\n    StunAlterationEffect stunAlterationEffect = new StunAlterationEffect(context);\n\n    //the instigator applies a stun effect on the player for 10 seconds\n    //the magnitude parameter is not used by StunAlterationEffect\n    applyEffect(instigator, player, 0, 10000);\n\n}\n```"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk1OTM3NzkzNA==",
    "name": "Anatomy",
    "url": "https://github.com/Terasology/Anatomy",
    "description": "A basic anatomy system for players, NPCs, and creatures alike.",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/b685f398a3df7ba76f5292ba90b23538a1d9ca3cd8db95695fa1053c307bbf0c/Terasology/Anatomy",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Anatomy\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"XTariq\",\n    \"displayName\": \"Anatomy\",\n    \"description\": \"A basic anatomy system for players, NPCs, and creatures alike.\",\n    \"dependencies\": [\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isLibrary\": true,\n    \"isAugmentation\": true\n}\n"
    },
    "readme": {
      "text": "# Anatomy\nA basic anatomy system for players, NPCs, and creatures alike. Intended to be included with entities in other modules. It is made up of several sub-systems (Skeletal and Circulatory) working independently to provide different functionalities to the entity.\n\n### Adding sub-systems\nThe internal mechanics of a sub-system are entirely up to the content developer but a few things need to be followed to make it properly work along with the Anatomy system.\n\n- ##### Receiving the `AnatomyPartImpactedEvent`-\n  The Anatomy system receives the `OnDamagedEvent`, randomly allocates the damage to a body part and sends out the `AnatomyPartImpactedEvent` with the `partId` and damage details. \n  ```\n  @ReceiveEvent\n    public void onDamage(AnatomyPartImpactedEvent event, EntityRef entityRef, AnatomyComponent anatomyComponent) {\n  ```\n  The method used in the Skeletal and Circulatory sub-systems to utilise this was to store part healths and deduct the damage dealt from these part healths. This would also entail setting up a regen mechanism using the `DelayedActionTriggeredEvent`.\n  \n- ##### Adding effects to the `AnatomyStatusGatheringEvent`-\n  The `AnatomyStatusGatheringEvent` is sent by the Anatomy system to query sub-systems for the effects that they have applied to the various body parts. The `addEffect` method of the event can be used for this purpose by looping over the different parts.\n  ```\n  public void addEffect(String partId, String effect) {\n  ```\n  \n- ##### Resetting state when the player respawns-\n  When the player respawns, the `OnPlayerRespawnedEvent` is sent. This can be used to reset the part health values and effects. This is as simple as just removing the `InjuredBoneComponent` or its equivalent.\n  ```\n  @ReceiveEvent\n    public void onPlayerRespawn(OnPlayerRespawnedEvent event, EntityRef entityRef, InjuredBoneComponent injuredBoneComponent) {\n        entityRef.removeComponent(InjuredBoneComponent.class);\n    }\n  ```\n  "
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNjI0ODA4NQ==",
    "name": "AnotherWorld",
    "url": "https://github.com/Terasology/AnotherWorld",
    "description": "Alternative world generator",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/b8a83c824408f2aa15abaa488a7167ea7c4aa28fecdba68b2a709cbd57e04fab/Terasology/AnotherWorld",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"AnotherWorld\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"Marcin Sciesinski <marcins78@gmail.com>\",\n    \"displayName\": \"AnotherWorld\",\n    \"description\": \"Pluggable world generator. Structure (Ore) generation and various util classes are very heavily based on JRoush's implementation of CustomOreGen.\",\n    \"dependencies\": [\n        {\n            \"id\": \"BiomesAPI\",\n            \"minVersion\": \"4.0.0\"\n        },\n        {\n            \"id\": \"ClimateConditions\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"CoreWorlds\",\n            \"minVersion\": \"1.1.0\",\n            \"maxVersion\": \"3.0.0\"\n        }\n    ],\n    \"isServerSideOnly\": false,\n    \"isWorld\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkzNDM3Mzg5NA==",
    "name": "AnotherWorldPlants",
    "url": "https://github.com/Terasology/AnotherWorldPlants",
    "description": "Farming and tree growth for AnotherWorld",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/59f0f6949f01962bdfbf966d498d6244583529f4630224057ec8024555e5d2b4/Terasology/AnotherWorldPlants",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"AnotherWorldPlants\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Marcin Sciesinski <marcins78@gmail.com>, Esa-Petri\",\n  \"displayName\": \"Another World - Plants\",\n  \"description\": \"Farming and tree growth for AnotherWorld\",\n  \"dependencies\": [\n    {\n      \"id\": \"AnotherWorld\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"CoreAssets\",\n      \"minVersion\": \"2.0.1\"\n    },\n    {\n      \"id\": \"Drops\",\n      \"minVersion\": \"1.0.1\"\n    },\n    {\n      \"id\": \"GrowingFlora\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"PlantPack\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"StructuralResources\",\n      \"minVersion\": \"2.1.0\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isAsset\": true,\n  \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxOTMwMTYyNTM=",
    "name": "Apiculture",
    "url": "https://github.com/Terasology/Apiculture",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/a8080978aed0fc0222bfe39e4c1f0fdd618a133126f7939aaafe4f76679f7398/Terasology/Apiculture",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Apiculture\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Soundwave\",\n  \"displayName\": \"Apiculture\",\n  \"description\": \"This module adds logic and assets for bees and beekeeping\",\n  \"dependencies\": [\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"SoundyGenetics\",\n      \"minVersion\": \"1.0.0\"\n    }\n  ],\n  \"serverSideOnly\": false,\n  \"isAsset\": true,\n  \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMTIxNjY3ODQ=",
    "name": "BasicCrafting",
    "url": "https://github.com/Terasology/BasicCrafting",
    "description": "Terasology crafting revamped!",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/133800fc92f9333a72e20cc56ff5b8a7413a554b29374dcca9391368b8e33472/Terasology/BasicCrafting",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"BasicCrafting\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"jellysnake\",\n  \"displayName\": \"BasicCrafting\",\n  \"description\": \"Provides a framework for crafting and a simple crafting method\",\n  \"dependencies\": [\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"serverSideOnly\": false,\n  \"isLibrary\": true,\n  \"isAugmentation\": true\n}\n"
    },
    "readme": {
      "text": "![Basic Crafting](https://github.com/smsunarto/TerasologyDesign/blob/master/Art/Test%20Header.png?raw=true)\n---\nA module which allows greatly extensible crafting flavours with a centralised recipe store.\nAimed at being simple and as easy as possible to add recipes.\n\n# Features\nContains a simple to use List type flavour. This simply has a\nlist of inputs and a single output. If the player has all the\ninputs in their inventory then the output can be crafted.\n\nThis method supports multiple ways of specifying an item to\nallow for different items to be used as the same input.\n\nTo open up the crafting window press the `F` button\n\n# Developers\n\nFor information on adding a new [recipe](https://github.com/Terasology/BasicCrafting/wiki#adding-a-new-recipe) or [crafting flavour](https://github.com/Terasology/BasicCrafting/wiki#adding-a-new-crafting-flavour) please see [the wiki](https://github.com/Terasology/BasicCrafting/wiki).\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyOTQwNTgyMA==",
    "name": "Behaviors",
    "url": "https://github.com/Terasology/Behaviors",
    "description": "Store for an assortment of behaviors that can be applied to creatures",
    "homepageUrl": "https://terasology.github.io/Behaviors",
    "openGraphImageUrl": "https://repository-images.githubusercontent.com/29405820/723045f1-6592-44d5-a52e-151a5884b60c",
    "usesCustomOpenGraphImage": true,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Behaviors\",\n    \"version\": \"1.1.1-SNAPSHOT\",\n    \"author\": \"synopia, dkambersky\",\n    \"displayName\": \"Behaviors\",\n    \"description\": \"A set of behavior traits which could be applied to creatures and NPCs\",\n    \"dependencies\": [\n        {\n            \"id\": \"CoreWorlds\",\n            \"minVersion\": \"1.1.0\",\n            \"maxVersion\": \"3.0.0\",\n            \"optional\": true,\n            \"because\": \"tests/ClusterDebugger\"\n        },\n        {\n            \"id\": \"FlexiblePathfinding\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        }\n    ],\n    \"isServerSideOnly\": true,\n    \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "<div align=\"center\">\n<img src=\"./docs/_media/banner.png\">\n</div>\n\n_This is a module for [Terasology].\nIt provides a set of behavior traits that can be applied to creatures and NPCs._\n\n<h2 align=\"center\"><a href=\"https://terasology.github.io/Behaviors\">👉 Documentation 👈</a></h2>\n\n## Contributing\n\nWe welcome contributions to our modules, be it bug fixes or feature contributions. \nCheck out the [Contributor Guide][contributor-guide] on the main project wiki to learn more.\n\nTo check out this module (and all its dependencies) to your Terasology workspace run (in the workspace root):\n\n```\ngroovyw module recurse Behaviors\n```\n\nTo build a module JAR for just this module run (in the workspace root):\n\n```\ngradlew :module:Behaviors:jar\n```\n\nTo run all tests and static code checks for this module run (in the workspace root):\n\n```\ngradlew :module:Behaviors:check\n```\n\n### Documentation via gh-pages\n\nThe documentation of this module is build with [docsify]. \nIt is served via [gh-pages].\nTo preview the site you can either use the `docsify` [CLI tool](https://github.com/docsifyjs/docsify-cli) or just run a static server on the `docs` folder.\n\n<!-- References -->\n[Terasology]: https://github.com/MovingBlocks/Terasology\n[gh-pages]: https://pages.github.com/\n[docsify]: https://docsify.js.org/#/\n[contributor-guide]: https://github.com/MovingBlocks/Terasology/wiki/Contributor-Quick-Start\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNjI1OTI2MTc=",
    "name": "BiomesAPI",
    "url": "https://github.com/Terasology/BiomesAPI",
    "description": "An API module for working with biomes, i.e., thematic sections of the world.",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/7eb0a62a5c0fedd7dbbb5dfca45c15e2782b0fdcaee0b1dbd1a96852f8f0013b/Terasology/BiomesAPI",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"BiomesAPI\",\n  \"version\": \"4.1.1-SNAPSHOT\",\n  \"isReleaseManaged\": true,\n  \"author\": \"The Terasology Foundation\",\n  \"displayName\": \"BiomesAPI\",\n  \"description\": \"Provides API for working with biomes, i.e., thematic sections of world.\",\n  \"dependencies\": [\n    { \"id\": \"CoreAssets\", \"minVersion\": \"2.2.0\" }\n  ],\n  \"serverSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk1NDgzODc3NQ==",
    "name": "BlockDetector",
    "url": "https://github.com/Terasology/BlockDetector",
    "description": "Detect blocks!",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/d3922041ce92a4b83c3384614d2064d0fe3f1b96a5762d84fd4a6e768af0be76/Terasology/BlockDetector",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"BlockDetector\",\n  \"version\": \"1.4.0-SNAPSHOT\",\n  \"author\": \"rzats\",\n  \"displayName\": \"BlockDetector\",\n  \"description\": \"Adds a detector item that indicates the location of arbitrary blocks.\",\n  \"dependencies\": [\n    {\n      \"id\": \"CoreAssets\",\n      \"minVersion\": \"2.0.0\"\n    },\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"serverSideOnly\": false,\n  \"isAsset\": true,\n  \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "BlockDetector\n=============\n\nThis module implements an API for creating Detector items that indicate the location of arbitrary blocks and signal when a block is detected.\n\n## Usage\n\nSee [EasterEggDetectorSystem](src/main/java/org/terasology/blockdetector/easter/EasterEggDetectorSystem.java) for an annotated implementation example!\n\n## Credits\n\n[ScannerBeep.ogg](assets/sounds/ScannerBeep.ogg) by kalisemorrison @ [freesound](https://www.freesound.org/people/kalisemorrison/sounds/202530/).\n\n\n# Testing\n\nThis module comes with tests based on the [Terasology/ModuleTestingEnvironment](https://github.com/Terasology/ModuleTestingEnvironment) (MTE).\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzYwNzMyMw==",
    "name": "BlockNetwork",
    "url": "https://github.com/Terasology/BlockNetwork",
    "description": "Library module that adds functionality of grouping blocks into networks",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/5c9553e7afcd6b8345c1f7c95bf30055166cf4db47a83078b96e3f2bf77ad6fe/Terasology/BlockNetwork",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"BlockNetwork\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Marcin Sciesinski <marcins78@gmail.com>\",\n  \"displayName\": \"Block Networks\",\n  \"description\": \"Library module that adds functionality of grouping blocks into networks\",\n  \"dependencies\": [],\n  \"isServerSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNDEyMjUyMQ==",
    "name": "BlockPicker",
    "url": "https://github.com/Terasology/BlockPicker",
    "description": "An infinite inventory to build with",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/4f24bc46f2dc2d1a291230728d5a3276eba886db21071dbcce73318544b4ba67/Terasology/BlockPicker",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"BlockPicker\",\n  \"version\": \"1.2.0-SNAPSHOT\",\n  \"author\": \"The Terasology Foundation\",\n  \"displayName\": \"BlockPicker\",\n  \"description\": \"An infinite inventory to boost your creativity while building.\\n\\n'b' is the default keybinding to open the block picker\\n\\nUnstable module, only use with limited number of asset modules\",\n  \"dependencies\": [\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isAugmentation\": true,\n  \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "BlockPicker\n===========\n\nAn infinite inventory to build with\n\n![](/images/sample.png)\n\n![](/images/sample2.png)\n\n![](/images/sample3.png)\n\n![](/images/sample4.png)"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzg5NDk4NQ==",
    "name": "Books",
    "url": "https://github.com/Terasology/Books",
    "description": "Module introducing books and bookcases",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/bf02cf8acd112b9b268e9003ef4ec505098eb6cd04ffd38c357193e66b78be36/Terasology/Books",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Books\",\n  \"version\": \"1.2.0-SNAPSHOT\",\n  \"author\": \"nihal111, bi0hax, Waterpicker\",\n  \"displayName\": \"Books and Bookcases\",\n  \"description\": \"This module introduces logic and assets for books and bookcases\",\n  \"dependencies\": [\n    {\n      \"id\": \"CoreAssets\",\n      \"minVersion\": \"2.0.1\"\n    },\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isAsset\": true,\n  \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "# Books and Bookcases\n\nThis module adds the ability to read and write books, as well as store them in bookcases.\nThis module also adds the ability to edit books and their contents.\n\nThe following types of components can be made:\n* `Book`\n* `Bookcase`\n\n\n## Contribution\n\nUse `groovyw module get Books`to fetch the module.\n\n\n### Creating a Book\n\nTo create a book, create a prefab similar to ones found [Here](https://github.com/Terasology/Books/tree/master/assets/prefabs) and add the icon from [Here](https://github.com/Terasology/Books/tree/master/assets/textures).\nFor instance, to create a book called \"1984\", the prefab should look like:\n\n```json\n{\n  \"parent\" : \"engine:iconItem\",\n  \"Item\" : {\n    \"icon\" : \"Books:book\",\n    \"usage\" : \"ON_USER\"\n  },\n  \"DisplayName\" : {\n    \"name\" : \"1984\"\n  },\n  \"Book\" : {\n    \"tint\" : [245, 222, 179, 255]\n  },\n  \"InteractionTarget\": {},\n  \"InteractionScreen\": {\n    \"screen\": \"Books:BookScreen\"\n  }\n} \n```\n\nwhere `book.png` is the name of the icon in the prefabs folder.\n`DisplayName` and `Book` contain information relevant to how the book is displayed.\n`InteractionScreen` contains information relevant to how the book is interacted with.\nAll books should have usage set to `ON_USER`.\n\n### Creating a bookcase\n\nTo create a bookcase, create a prefab similar to the one found [Here](https://github.com/Terasology/Books/tree/master/assets/prefabs).\nFor example, a default bookshelf should look like:\n\n```json\n{\n  \"Bookcase\": {},\n  \"Inventory\": {\n    \"privateToOwner\": false,\n    \"itemSlots\": [\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n      0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n    ]\n  },\n  \"RetainBlockInventory\": {},\n  \"PlaySoundAction\": {\n    \"sounds\": \"engine:click\"\n  },\n  \"InteractionTarget\": {},\n  \"InteractionScreen\": {\n    \"screen\": \"inventory:containerScreen\"\n  },\n  \"Network\": {\n  }\n}\n```\n\nwhere `itemSlots` should be filled with 0s as it is empty.\n`privateToOwner` details whether or not other users have access to the bookshelf.\n`PlaySoundAction` contains the sound played for when the bookshelf is opened.\n`InteractionScreen` contains information of how the bookshelf should be interacted with.\n\n\n## Credits for images:\n- Quill - https://openclipart.org/detail/262818/vintage-feather-inkwell\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyODU2OTY2OA==",
    "name": "BoundlessWorlds",
    "url": "https://github.com/Terasology/BoundlessWorlds",
    "description": "World generation framework",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/383806b3c8c1ea8418dff5c55d7dfadfa57820c2bcd8e3b3cda21a3ab968834a/Terasology/BoundlessWorlds",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxOTk5NDU5MA==",
    "name": "Breathing",
    "url": "https://github.com/Terasology/Breathing",
    "description": "Allows entities to breathe (or drown/choke) in a particular medium",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/e879d1b373fdc164fad2843ed21c82497a1d80d6f4b477747ef6b4e80bb3fa43/Terasology/Breathing",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Breathing\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"Joseph Sessions <Josephtsessions@gmail.com>\",\n    \"displayName\": \"Breathing\",\n    \"description\": \"Allows entities to breathe and suffocate based on what mediums they are in.\",\n    \"dependencies\": [\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.0\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        }\n    ],\n    \"isServerSideOnly\": false,\n    \"isLibrary\": true,\n    \"isAugmentation\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzg5NTAzMQ==",
    "name": "CakeLie",
    "url": "https://github.com/Terasology/CakeLie",
    "description": "Cake and Candy stuff. Go to the Candy Mountain Cave Charlie !",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/c7f4906a7d96b67648a516db198cf2fbb59bd33c0948ef885099b6f8641e4e7a/Terasology/CakeLie",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"CakeLie\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Maternal Mathes.Wenzel@googlemail.com\",\n  \"displayName\": \"CandyBlocks\",\n  \"description\": \"Cake and Candy stuff. Go to the Candy Mountain Cave Charlie !\",\n  \"dependencies\": [],\n  \"isServerSideOnly\": false,\n  \"isAsset\": true,\n  \"isSpecial\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNDY4NDM3NA==",
    "name": "Caves",
    "url": "https://github.com/Terasology/Caves",
    "description": "Adds configurable caves to the world",
    "homepageUrl": "http://forum.terasology.org/threads/caves.1103",
    "openGraphImageUrl": "https://opengraph.githubassets.com/bb48e026e187526e5d556d4c24b4f81cb0cfaeb177c5cdcbec188b9abe1ef255/Terasology/Caves",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Caves\",\n    \"version\": \"1.2.0-SNAPSHOT\",\n    \"author\": \"Josharias\",\n    \"displayName\": \"Caves\",\n    \"description\": \"Adds configurable caves to the world\",\n    \"dependencies\": [\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        }\n    ],\n    \"isWorld\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNTk4NTY1NA==",
    "name": "ChangingBlocks",
    "url": "https://github.com/Terasology/ChangingBlocks",
    "description": "For supporting blocks that change through some sort of defined cycle, like crops, dust build-up, or just arbitrarily through configured options",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/0f01fee8161b824abc36ffc7256c76f3e380d44a72680836575da18b6c622ad0/Terasology/ChangingBlocks",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"ChangingBlocks\",\n  \"version\": \"1.1.1-SNAPSHOT\",\n  \"author\": \"The Terasology Foundation\",\n  \"displayName\": \"ChangingBlocks\",\n  \"description\": \"Allows blocks to become other blocks over time, or when their environment changes\",\n  \"dependencies\": [],\n  \"isServerSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "ChangingBlocks\n==============\n\nFor supporting blocks that change through some sort of defined cycle, like crops, dust build-up, or just arbitrarily through configured options\n\nProvide a list of block names and the game-time-in-milliseconds until the next block in the list is used.\nWhen the last block is reached, either loop back to the first one, or send an OnBlockSequenceComplete event.\n\nExample component to add to a prefab:\n\n    \"ChangingBlocks\" : {\n        \"blockFamilyStages\" : [\n            { \"key\": \"Crops:Corn1\", \"value\": 30000 },\n            { \"key\": \"Crops:Corn2\", \"value\": 30000 },\n            { \"key\": \"Crops:Corn3\", \"value\": 30000 },\n            { \"key\": \"Crops:Corn4\", \"value\": 30000 },\n            { \"key\": \"Crops:Corn5\", \"value\": 30000 },\n            { \"key\": \"Crops:Corn6\", \"value\": 30000 },\n            { \"key\": \"Crops:Corn7\", \"value\": 30000 }\n        ],\n        \"loops\" : false\n    }\n\nExample prefab to add to each block:\n\n    \"entity\" : {\n        \"prefab\" : \"Crops:Corn\",\n        \"keepActive\" : true\n    }\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkzNDk2Nzc0MQ==",
    "name": "CheatsForAll",
    "url": "https://github.com/Terasology/CheatsForAll",
    "description": "Simple override module that can be enabled to allow cheat commands for all players without admin setup",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/fa8db87db80e8800f28045e1dd5727544a806547d4e31265f41b3be9fe3c7976/Terasology/CheatsForAll",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"CheatsForAll\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Flo\",\n  \"displayName\": \"Cheats for all\",\n  \"description\": \"Gives all players that join the permission to use cheat commands. Can be used on servers to give expanded rights without admin setup\",\n  \"dependencies\": [],\n  \"isServerSideOnly\": false,\n  \"isSpecial\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNTEzNTcyNDI=",
    "name": "ChibiGooey",
    "url": "https://github.com/Terasology/ChibiGooey",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/03d7b1febc44b22028013c05452602bc45ab75c5fbbc4865093fea848cab7a0f/Terasology/ChibiGooey",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk3MzIzOTM0Nw==",
    "name": "ChiselBlocks",
    "url": "https://github.com/Terasology/ChiselBlocks",
    "description": "Textures - From Chisel!",
    "homepageUrl": "https://github.com/Drullkus/Chisel-Textures",
    "openGraphImageUrl": "https://opengraph.githubassets.com/c13f784b9a2dc2b6e95d3a8d851baed307eef925266f7dd3421e37be3f80d098/Terasology/ChiselBlocks",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"ChiselBlocks\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Drullkus\",\n  \"displayName\": \"Chisel Blocks\",\n  \"description\": \"A set of block textures from the popular MC mod Chisel\",\n  \"dependencies\": [],\n  \"serverSideOnly\": false,\n  \"isAsset\": true\n}\n"
    },
    "readme": {
      "text": "# Chisel-Textures\n\n## What is this?\n\nThis is a repository containing assets that any branch of Chisel wishes to use.\n\n## What you can do with these textures\n\nThey are licensed under Creative Commons BY-NC-SA 4.0. For the actual license, see [LICENSE.md](https://github.com/Drullkus/Chisel-Textures/blob/master/LICENSE.md).\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxOTQxNzU0Nw==",
    "name": "ChrisVolume1OST",
    "url": "https://github.com/Terasology/ChrisVolume1OST",
    "description": "Chris Köbke's volume I Terasology original soundtrack (OST) for use in-game. https://soundcloud.com/chriskoebke/sets/terasology-vol-1",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/e8897bcbb59bf66032457ad41711316f143f311763dc6e996d4cc28e8b8a9c30/Terasology/ChrisVolume1OST",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"ChrisVolume1OST\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Chris Köbke\",\n  \"displayName\": \"Chris' Terasology OST - Volume 1\",\n  \"description\": \"Official Terasology soundtrack by Chris Köbke, Volume I\",\n  \"dependencies\": [\n    {\n      \"id\": \"MusicDirector\",\n      \"minVersion\": \"1.0.0\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isAsset\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxOTQxNzU3OQ==",
    "name": "ChrisVolume2OST",
    "url": "https://github.com/Terasology/ChrisVolume2OST",
    "description": "Chris Köbke's volume II Terasology original soundtrack (OST) for use in-game. https://soundcloud.com/chriskoebke/sets/terasology-vol-2",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/1bbdb650c5306f226cd2d1aa0063ee3b388a05e50a5519a0cab28e5843981250/Terasology/ChrisVolume2OST",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"ChrisVolume2OST\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Chris Köbke\",\n  \"displayName\": \"Chris' Terasology OST - Volume 2\",\n  \"description\": \"Official Terasology soundtrack by Chris Köbke, Volume II\",\n  \"dependencies\": [\n    {\n      \"id\": \"MusicDirector\",\n      \"minVersion\": \"1.0.0\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isAsset\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNTAxMzkzOA==",
    "name": "Cities",
    "url": "https://github.com/Terasology/Cities",
    "description": "Procedural city & road placement",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/757cfdee6a8fab66efad951289b3f316f4d88d1b5c754b600de46443bc592f87/Terasology/Cities",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Cities\",\n    \"version\": \"1.2.0-SNAPSHOT\",\n    \"author\": \"msteiger\",\n    \"displayName\": \"City Generation Module\",\n    \"description\": \"This module adds several generators for human settlements and roads\",\n    \"dependencies\": [\n        {\n            \"id\": \"NameGenerator\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Fences\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"CommonWorld\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"StructuralResources\",\n            \"minVersion\": \"2.1.0\"\n        }\n    ],\n    \"isServerSideOnly\": false,\n    \"isWorld\": true\n}\n"
    },
    "readme": {
      "text": "\n## Cities\n\nA module that creates roads, settlements, etc. procedurally from random numbers.\n\n\n![image1](images/2013-12-18_fenced_house.jpg \"Several simple housings on a hillside with fences\")\n\n\nThis module contains a world generator `City Worlds` that creates grassland terrain based on random noise. This terrain is populated with randomly generated settlements of different sizes. \n\n\n### Setup\n\nTo see what it looks like, just add the module to your Terasology installation using \n\n    gradlew fetchModuleCities\n\t\nWhen the game starts, create a new world using the `City Worlds` generator and ... explore !\n\n\n### Overview\n\nThe world is partitioned into square-shaped `Sector`s. For every sector, up to three suitable locations for settlements are determined. \nLong-distance roads are added to connect them in a pair-wise manner. Then, lots (and smaller streets) are created around the center.\nFinally, buildings and city furniture are generated.\n\nBasically, every part of this module can be separated into three distinct parts:\n\n* A world entity definition, such as `RomanesqueChurch`, that contains all information on a particual model (size, height, windows, roof type, and so on). This is basically a POJO.\n\n* A generator that creates different instances of `RomanesqueChurch` based on random numbers.\n\n* A rasterizer that converts `RomanesqueChurch` instances into blocks. This is often a composite of several other rasterizers and a 3D brush.\n\n\n### Contributing\n\nActually, this is the fun part and it's really easy to do. Just create your own triple of entitiy definition, entity generation and entity rasterization to add a new element to the world. \n\n![image2](images/2013-12-29_church_aisles.jpg \"Small medieval settlement around a small church, protected by town walls\")\n\n\n### Debugging \n\nThere is a terrain generator `BoundaryGenerator` that creates a grid along sector and chunks borders (using magenta and black blocks).\n\nYou can also use the main method in this class to view the generated world in a 2D top-down perspective:\n\n    org.terasology.testing.SwingTest\n\t\n\n### Acknowledgements\n\nWe would like to thank [D. Gilbert of Object Refinery Limited](http://www.object-refinery.com) and Armin Joachimsmeyer for their friendly support.\n\t\n\n### Literature Overview\n\n* Introduction to Shape and Shape GrammerShape[Stiny 75/78/80]\nMathematical foundation on how to use rules to replace a shape with another\n\n* Introduction to Urban Simulation[WaddellUlfarsson]\ntbd\n\n\n* Procedural 3D Modeling of Cityscape[Middelhoff05]:\nThree distinct simulation types: L-Systems, agent-based and stochastic.\n\n* Grammar-based L-Systems with extensions (ParishMüller01)\nL-Systems with self-intersection detection\n\n* Interactive Geometric Simulation of 4D Cities[Weber+08]\nBased on [ParishMüller01], but more sophisticated.\n\n* Modeling the Appearance and Behaviour of Urban Spaces[Vanegas+09]\nNice survey on Roads, Buildings, Land Use and Rendering.\n\n\n* Procedural Modeling of Land Use In Cities[Lechner+05]\nUses 2D agent-based simulation with SimCity3000 vis.\n\n* Konzeption & Realisierung eines prozeduralen Ansatzes zur Erzeugung von Gebäuden (Janusch, 2007)\ntbd\n\n### License\n\nThis module is licensed under the [Apache 2.0 License](http://www.apache.org/licenses/LICENSE-2.0.html).\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNTcwMzcwNw==",
    "name": "ClimateConditions",
    "url": "https://github.com/Terasology/ClimateConditions",
    "description": "A module for managing temperature, humidity, and other climate factors",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/bd5c171bdf22b7e80fbc3b62f88d9f281de35294b4c9aac5adaf8df5771a1679/Terasology/ClimateConditions",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"ClimateConditions\",\n    \"version\": \"1.0.1-SNAPSHOT\",\n    \"author\": \"Marcin Sciesinski <marcins78@gmail.com>\",\n    \"displayName\": \"Climate Conditions\",\n    \"description\": \"Module that introduces humidity and temperature fields and their modifiers\",\n    \"dependencies\": [\n        {\n            \"id\": \"AlterationEffects\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"BiomesAPI\",\n            \"minVersion\": \"4.0.0\"\n        },\n        {\n            \"id\": \"CoreWorlds\",\n            \"minVersion\": \"1.1.0\",\n            \"maxVersion\": \"3.0.0\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Thirst\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"StructureTemplates\",\n            \"minVersion\": \"1.0.0\"\n        }\n    ],\n    \"isServerSideOnly\": true,\n    \"isLibrary\": true,\n    \"isAugmentation\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk3MzE5MTUyMA==",
    "name": "Climbables",
    "url": "https://github.com/Terasology/Climbables",
    "description": "Contains climbable blocks that can be placed in various ways.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/61778a99fa4de0e2c72cc7a9be31189d5aefbc43bb887c10483beea2d0ab4647/Terasology/Climbables",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Climbables\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"anthodeus\",\n  \"displayName\": \"Climbables\",\n  \"description\": \"This module creates additional climbable blocks and placement modes for them.\",\n  \"dependencies\": [\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"serverSideOnly\": false,\n  \"isAsset\": true,\n  \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "## Climbables\n\nA module that adds climbable blocks that can be placed in various ways. It offers a better way to reach heights or lows without the need of ladders.\n\nBlock added until now, commands to get them and role:\n- Scaffold (give scaffold) = Climbable stackable structure. Can only start from a corresponding support;\n- Scaffold Support (give scaffoldsupport) = Normal Block. Used to start stacking scaffolds;\n- Pole (give pole) = Climbable roping structure. Can only start from a corresponding support;\n- Pole Support (give polesupport) = Normal Block. Used to start roping poles;\n\nA group of scaffolds or ropes form a structure. Breaking any part of it will cause the remaining structure (away from the source) to be destroyed. Breaking the support will cause the whole thing to fall.\n\nMore advanced placing mechanics (structural integrity and such) will be added once movement will be refactored."
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk4NTkyNTYzNw==",
    "name": "CombatSystem",
    "url": "https://github.com/Terasology/CombatSystem",
    "description": "This module introduces combat system",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/a15a7223c4dbef8364bf7d03ebfea57b306186c3ceccc7f0ef27e2e07fdfff45/Terasology/CombatSystem",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"CombatSystem\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"0shine0\",\n    \"displayName\": \"CombatSystem\",\n    \"description\": \"This module introduces combat system\",\n    \"dependencies\": [\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"CoreWorlds\",\n            \"minVersion\": \"1.1.0\",\n            \"maxVersion\": \"3.0.0\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Sensors\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"StructureTemplates\",\n            \"minVersion\": \"1.0.0\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isAsset\": true,\n    \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "# CombatSystem\nThis module introduces combat system to create your own new weapons by using its framework or to use the weapons and traps already included in this module.\n\nYou may also checkout its [wiki](https://github.com/Terasology/CombatSystem/wiki) if you interested in understanding the structure of the code.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyMzUxNzQwOA==",
    "name": "CommonWorld",
    "url": "https://github.com/Terasology/CommonWorld",
    "description": "General world features usable by other modules",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/cca96e1651ac6b4b2c495d3894bca4697927e11f8e13129fab1cbb0e78f84c91/Terasology/CommonWorld",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"CommonWorld\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"msteiger\",\n  \"displayName\": \"Common World\",\n  \"description\": \"Provides common classes for different world generators\",\n  \"dependencies\": [],\n  \"isServerSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "\n## CommonWorld\n\nA module that provides common classes for different world generators.\n\n\n### License\n\nThis module is licensed under the [Apache 2.0 License](http://www.apache.org/licenses/LICENSE-2.0.html).\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk5NjkyNTI1NQ==",
    "name": "Compass",
    "url": "https://github.com/Terasology/Compass",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/6838b33620a01931aad7a54f8a19f4461ff9efa605fa58ea9b85f953bd35b2f8/Terasology/Compass",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Compass\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"The Terasology Foundation\",\n  \"displayName\": \"Compass\",\n  \"description\": \"This module augments Terasology with a Compass HUD element\",\n  \"dependencies\": [],\n  \"serverSideOnly\": false,\n  \"isAugmentation\": true\n}\n"
    },
    "readme": {
      "text": "# Compass"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkzNDcwMTYyOA==",
    "name": "ComputerMonitors",
    "url": "https://github.com/Terasology/ComputerMonitors",
    "description": "Yes, now you too can have a computer WITH a monitor, woo!",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/f9f22f7472cd862ac3be20a0b418c3aedc2182aba90207f43e747353d33e7a1a/Terasology/ComputerMonitors",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"ComputerMonitors\",\n  \"version\": \"1.1.1-SNAPSHOT\",\n  \"author\": \"Marcin Sciesinski <marcins78@gmail.com>\",\n  \"displayName\": \"Computer Monitors\",\n  \"description\": \"Adds computer monitors that can display any information using computers.\",\n  \"dependencies\": [\n    {\n      \"id\": \"MultiBlock\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"ModularComputers\",\n      \"minVersion\": \"1.0.0\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isAsset\": true,\n  \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk2MTY4ODUxOQ==",
    "name": "Cooking",
    "url": "https://github.com/Terasology/Cooking",
    "description": "Cook things!",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/32334be073104e2b854c71c4aa61367d3a139db4083bec13ee17e9590d473282/Terasology/Cooking",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Cooking\",\n  \"version\": \"1.2.0-SNAPSHOT\",\n  \"author\": \"Anarav, XTariq, apaukraine, cam943, Yashvardhan Sharma (KidCoder), Gautam Naik, gkaretka, kallentu, MadMate, sisukas-hiiri, SufurElite, J0hnCena, shardulc, gkaretka, S-ulphuric, TehTotalPwnage, smsunarto, Jinxin, JayGupta2003, Patrick Wang, Mandar Juvekar, Minege, Arpit Kamboj(digitalripperynr), He Who Shall Not Be Named (VaibhavBajaj), Marvel0usx, TwoTau, andriii25, PokeyOne, starwader\",\n  \"displayName\": \"Cooking\",\n  \"description\": \"A module that allows for the cooking of simple foods at certain Workstations.\",\n  \"dependencies\": [\n    {\n      \"id\": \"BasicCrafting\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"CoreAssets\",\n      \"minVersion\": \"2.0.1\"\n    },\n    {\n      \"id\": \"Drops\",\n      \"minVersion\": \"1.0.1\"\n    },\n    {\n      \"id\": \"Fluid\",\n      \"minVersion\": \"2.0.0\"\n    },\n    {\n      \"id\": \"Health\",\n      \"minVersion\": \"2.0.0-SNAPSHOT\"\n    },    \n    {\n      \"id\": \"Hunger\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"InGameHelpAPI\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"MultiBlock\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"PlantPack\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"Workstation\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"WorkstationCrafting\",\n      \"minVersion\": \"2.0.0\"\n    }\n  ],\n  \"serverSideOnly\": false,\n  \"isLibrary\": true,\n  \"isAsset\": true\n}\n"
    },
    "readme": {
      "text": "\nCooking\n============\n\nThis module adds several raw food items and the ability to cook food for better restoration of hunger and thrist.\n\nWarning: You may want to bump up the max RAM usable by Terasology when enabling this module. Otherwise, your game might\ncrash when openining the Cooking section of the help menu.\n\n## Contribution\n1. Run `groovyw module recurse Cooking` command while in the Terasology root folder to fetch and store the module locally. Then fork the module and add a remote reference using the command `git remote add <remote-name> <your fork>` in the `/module/Cooking` directory.  \n2. To **add a food item**, create a prefab similar to the ones [here](https://github.com/Terasology/Cooking/tree/master/assets/prefabs/food/raw).\n3. While adding an icon for the food item, make sure that either you've created the textures for the new items, or the source you retrieved them from is compatible with the Apache 2.0 license. In any case cite the resources you've used in [this README file](https://github.com/Terasology/Cooking/blob/master/README.md).\n4. Aim to keep the icons below 128x128 in resolution.\n5. To **add a recipe**, create a prefab similar to the ones [here](https://github.com/Terasology/Cooking/tree/master/assets/prefabs/recipe/cook).\n\nSend in PRs to this repository and feel free to add your name to the authors list in the [module.txt file](https://github.com/Terasology/Cooking/blob/master/module.txt).\n\n### Credits For Description & Images\n\nCredits for description & images are written in our [Wiki](https://github.com/Terasology/Cooking/wiki/Contributors).\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNjUxODg1OQ==",
    "name": "CopperAndBronze",
    "url": "https://github.com/Terasology/CopperAndBronze",
    "description": "So much fancier than Wood and Stone! And shiny",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/e2bc9946657a3a187f88ce3cfe5bf67b6dae491e459f65a3a277007eaf88e40b/Terasology/CopperAndBronze",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"CopperAndBronze\",\n  \"version\": \"1.2.1-SNAPSHOT\",\n  \"author\": \"Marcin Sciesinski <marcins78@gmail.com>, XTariq\",\n  \"displayName\": \"Copper and Bronze\",\n  \"description\": \"Improve your tools to copper, bronze, and brass!\",\n  \"dependencies\": [\n    {\n      \"id\": \"AnotherWorld\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"CoreAdvancedAssets\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"CoreAssets\",\n      \"minVersion\": \"2.0.1\"\n    },\n    {\n      \"id\": \"Drops\",\n      \"minVersion\": \"1.0.1\"\n    },\n    {\n      \"id\": \"Fences\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"GrowingFlora\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"Journal\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"PlantPack\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"Smithing\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"WorkstationCrafting\",\n      \"minVersion\": \"1.0.1\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isWorld\": true,\n  \"isAsset\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNjI1Njc4NjA=",
    "name": "CoreAdvancedAssets",
    "url": "https://github.com/Terasology/CoreAdvancedAssets",
    "description": "A collection of assets using and combining features from various (core) modules.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/79d3bd6ada5708d55cfa68e1b8c4fe123b895cac78bd4dc77302c2d06754fdaf/Terasology/CoreAdvancedAssets",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"CoreAdvancedAssets\",\n  \"version\": \"1.3.0-SNAPSHOT\",\n  \"isReleaseManaged\": true,\n  \"author\": \"The Terasology Foundation\",\n  \"displayName\": \"CoreAdvancedAssets\",\n  \"description\": \"A collection of assets using and combining features from various (core) modules.\",\n  \"dependencies\": [\n    {\n      \"id\": \"Drops\",\n      \"minVersion\": \"1.0.1\"\n    },\n    {\n      \"id\": \"Explosives\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"Furnishings\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"Health\",\n      \"minVersion\": \"2.0.0-SNAPSHOT\"\n    }\n  ],\n  \"serverSideOnly\": false,\n  \"isAsset\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxOTc5OTI3ODE=",
    "name": "CoreAssets",
    "url": "https://github.com/Terasology/CoreAssets",
    "description": "Basic textures, sounds, and templates for Terasology's Core gameplay.",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/7bdca39c9e4902f360dd4df605cb269cfab4baae397f7adc9bc2abe9b68b0715/Terasology/CoreAssets",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"CoreAssets\",\n  \"version\": \"2.3.0-SNAPSHOT\",\n  \"isReleaseManaged\": true,\n  \"displayName\": \"Core Assets\",\n  \"description\": \"An asset module providing prefabs, block definitions and a collection of textures, sounds, and other basic assets\",\n  \"dependencies\": [],\n  \"serverSideOnly\": false,\n  \"isAsset\": true\n}\n"
    },
    "readme": {
      "text": "The CoreAssets module contains basic prefabs, block definitions and further assets that are required by other modules, like sounds, templates, and textures.\n\nCoreAssets was separated from the [Core](https://github.com/MovingBlocks/Terasology/tree/develop/modules/Core) to make the modules more versatile.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxOTY4Njc4NTI=",
    "name": "CoreRendering",
    "url": "https://github.com/Terasology/CoreRendering",
    "description": "The essential rendering module needed for clients, containing all basic rendering nodes to display the world.",
    "homepageUrl": "https://terasology.github.io/CoreRendering",
    "openGraphImageUrl": "https://opengraph.githubassets.com/670297876f6e413ea58eac18e8fabda8984095175653d9df154e1d1b40a8a8b4/Terasology/CoreRendering",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"CoreRendering\",\n  \"version\": \"1.1.2-SNAPSHOT\",\n  \"isReleaseManaged\": true,\n  \"author\": \"The Terasology Foundation\",\n  \"displayName\": \"Core Rendering\",\n  \"description\": \"The essential rendering module needed for clients, containing all basic rendering nodes to display the world.\",\n  \"dependencies\": [],\n  \"serverSideOnly\": false,\n  \"isRendering\": true\n}\n"
    },
    "readme": {
      "text": "<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/Terasology/CoreRendering/develop/docs/_media/banner.png\">\n</div>\n\n_This is a module for [Terasology].\nIt adds a directed acyclic graph (DAG) for rendering nodes of various kinds to the engine._\n\n<h2 align=\"center\"><a href=\"https://terasology.github.io/CoreRendering\">👉 Documentation 👈</a></h2>\n\n## Contributing\n\nWe welcome contributions to our modules, be it bug fixes or feature contributions.\nCheck out the [Contributor Guide][contributor-guide] on the main project wiki to learn more.\n\nTo check out this module (and all its dependencies) to your Terasology workspace run (in the workspace root):\n\n```\ngroovyw module recurse CoreRendering\n```\n\nTo build a module JAR for just this module run (in the workspace root):\n\n```\ngradlew :module:CoreRendering:jar\n```\n\nTo run all tests and static code checks for this module run (in the workspace root):\n\n```\ngradlew :module:CoreRendering:check\n```\n\n### Documentation via gh-pages\n\nThe documentation of this module is build with [docsify].\nIt is served via [gh-pages].\nTo preview the site you can either use the `docsify` [CLI tool](https://github.com/docsifyjs/docsify-cli) or just run a static server on the `docs` folder.\n\n<!-- References -->\n[Terasology]: https://github.com/MovingBlocks/Terasology\n[gh-pages]: https://pages.github.com/\n[docsify]: https://docsify.js.org/#/\n[contributor-guide]: https://github.com/MovingBlocks/Terasology/wiki/Contributor-Quick-Start\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNjI1ODQ1ODI=",
    "name": "CoreSampleGameplay",
    "url": "https://github.com/Terasology/CoreSampleGameplay",
    "description": "Minimal gameplay template. Little content but a few starting items.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/5d5d098250cfa65466d3e4012905344eee4ef4bec702382172bc3c61b5f1434c/Terasology/CoreSampleGameplay",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"CoreSampleGameplay\",\n    \"version\": \"4.1.1-SNAPSHOT\",\n    \"isReleaseManaged\": true,\n    \"displayName\": \"Core Gameplay\",\n    \"description\": \"Minimal gameplay template. Little content but a few starting items.\",\n    \"dependencies\": [\n        {\n            \"id\": \"CoreAdvancedAssets\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.0\"\n        },\n        {\n            \"id\": \"CoreRendering\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"CoreWorlds\",\n            \"minVersion\": \"1.1.0\",\n            \"maxVersion\": \"3.0.0\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.2.1\"\n        }\n    ],\n    \"isGameplay\": \"true\",\n    \"defaultWorldGenerator\": \"CoreWorlds:FacetedSimplex\"\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNjA2NjcwODU=",
    "name": "CoreWorlds",
    "url": "https://github.com/Terasology/CoreWorlds",
    "description": "A basic set of example world generators and facades.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/f91d04b556c8c7bb878ebd54563dc922a401ac0ef346b0b60aa3ebd5ea8a40e6/Terasology/CoreWorlds",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"CoreWorlds\",\n    \"version\": \"2.1.0-SNAPSHOT\",\n    \"isReleaseManaged\": true,\n    \"author\": \"The Terasology Foundation\",\n    \"displayName\": \"CoreWorlds\",\n    \"description\": \"A basic set of world generators and facets.\",\n    \"dependencies\": [\n        {\n            \"id\": \"BiomesAPI\",\n            \"minVersion\": \"4.1.0\"\n        },\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.1.0-SNAPSHOT\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isWorld\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNDUyNDM0OQ==",
    "name": "CustomOreGen",
    "url": "https://github.com/Terasology/CustomOreGen",
    "description": "A library for ore generation.  Based on JRoush's implementation of CustomOreGen.",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/3188abd09b7bd0fa10fb756d50dde54c01a70d4e7f15137ec4a8f1d4fbdc5a21/Terasology/CustomOreGen",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"CustomOreGen\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"Josharias\",\n    \"displayName\": \"CustomOreGen\",\n    \"description\": \"A library for adding ore generation\",\n    \"dependencies\": [],\n    \"isServerSideOnly\": false,\n    \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk0ODAyNDAxNw==",
    "name": "DamagingBlocks",
    "url": "https://github.com/Terasology/DamagingBlocks",
    "description": "Adds support for blocks that can cause damage (such as lava)",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/c5222bdf5294ffb64cb27406ed222136a9e6404b6dff1e43650ba6f4700fe0b8/Terasology/DamagingBlocks",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"DamagingBlocks\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"Sérgio Domingues <sergio.mieic@gmail.com>\",\n    \"displayName\": \"DamagingBlocks\",\n    \"description\": \"Allows players to take damage from blocks.\",\n    \"dependencies\": [\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        }\n    ],\n    \"isServerSideOnly\": false,\n    \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "# DamagingBlocks\n\n## Goal: \nTo allow modders to create blocks which cause damage to players upon physically touching them or destroy objects which land on the blocks (i.e. Lava or Cacti)\n\n## Usage:\n\nThe DamagingBlocks module uses a component and a system. For more information regarding components and systems, please check out https://github.com/MovingBlocks/Terasology/wiki/Entity-System-Architecture\n\nEssentially, the custom block's prefab would have a DamagingBlockComponent attached and the DamageSystem would apply the damage or destroy the item.\n\n## DamagingBlockComponent\n\nDefines the rate and amount of damage which would be inflicted on the player.\n\n<pre>\npublic class DamagingBlockComponent implements Component<DamagingBlockComponent> {\n    public int timeBetweenDamage = 1000;        //The rate (value in milliseconds) at which the damage is inflicted\n    public int blockDamage;                     //The damage the block inflicts to the player\n}\n</pre>\n\n## DamageSystem\n\nThe DamageSystem is the code which applies the damage to players or destroys blocks if on DamagingBlocks.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNDc4MDQ3Mw==",
    "name": "DangerMod",
    "url": "https://github.com/Terasology/DangerMod",
    "description": "Part of the process to support OreSpawn content from TheyCallMeDanger",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/3a2c0351c43f97017741cf57318e435437424be36e2f35d6ba3addbdabf48266/Terasology/DangerMod",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNjA3MDU5NjU=",
    "name": "Debugging",
    "url": "https://github.com/Terasology/Debugging",
    "description": "Convenience tools and helpers for in-game debugging.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/804804523c6dbd9c20d903a518ef3825e8ce391feb433f496f01151761c900bf/Terasology/Debugging",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk0MzczMzM4Nw==",
    "name": "Dialogs",
    "url": "https://github.com/Terasology/Dialogs",
    "description": "In-Game Dialogs (with NPCs)",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/1fd4451970d0517bf2e6ab0a40077e7b4f88567f19c090a2a7db10c3e1ccc261/Terasology/Dialogs",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Dialogs\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"msteiger\",\n  \"displayName\": \"Dialogs\",\n  \"description\": \"Add in-game dialogs between player and NPC\",\n  \"dependencies\": [],\n  \"serverSideOnly\": false,\n  \"isAugmentation\": true,\n  \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "\n## Dialogs\n\nA module that user interfaces for in-game dialogs.\n\n![image1](images/2015-10-14_screenshot.png \"Light and Shadow Team Selection Dialog\")\n\n\n### How to use the `Dialog` Component\n\nLike every other component, the `Dialog` component needs to be placed in a [Prefab](https://github.com/Terasology/TutorialAssetSystem/wiki/Prefab-based-Configuration). It needs to specify a `firstPage` and at least one `page` with one `response`:\n\n```json5\n    \"Dialog\": {\n        \"firstPage\": \"main\",\n        \"pages\": [\n            {\n                \"id\": \"main\",\n                \"title\": \"Welcome\",\n                \"paragraphText\": [\n                    \"This is the first part of this conversation.\"\n                ],\n                \"responses\": [\n                    {\n                        \"text\": \"Very well..\",\n                        \"responseImage\": \"engine:bubble\",\n                        \"action\": {\n                            \"class\": \"Dialogs:CloseDialogAction\"\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n```\n\nA `page` requires an `id` with which it can be identified, for instance to be configured as the first page or to be referenced in a response that links to it.\nPages further should have a `title`, a `paragraphText`, and `responses`.\n\nResponses are `PlayerAction`s that the player can initiate to continue the conversation, end it or start a new one. Which action a response will trigger depends on its `action` property. The following options are currently present:\n- `ChangeDialogAction`\n- `CloseDialogAction`\n- `NewDialogAction`\nPlease note, that additional actions might've been added to https://github.com/Terasology/Dialogs/tree/develop/src/main/java/org/terasology/dialogs/action.\n\nThe player cannot see in-game which action a response will trigger, so please make sure to formulate the response's `text` clearly and leverage indicative icons as the response's `responseImage`, for instance a ❎ to indicate a response will end the conversation.\n\n\n### License\n\nThis module is licensed under the [Apache 2.0 License](http://www.apache.org/licenses/LICENSE-2.0.html).\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk4NjI3MzE4OA==",
    "name": "Drills",
    "url": "https://github.com/Terasology/Drills",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/1fa12b8af78172a49368b69b6cbd4ebdea812b642f85612c60d1553f67bdb09d/Terasology/Drills",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMTcyMDIxOTg=",
    "name": "Drops",
    "url": "https://github.com/Terasology/Drops",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/e75a196d2f8152b74754045b24f6530cdf04e6f43de35b5139935882bbc8e223/Terasology/Drops",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Drops\",\n  \"version\": \"1.2.0-SNAPSHOT\",\n  \"isReleaseManaged\": true,\n  \"author\": \"The Terasology Foundation\",\n  \"displayName\": \"Drops\",\n  \"description\": \"This library module provides means to drop objects (items or blocks) on destruction, create loot groups and get random loot for a specified loot group on request.\",\n  \"dependencies\": [],\n  \"serverSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNTg1MjI0Nw==",
    "name": "Durability",
    "url": "https://github.com/Terasology/Durability",
    "description": "A library for items and blocks to go poof after much use",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/57e5a032c862313f9a08402e6ac9308946772b36c5e3781fa5be061032a73706/Terasology/Durability",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Durability\",\n  \"version\": \"1.2.0-SNAPSHOT\",\n  \"author\": \"MarcinSc,Josharias\",\n  \"displayName\": \"Durability\",\n  \"description\": \"A library for items and blocks to go poof after much use\",\n  \"dependencies\": [\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk1OTUwMTM3OA==",
    "name": "DynamicCities",
    "url": "https://github.com/Terasology/DynamicCities",
    "description": "Cities that get fancy!",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/39962b11972d9f867df4a74333e10ec3487c44d66d5074f0874b2d964c00b797/Terasology/DynamicCities",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"DynamicCities\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"Cpt Crunchy\",\n    \"displayName\": \"Dynamic Cities\",\n    \"description\": \"Simulates complex city development over progressing game time based on the worlds resources. Needs a city culture to actually create cities.\",\n    \"dependencies\": [\n        {\n            \"id\": \"BiomesAPI\",\n            \"minVersion\": \"4.0.0\"\n        },\n        {\n            \"id\": \"Cities\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"CommonWorld\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"CoreAdvancedAssets\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"CoreWorlds\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Economy\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Minimap\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"ModuleTestingEnvironment\",\n            \"minVersion\": \"0.3.2\",\n            \"optional\": true\n        },\n        {\n            \"id\": \"NameGenerator\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"StructureTemplates\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"StructuralResources\",\n            \"minVersion\": \"2.1.0\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"defaultWorldGenerator\": \"DynamicCities:DynamicCities\",\n    \"isWorld\": true\n}\n"
    },
    "readme": {
      "text": "Dynamic City Generation\n=======================\n\nIntroduces growing cities with distingushiable districts and a population simulation.\nIt supports building generators from cities module and structured template.\nFor a full feature list and a modder guide see the wiki.\nThis [techdemo](https://www.youtube.com/watch?v=feEMmo1pRSY&feature=youtu.be) provides a quick overview and some time lapse videos covering the growth cycle of cities.\n\n\n![sc1](/images/niceCity1.jpg)\n![sc2](/images/niceCity5.jpg)\n\nThis module originates from the GSOC 2016 Project Citysimulation by [CptCrispyCrunchy](https://github.com/CptCrispyCrunchy) with [Skaldarnar](https://github.com/skaldarnar) and [msteiger](https://github.com/msteiger) as mentors.\n\n### Images\nThe building icon image was taken from http://www.iconsmind.com (Linkware License)\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk2Mzk4NTUxMw==",
    "name": "Economy",
    "url": "https://github.com/Terasology/Economy",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/ea0e70a786576be58a007a07533b05cc6028a79b47b2b04eeb8ce57a18762949/Terasology/Economy",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Economy\",\n  \"version\": \"1.2.0-SNAPSHOT\",\n  \"author\": \"Cpt Crunchy\",\n  \"displayName\": \"Economy\",\n  \"description\": \"Utility module to give entities the ability to trade / produce and consume resources. A simple trading interface and currency will be introduced. Additionally the market should react to the availability of resources by adjusting the prices accordingly.\",\n  \"dependencies\": [\n    {\n      \"id\": \"CoreAdvancedAssets\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"CoreAssets\",\n      \"minVersion\": \"2.0.1\"\n    },\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"serverSideOnly\": false,\n  \"isLibrary\": true,\n  \"isAugmentation\": true\n}\n"
    },
    "readme": {
      "text": "# Economy\n\nThis module aims to provide a very generic framework to simulate an economy with consumers and producers. On top of that however, it provides a robust method to share/trade/exchange resources between entities. It does so under a very libertarian credo: Use any storage component you want.\n\nTo see how you can get started with it and how you can hook it into your module see the [wiki](https://github.com/Terasology/Economy/wiki)!\n\n## Features\n\n### Optional Shop Screen\n\nThis module can provide an alternative _Inventory Screen_ that displays an in-game shop with purchasable items in \naddition to the regular player inventory. Whether this alternative screen is shown depends on the presence (or absence) \nof the `AllowShopScreenComponent` on a client entity.\n\n**By default, clients cannot see the alternative shop screen.**\n\nTo enable it, add an event handler to ensure that joining clients will have the `AllowShopScreenComponent` attached to\ntheir entity. You may use the following code snippet and add it to a registered system.\n\n```java\n/**\n * Ensure that the client has the {@link AllowShopScreenComponent} such that they can use the in-game shop from the Economy module.\n * @param event connection event when a client (and their player) joins a game/server\n * @param entity the client entity\n */\n@ReceiveEvent\npublic void onConnect(ConnectedEvent event, EntityRef entity) {\n    entity.upsertComponent(AllowShopScreenComponent.class, c -> c.orElse(new AllowShopScreenComponent()));\n}\n```\n\n## Credits\n\nGold coin: https://openclipart.org/detail/227733/pixel-gold-coin\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMDg5NDY5MTQ=",
    "name": "EdibleFlora",
    "url": "https://github.com/Terasology/EdibleFlora",
    "description": "Adds a selection of common fruits to the world using SimpleFarming",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/cc81937c1761cef5c29d0231afb267eb1b99596501f2e0f4e1bccfccc4557eb9/Terasology/EdibleFlora",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"EdibleFlora\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"jellysnake\",\n    \"displayName\": \"Edible Flora\",\n    \"description\": \"Adds a small number of edible produce which can be grown using SimpleFarming\",\n    \"dependencies\": [\n        {\n            \"id\": \"BasicCrafting\",\n            \"minVersion\": \"1.0.0\",\n            \"optional\": true\n        },\n        {\n            \"id\": \"CoreWorlds\",\n            \"minVersion\": \"1.1.0\",\n            \"maxVersion\": \"3.0.0\"\n        },\n        {\n            \"id\": \"Hunger\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"SimpleFarming\",\n            \"minVersion\": \"2.1.0\"\n        },\n        {\n            \"id\": \"Thirst\",\n            \"minVersion\": \"1.0.0\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isAsset\": true\n}\n"
    },
    "readme": {
      "text": "# Edible Flora\n\nThis module adds a basic set of farming bushes and a simple progression to grow more advanced produce. It uses [Simple Farming](http://github.com/Terasology/SimpleFarming), [Hunger](http://github.com/Terasology/Hunger) and [Thirst](http://github.com/Terasology/Thirst).\n\n# Player Guide\n\n## Getting Started\nBefore you can grow anything you're going to need something to plant. Scattered around the world you will find some wild seed bushes. These drop a random produce when they're destroyed which you can then plant.\nOnce you've broken a few bushes you'll want to plant them by **right clicking** at the ground. The bush will grow and once it reaches it's final stage it you can harvest it using **E**  \nIf you want more advanced bushes that restore more then you can craft the seeds together. Press **N** to open up the crafting window. In here you can select a recipe and press the **Craft** button to attempt to craft the item. If successful, you can then plant the result as normal and reap ypur rewards.\n\nIf you break the bush in anything other than the last stage it will be destroyed without dropping anything, so be careful.\n\n## Dealing with vines\nVines are planted exactly the same as bushes, but grow to be up to 20 blocks long. They grow randomly but will avoid walls, so you can use that to direct them. Along their length they will spawn 'buds' these are exactly the same as bushes and are how you can harvest items from the vine.  \nBe careful, if you break a block on the vine, everything down of the root will also be destroyed, including the buds. (but it will all grow back)\n\n# Getting more content\nIf you are after more plants to grow then check out the [Additional Vegetables](http://github.com/Terasology/AdditionalVegetables) and [Additional Fruits](http://github.com/Terasology/AdditionalFruits) modules\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk3NDMwODIzNw==",
    "name": "EdibleSubstance",
    "url": "https://github.com/Terasology/EdibleSubstance",
    "description": "Allows substances to be tagged as edible and consumed",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/163f914f3c807b60bea54f76d953d2a893a989dc02e35b783604bccc0241c1c2/Terasology/EdibleSubstance",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"EdibleSubstance\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Josharias\",\n  \"displayName\": \"EdibleSubstance\",\n  \"description\": \"Allows substances to be tagged as edible and consumed\",\n  \"dependencies\": [\n    {\n      \"id\": \"Fluid\",\n      \"minVersion\": \"2.0.0\"\n    },\n    {\n      \"id\": \"Hunger\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"SubstanceMatters\",\n      \"minVersion\": \"2.0.0\"\n    },\n    {\n      \"id\": \"Thirst\",\n      \"minVersion\": \"1.0.0\"\n    }\n  ],\n  \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk2MjA5NjMzNQ==",
    "name": "Equipment",
    "url": "https://github.com/Terasology/Equipment",
    "description": "Stuff to wear that grants stat and other boosts.",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/9bbc979767d0b7d2d8a716f9dc1073f8fde9470dd2fb583a57741014362bc9a3/Terasology/Equipment",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Equipment\",\n    \"version\": \"1.3.0-SNAPSHOT\",\n    \"author\": \"XTariq, Aditya Singh, ElBatanony, Gautam Naik, iojw (Isaac), Mandar Juvekar, gkaretka, Patrick Wang, smsunarto, Arpit Kamboj(digitalripperynr), Tim Verhaegen (xTimPugz), kallentu, Minege, NicholasBatesNZ,SufurElite, He Who Shall Not Be Named (VaibhavBajaj), meganyyu, PokeyOne, Marvel0usx\",\n    \"displayName\": \"Equipment\",\n    \"description\": \"A basic system allowing for characters to have equipment.\\n\\nAlso, lots of equipment assets.\",\n    \"dependencies\": [\n        {\n            \"id\": \"AlterationEffects\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"ClimateConditions\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"ManualLabor\",\n            \"minVersion\": \"1.3.0\",\n            \"optional\": true\n        },\n        {\n            \"id\": \"PhysicalStats\",\n            \"minVersion\": \"1.0.0\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isLibrary\": true,\n    \"isAsset\": true\n}\n"
    },
    "readme": {
      "text": "Equipment\n============\n\nThis module adds a basic equipment system, a character screen, and a few pieces of example equipment.\n\nCredits for images:\n\n* http://opengameart.org/content/pixelart-basic-hero-equipments-icons\n* http://opengameart.org/content/melee-weapons\n* http://opengameart.org/content/scimitar-sword\n* http://opengameart.org/content/war-axe-64x64\n* http://opengameart.org/content/golden-items-rip-upgrade-pack\n* GreatSword inspired by: https://www.amazon.com/Cold-Steel-Handed-Great-Sword/dp/B000Q9GD2Y\n* GoldDagger inspired by: https://www.pinterest.com/pin/109353097179198323/\n* Falchion: http://opengameart.org/content/32x-sword-icon\n* GoldRing.png by Camellia, original work\n* WoodenNunchaku.png, IronNunchaku.png, SilverChain.png, CentsGoldChain.png and BeethovensKeyFromPiano.png by gkaretka\n* Gold and Wooden Mace Inspired by: http://poisonedaxiom.deviantart.com/art/Minecraft-Arsenal-303630313\n* Silver Mace Inspired by: http://lotrminecraftmod.wikia.com/wiki/File:Winged_Dalish_Mace.png\n* Steel Mace Inspired by: https://sites.google.com/site/auraofzephyr/gallery\n* Bronze Mace Inspired by: http://www.planetminecraft.com/blog/hackmine-motivation/\n* Copper Mace Inspired by: http://minecraft.novaskin.me/gallery/tag/mace?next=E-ABAOsB8gEKdm90ZV9jb3VudPoBAggA7AHrAfIBBWFkZGVk-gEJCMKIt4WvwbgC7AGCAh1qDHN-c2tpbmVkaXRvcnINCxIEU2tpbhi3uMwKDBQ=\n* Mystic Mace Inspired by: http://www.keyword-suggestions.com/cmVkIG1hdHRlciBoYW1tZXI/\n* Iron Mace Inspired by: http://www.keyword-suggestions.com/bWluZWNyYWZ0IG1hY2U/\n* Iron Keris (Resized & Modified): https://commons.wikimedia.org/wiki/File:Semar_Kris_(no_background).png\n* Mystic Necklace (Cropped & Resized): https://pixabay.com/p-665691/?no_redirect\n* Walking Cane Inspired by: http://dontstarve.wikia.com/wiki/Walking_Cane\n* WalkingCane.png by ElBatanony\n* Maul Art by ElBatanony\n* Steel Hatchet by Ian Santin\n* Gold Ring of Survival by Mandar Juvekar (mjuvekar7) \n* Gold Spear, Gold Strength n Luck by Arpit Kamboj (digitalripperynr)\n* Iron War Hammer by Dane Claessen (Dane99)\n* Mystic Flower Ring by Dane Claessen (Dane99) \n* WoodPendant.png, BronzePendant.png, CopperPendant.png, IronPendant.png, SteelPendant.png, SilverPendant.png, GoldPendant.png, and MysticPendant.png Created by: Patrick Wang\n* Iron Scythe: https://openclipart.org/detail/86677/scythe-64x64-icon\n* Laser Sword: https://commons.wikimedia.org/wiki/File:Lightsaber_blue.svg \n* Mystic Pendant of Endurance edited by NicholasBatesNZ from: https://pixabay.com/p-1430952/?no_redirect\n* Archangel's Fury: https://commons.wikimedia.org/wiki/File:Fist.svg (Resized)\n* Archangel's Heart: Original (Jellysnake)\n* Gold Ring of Swiftness by Jeff Sieu\n* CopperSabre: https://pixabay.com/en/sabre-sword-poland-history-king-1859774/\n* Katana: https://pixabay.com/en/katana-japan-ninja-samurai-sword-154938/\n* Iron Espee bastard sword :https://openclipart.org/detail/169233/classic-medieval-sword\n* Steel Sword: https://pixabay.com/en/sword-knight-fantasy-middle-ages-1762560/ (Rezised)\n* Gold Katana, Diamond Katana and Magic Gold Necklace by Minege\n* DiamondShieldArmor : https://pixabay.com/en/shields-protection-armor-badge-150633/ (Resized)\n* SteelDamascus: https://pixabay.com/en/blade-knife-sharp-weapon-hunter-158221/ (Resized) \n* MysticDigger by capybara512, original work (using color palette of existing mystic items)\n* SilverPen: https://pixabay.com/en/pen-compose-indite-writer-33237/\n* Gold Ring of Nimbleness: https://openclipart.org/detail/3967/ring\n* Mystic Espee bastard :https://openclipart.org/detail/4472/jeweled-sword\n* Steel Sabre made by SufurElite\n* Steel Battle Axe of Agility is the steel battle axe edited by SufurElite\n* Steel Armor: https://pixabay.com/en/shield-swords-knight-medieval-309126/(Resized)\n* Lucky Copper Sword: https://openclipart.org/detail/2664/sword-or-yellow\n* LegendaryBrahmastra: https://pixabay.com/en/bow-arrow-shaft-bolt-weapon-sport-307275/\n* ArchangelFryingPan: https://pixabay.com/en/pan-cook-sear-frying-pan-554072/\n* Flaming Sword: made by BenjaminAmos (own work)\n* Wooden Bo Staff: Made by TheJYKoder (own work)\n* Diamond Ring of Juggernauts: Made by TheJYKoder (own work)\n* Legendary Lightsaber: Made by meganyyu (own work)\n* Cursed Pendant Of Luck: made by BenjaminAmos (own work)\n* Gold Badge of Luck: made by Anish Sharma (own work)\n* Wooden Ring of Strength: made by PokeyOne (own work)\n* Gold Infinity: https://pixabay.com/en/infinity-infinite-repeating-loop-1837437/\n* Diamond Longsword: Original by zehata\n* Zweihander: By Max Borsch (own work)\n* GoldAxe: mdj117 own work\n* SilverSabre.png by Marvel0usx\n* Diamond Axe: Made by TheJYKoder (own work)\n* Diamond Dagger: Made by TheJYKoder (own work)\n* Diamond Gloves: Made by TheJYKoder (own work)\n* Diamond Helmet: Made by TheJYKoder (own work)\n* Diamond Mace: Made by TheJYKoder (own work)\n* Diamond Maul: Made by TheJYKoder (own work)\n* Diamond Nunchaku: Made by TheJYKoder (own work)\n* Diamond Spear: Made by TheJYKoder (own work)\n\nCredits for sounds:\n\nInventory Sounds (by artisticdude): http://opengameart.org/content/inventory-sound-effects\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk3NjIyMjU5OA==",
    "name": "EquipmentSmithing",
    "url": "https://github.com/Terasology/EquipmentSmithing",
    "description": "Crafting module for smithing equipment",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/f3cf4dc1b6e2dd547edaaa80ad4d1baf51102958d0e8182014724f779eb6e317/Terasology/EquipmentSmithing",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"EquipmentSmithing\",\n  \"version\": \"1.2.0-SNAPSHOT\",\n  \"author\": \"XTariq\",\n  \"displayName\": \"Equipment Smithing\",\n  \"description\": \"This modules bridges the Equipment and Smithing modules so that a player can forge weaponry and armor.\",\n  \"dependencies\": [\n    {\n      \"id\": \"CoreAssets\",\n      \"minVersion\": \"2.0.1\"\n    },\n    {\n      \"id\": \"Durability\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"Equipment\",\n      \"minVersion\": \"1.2.0\"\n    },\n    {\n      \"id\": \"Health\",\n      \"minVersion\": \"2.0.0-SNAPSHOT\"\n    },    \n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"MultiBlock\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"PhysicalStats\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"Smithing\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"Workstation\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"WorkstationCrafting\",\n      \"minVersion\": \"2.0.0\"\n    }\n  ],\n  \"serverSideOnly\": false,\n  \"isLibrary\": true,\n  \"isAugmentation\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkzODExNTE5OA==",
    "name": "EventualSkills",
    "url": "https://github.com/Terasology/EventualSkills",
    "description": "A library for adding time based skill leveling.  Borrows some math from EVE Online.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/f24905b42bc7e88200cd922da857838bb923ea51d90be235eb018a7569ad3fd5/Terasology/EventualSkills",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"EventualSkills\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"Josharias\",\n    \"displayName\": \"Eventual Skills\",\n    \"description\": \"A library for adding time based skill leveling.\",\n    \"dependencies\": [\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.0\"\n        },\n        {\n            \"id\": \"Notifications\",\n            \"minVersion\": \"0.1.0\",\n            \"maxVersion\": \"0.3.0\"\n        }\n    ],\n    \"isLibrary\": true,\n    \"isAugmentation\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNjA1MjYzMjY=",
    "name": "Exoplanet",
    "url": "https://github.com/Terasology/Exoplanet",
    "description": "A module that adds an exotic world from a distant galaxy as an additional dimension.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/5cd9f36a69ccb7e6715f3181b1bcc7d8ba8f9eac71a5d19cc85e37a434bf203c/Terasology/Exoplanet",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Exoplanet\",\n    \"version\": \"1.0.0-SNAPSHOT\",\n    \"author\": \"PutawanDE\",\n    \"displayName\": \"Exoplanet\",\n    \"description\": \"A module that adds an exotic world from a distant galaxy as an additional dimension.\",\n    \"dependencies\": [\n        { \"id\": \"BiomesAPI\", \"minVersion\": \"4.0.0\" },\n        { \"id\": \"CoreAssets\", \"minVersion\": \"2.0.1\" },\n        { \"id\": \"CoreWorlds\", \"minVersion\": \"2.0.0-SNAPSHOT\" },\n        { \"id\": \"Inventory\", \"minVersion\": \"1.1.0\" }\n    ],\n    \"serverSideOnly\": false,\n    \"isAsset\": true,\n    \"isWorld\": true\n}\n"
    },
    "readme": {
      "text": "# Exoplanet World Generator\n\nThis world generator generates an exotic world from a distant galaxy as an additional dimension.\n\n## How to get there?\n1. There is a portal block which can teleport you to this exotic world. 2 portal blocks will be given when you spawn. So, you can use the blocks to teleport to Exoplanet and teleport back to Earth.\n2. Place the block and interact\n\n![Portal](Screenshots/PortalBlock.png)\n*Portal Block*\n\n## Features\n1. **Ore** - this planet has a large ore vein underground (Diamond, Gold, Iron, Copper, Coal).\n\n2. **Red Tree and Grass** - this planet's plants mostly have red leaves as they use different pigment for their photosynthesis.\n\n3. **Undersea Grass** - this planet's grass is special, it can grow both on the ground and undersea.\n\n4. **Glowing Grass** - this planet is far too different from Earth. The grass here can glow in the dark. At night, Exoplanet is not really dark at all.\n\n![Ore](Screenshots/Ore1.png)\n![Mountain and the Sea](Screenshots/seaMountain.png)\n![Beach](Screenshots/beach.png)\n![Ocean Forest Desert](Screenshots/oceanDesertForest.png)\n![Great Mountains](Screenshots/mountainDay.png)\n![Snowmountain](Screenshots/snowMountain.png)\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNjI1NjE3NTU=",
    "name": "Explosives",
    "url": "https://github.com/Terasology/Explosives",
    "description": "A library module for letting things explode.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/262127cfb353a5cb79b33573243b0d9301043bf0fbcc3ab3baf2d4eb09007b50/Terasology/Explosives",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Explosives\",\n    \"version\": \"1.1.1-SNAPSHOT\",\n    \"isReleaseManaged\": true,\n    \"author\": \"The Terasology Foundation\",\n    \"displayName\": \"Explosives\",\n    \"description\": \"A library module for letting things explode.\",\n    \"dependencies\": [\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNzMwMTgwNjA=",
    "name": "FallingBlocks",
    "url": "https://github.com/Terasology/FallingBlocks",
    "description": "For blocks that fall down naturally when appropriate",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/2dcf067966f70c8c8e2df940c77b1ac4c14892afa9a211cfc25620ca6c4be9d4/Terasology/FallingBlocks",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"FallingBlocks\",\n    \"version\": \"1.3.0-SNAPSHOT\",\n    \"author\": \"4Denthusiast\",\n    \"displayName\": \"FallingBlocks\",\n    \"description\": \"Detects groups of blocks disconnected from the ground to let them fall\",\n    \"dependencies\": [\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        }\n    ],\n    \"serverSideOnly\": true\n}\n"
    },
    "readme": {
      "text": "# Falling Blocks\n\nThis module detects groups of blocks that have become disconnected from the ground, and moves them down. More specifically, it counts as solid those blocks which have the attachmentAllowed attribute (although this is likely to change in the future), and a solid block is disconnected from the ground if there is no path from it to an unloaded chunk entirely through solid blocks. Blocks which have the LevitatingBlockComponent are also able to support themselves and other blocks without a connection to the ground.\n\n## Internals\n\nIt uses an octree data structure to keep track of connected components of solid blocks, which is generated fresh every time the world is loaded rather than being saved. Because of its sparsity, the data structure is smaller than a block data field. The integrity of the datastructure can be verified using the fallingBlocksDebug command. In multiplayer, the module only runs serverside.\n\nAs the updates to the datastructure may take a while, particularly when loading new chunks, that all happens on a separate thread. Block groups will only fall once all of the updates are finished, so there may be a delay between the world loading and the module's effects becoming visible. You can check whether the updates are finished with the fallingBlocksStatus command.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzYwNzU2MQ==",
    "name": "Fences",
    "url": "https://github.com/Terasology/Fences",
    "description": "A module adding fence blocks",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/1268e37c6f1139474257334cdf4b9942bfcfb41ce7811aa958911ea6d5d438d0/Terasology/Fences",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Fences\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"A'nW\",\n  \"displayName\": \"Fence Pack\",\n  \"description\": \"A module adding fence blocks.\",\n  \"dependencies\": [],\n  \"isServerSideOnly\": false,\n  \"isAsset\": true\n}\n"
    },
    "readme": {
      "text": "Fences\n======\n\nThis module adds a simple feature, a fence block.\n\n![Fences showcase](https://i.imgur.com/5cT16lG.png)\n\n# Getting started\n\nTo start playing with fences, please follow:\n\n1) Ensure you have Fances module enabled ingame\n2) Press ```F1``` key to open console (or ` or whichever key you have bound to the console)\n3) Type in `give fence`\n4) Place fences\n5) Enjoy!\n\n# About\n\nEach fence block can be connected to up to four neighbouring blocks. However, the module is still in development and thus is a little bit bugged. This means that the fences may not connect correctly the very moment they are placed. The issue can be fixed by forcing an update for given fence blocks, for instance by placing and mining arbitrary block right next to the fence.\n\nAnother problem this module currently has is that the ground right around fence is severely darkened if you have SSAO enabled in your graphics settings. This module also lacks any sort of gate, although it used to have it in past.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNDAxNzYxMDk=",
    "name": "FlexibleMovement",
    "url": "https://github.com/Terasology/FlexibleMovement",
    "description": "Movement implementation for FlexiblePathfinding, first authored by kaen",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/8bbf4d024d9762dc3071ae831d3a8e70c13382f250ce83f788074797203b6899/Terasology/FlexibleMovement",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\" : \"FlexibleMovement\",\n    \"version\" : \"0.3.0-SNAPSHOT\",\n    \"author\" : \"\",\n    \"displayName\" : \"FlexibleMovement\",\n    \"description\" : \"\",\n    \"dependencies\" : [\n        {\n            \"id\" : \"FlexiblePathfinding\",\n            \"minVersion\" : \"1.0.0\"\n        },\n        {\n            \"id\" : \"Behaviors\",\n            \"minVersion\" : \"1.1.0\"\n        },\n        {\n            \"id\" : \"ModuleTestingEnvironment\",\n            \"minVersion\" : \"0.3.0\",\n            \"optional\": true\n        }\n    ],\n    \"serverSideOnly\" : false\n}"
    },
    "readme": {
      "text": "# FlexibleMovement\n\nThe movement implementation for `FlexiblePathfinding`.\n\n## About\n\n`FlexibleMovement` implements nodes and plugins for various movement types. It's meant to be used with \n`FlexiblePathfinding`, and both modules are developed in tandem. Every `FlexiblePathfinding` plugin has a \n`FlexibleMovement` plugin equivalent.\n\n`FlexibleMovement` provides the following:\n\n - Movement plugins matching the path finding plugins for `FlexiblePathfinding`\n - A plugin registry for loading and registering additional plugins\n - A movement component for configuring movement parameters and tracking the path finding and movement state\n - Behavior nodes and trees for obtaining and following a path from `FlexiblePathfinding`\n - A fairly robust test suite that ensures you can tinker without breaking things\n \n## Usage\n\nIn general, you can just run the `reliableMoveTo` behavior, and modify `FlexibleMovementComponent` to control the \npathing behavior.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzU3ODI5MTY=",
    "name": "FlexiblePathfinding",
    "url": "https://github.com/Terasology/FlexiblePathfinding",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/17957892ece03bbc0cd5930b3320dd50524d4b41909823324a671128303dc30f/Terasology/FlexiblePathfinding",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"FlexiblePathfinding\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"The Terasology Foundation\",\n    \"displayName\": \"Flexible Pathfinding\",\n    \"description\": \"This library module allows for flexible ways of pathfinding.\",\n    \"dependencies\": [\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "# FlexiblePathfinding\n\nA plugin-based JPS pathfinder for Terasology.\n\nThis is a clone of the [original repository by Kaen](https://github.com/kaen/FlexiblePathfinding).\n\nSee also [FlexibleMovement](https://github.com/Terasology/FlexibleMovement).\n\n# Usage\n\nYou probably want to use the nodes in `FlexibleMovement` directly.\n\nHowever, if you're not actually moving anything then you can try the `PathfinderSystem#requestPath` method.\n\nYou can see the basic usage example in the\n[unit test helper](https://github.com/kaen/FlexiblePathfinding/blob/master/src/test/java/org/terasology/flexiblepathfinding/helpers/JPSTestHelper.java#L99-L116)\n\n# Hacking\n\nCheck out the unit tests. You can add a new movement type by writing a new JPSPlugin.\n\n# Debugging\n\nThis module comes with some limited debugging GUIs. By default, they're bound to F7. This and some other debug\n bindings are configurable from the Input settings menu).\n\nBecause of the overhead required to record, transmit, and analyze path finding results you'll need to enable metrics\nrecording from the same menu.\n\nA log of the most recently finished path finding requests is available from the menu.\n\nThese tools don't replace the traditional logging and profiling tools used with Java. Rather, they compile and\n present data with some context of FPF to easily get an overview of potential performance issues.\n \n ## The Debug HUD\n \n With metrics recording and the debug HUD enabled, several histograms and graphs will be rendered in-game. These\n  histograms plot the distribution of several properties of the last 1000 path finding requests:\n \n   - Success/Failure Times: execution time of the request in (wall clock) milliseconds\n   - Costs: The cost of the final path of successful requests as calculated by the JPSPlugin\n   - Sizes: The size of the final path of successful requests\n   - Depths: The maximum depth of moves explored\n   - Explored: The total number of moves explored\n \n Some graphs are also present:\n \n   - Success Rate: The portion (from 0.0-1.0) of requests that succeeded from the last 1000\n   - Throughput: The number of requests finished since the last metrics update\n   - Pending: The number of outstanding requests that haven't issued their callback yet"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMjg1NTUyMzY=",
    "name": "FlowingLiquids",
    "url": "https://github.com/Terasology/FlowingLiquids",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/9f653eef182ebf59f1cf8708c6f2ab5b63195b0ac020f16da6e23adf5fc5388b/Terasology/FlowingLiquids",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"FlowingLiquids\",\n    \"version\": \"1.4.0-SNAPSHOT\",\n    \"author\": \"4Denthusiast\",\n    \"displayName\": \"FlowingLiquids\",\n    \"description\": \"Lets water flow, conserving its volume.\",\n    \"dependencies\": [\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.0\",\n            \"optional\": true\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "# Flowing Liquids\n\nA [Terasology](https://github.com/MovingBlocks/Terasology) module to allow liquids to flow, conserving their volume.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNjkxOTUzNQ==",
    "name": "Fluid",
    "url": "https://github.com/Terasology/Fluid",
    "description": "Fluids, as opposed to liquids, relate mainly to the storage and manipulation of substances that \"flow\" (which can even be gas) - at least in our definition of game terms where liquids would be more for natural water, lava, and similar larger scale systems. In other words this is not meant as a water simulation type module.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/0f7fb52e71e664c995a8a0a300e894a3be040af053488b4fec00c79617c04be9/Terasology/Fluid",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Fluid\",\n  \"version\": \"2.1.0-SNAPSHOT\",\n  \"author\": \"Marcin Sciesinski <marcins78@gmail.com>, Mandar Juvekar\",\n  \"displayName\": \"Fluid\",\n  \"description\": \"This library module allows to manage fluids with items and containers.\",\n  \"dependencies\": [\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"FlowingLiquids\",\n      \"minVersion\": \"1.2.0\",\n      \"optional\": true\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkzNTIzODYyMA==",
    "name": "FluidComputerIntegration",
    "url": "https://github.com/Terasology/FluidComputerIntegration",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/10ebeeaaf00371834963df18c5c0b6ee30c71bf732d102f758223dbb905c305f/Terasology/FluidComputerIntegration",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"FluidComputerIntegration\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"The Terasology Foundation\",\n  \"displayName\": \"Fluid Computer Integration\",\n  \"description\": \"An Integration module that allows ModularComputer to interact with fluids.\",\n  \"dependencies\": [\n    {\n      \"id\": \"Fluid\",\n      \"minVersion\": \"2.0.0\"\n    },\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"MobileBlocks\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"ModularComputers\",\n      \"minVersion\": \"1.0.0\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "# FluidComputerIntegration\nIntegration module that allows ModularComputer to interact with fluids.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyOTEzMDI4Nzk=",
    "name": "FlyingIslands",
    "url": "https://github.com/Terasology/FlyingIslands",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://repository-images.githubusercontent.com/291302879/87419700-79bb-11eb-9b75-9aab802bc254",
    "usesCustomOpenGraphImage": true,
    "moduleTxt": {
      "text": "{\n    \"id\" : \"FlyingIslands\",\n    \"version\" : \"1.1.1-SNAPSHOT\",\n    \"author\" : \"The Terasology Foundation\",\n    \"displayName\" : \"FlyingIslands\",\n    \"description\" : \"Provides Flying Islands plugins to be used in worlds.\\n\\nWorks well with 'FallingBlocks'.\",\n    \"dependencies\" : [\n        {\"id\": \"CoreAssets\", \"minVersion\": \"2.0.0\"},\n        {\"id\": \"CoreWorlds\", \"minVersion\": \"2.0.0\"},\n        {\"id\": \"CoreRendering\", \"minVersion\": \"1.0.0\"},\n        {\"id\": \"FallingBlocks\", \"minVersion\": \"1.2.0\", \"optional\": true}\n     ],\n    \"serverSideOnly\" : \"false\",\n    \"isWorld\": true\n}\n"
    },
    "readme": {
      "text": "<p align=\"center\">\n<img src=\"./docs/github-readme-banner.png\" alt=\"Flying Islands\"/>\n</p>\n\n# Flying Islands\n\nThis module provides a world generation plugin that creates flying islands in the sky.\nPlease note, that this module has an optional dependency to [`FallingBlocks`](https://github.com/Terasology/FallingBlocks) which adds gravitational effects for solid blocks.\n\n![Flying Islands](https://user-images.githubusercontent.com/29981695/109419364-5ec29880-79cd-11eb-86a2-5900243382fd.png)\n\n\n## Laputa Adamant\n\nThe `FlyingIslands` module comes with a new block called \"Laputa Adamant\".\nThis block is the heart piece of each flying island allowing it to fly.\nShould this piece be destroyed, an island will plummet to the ground - provided [`FallingBlocks`](https://github.com/Terasology/FallingBlocks) is enabled.\n\n![laputa_adamant](https://user-images.githubusercontent.com/1448874/111070458-209b9d80-84d2-11eb-9b62-528d94d947d8.gif)\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzYwNzYxNg==",
    "name": "FunnyBlocks",
    "url": "https://github.com/Terasology/FunnyBlocks",
    "description": "A module adding funny/random goofy blocks just because they are awesome!",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/9fb012b998cf7590ba241c9c4c4203cb9a25cf3544c260c74803bb6a53392eff/Terasology/FunnyBlocks",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"FunnyBlocks\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"A'nW, BenjaminAmos, DarkKeks, ElBatanony, Eric Banisadr, Setako\",\n    \"displayName\": \"Funny Blocks\",\n    \"description\": \"A module adding funny/random goofy blocks just because they are awesome!\",\n    \"dependencies\": [\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        }\n    ],\n    \"isServerSideOnly\": false,\n    \"isSpecial\": true,\n    \"isAsset\": true\n}\n"
    },
    "readme": {
      "text": "# Funny Blocks\nThis module adds several random, funny and goofy blocks to make [Terasology](https://github.com/MovingBlocks/Terasology) even more awesome!\n\n![Funny Blocks](https://raw.githubusercontent.com/wiki/Terasology/FunnyBlocks/FunnyBlocks.png)\n\nFrom left to right:\n\n- BreakingBlock - Begins to break when the player stands on top of it\n- BluePortalBlock - Teleports the player to an activated Orange Portal Block when they stand on top of it (Press 'e' to activate)\n- OrangePortalBlock: Teleports the player to an activated Blue Portal Block when they stand on top of it (Press 'e' to activate)\n- BouncyBlock - Automatically bounces the player towards the sky when they stand on top of it\n- TrampolineTile - Enables the player to bounce off of it towards the sky\n- SpeedBlock - Briefly increases the speed of the player when they walk over it\n- SpeedBoost - Launches the player in the direction of the arrow when they walk over it\n- SpeedBooster - The Speed Boost block but in a smaller, tile format\n- CheeseWheel - Just a cheese wheel, because why not?\n- SlicedCheeseWheel - A cheese wheel with a slice taken out of it. Yum!\n- BowlingPin - A tenpin bowling pin\n\n## Playing\nAfter installing and activating this module in a new world you have two options as to how to access the Funny Blocks:\n1. Install and activate a world generator that includes some of these blocks (see [FunnyGenerator](https://github.com/NicholasBatesNZ/FunnyGenerators) as an example). The blocks will be spawned in the world automatically.\n2. Press the ~ key and enter the command `give BlockName` where \"BlockName\" is the name of the desired block as taken from the list above. This block will appear in your inventory.\n\n## Contributors\nAuthors can be found in the [module.txt](https://github.com/Terasology/FunnyBlocks/blob/master/module.txt)\n\nFeel free to fork and clone this repository and send in some pull requests! Be sure to add yourself to the authors list.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNjI1NjEyMzQ=",
    "name": "Furnishings",
    "url": "https://github.com/Terasology/Furnishings",
    "description": "A library module providing logic for furnishings, like doors or chests.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/aeb44b1d0f655aaa3da26fdea9e222605315fc1d5001b69e2141476a44170633/Terasology/Furnishings",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\" : \"Furnishings\",\n    \"version\" : \"1.1.1-SNAPSHOT\",\n    \"isReleaseManaged\": true,\n    \"author\" : \"The Terasology Foundation\",\n    \"displayName\" : \"Furnishings\",\n    \"description\" : \"A library module providing logic for furnishings, like doors or chests.\",\n    \"dependencies\" : [\n        { \"id\": \"Inventory\", \"minVersion\": \"1.1.0\" }\n    ],\n    \"serverSideOnly\" : false,\n    \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNjQwMjIxOA==",
    "name": "GelCubes",
    "url": "https://github.com/Terasology/GelCubes",
    "description": "Contains cuddly little Gelatinous Cubes just waiting to bounce around merrily in the world!",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/f5b9bf51f10fbf151bbf370adf46a2fb8bdbd407f9ff83868355d2022fb37993/Terasology/GelCubes",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyMjI5OTY5ODA=",
    "name": "GenericBiomes",
    "url": "https://github.com/Terasology/GenericBiomes",
    "description": "Simplified versions of most real-world ecoregions, like Rainforests and Marshes.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/ffe6ff53959f011180e1bb7459c9e8e5a218dac718e65ef3646fd2960e84c296/Terasology/GenericBiomes",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyMjYzNzU0OTg=",
    "name": "GenericRocks",
    "url": "https://github.com/Terasology/GenericRocks",
    "description": "A collection of simple stone types for other modules to use.",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/77163f63450a4b9784d4aea2cc19ef6799cf852f933a011f0f062f284b5c39eb/Terasology/GenericRocks",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"GenericRocks\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Qwertygiy\",\n  \"displayName\": \"Generic Rocks\",\n  \"description\": \"A collection of simple stone types\",\n  \"dependencies\": [\n    {\n      \"id\": \"CoreAssets\",\n      \"minVersion\": \"2.0.0\"\n    }\n  ],\n  \"serverSideOnly\": false\n}\n"
    },
    "readme": {
      "text": "# Generic Rocks\nThis module is home to simple stone types, such as granite and marble.\nIt is intended to provide a variety of rocks that readily serve many uses and are more specific\nthan the simple Stone block of CoreAssets, but are not as specific as the blocks in Minerals."
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNzI5NjYxMQ==",
    "name": "Genome",
    "url": "https://github.com/Terasology/Genome",
    "description": "Genome all the things!",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/807290609a7062328b85ea4f5c7121bde591be56754e3e9bd496874c61a6391a/Terasology/Genome",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Genome\",\n    \"version\": \"1.0.1-SNAPSHOT\",\n    \"author\": \"The Terasology Foundation\",\n    \"displayName\": \"Genome\",\n    \"description\": \"Allows to define an organism type (say herbs) in a module, define the properties they have based on the DNA (genes) and this module will handle breeding organisms and their DNA changes (including mutations).\",\n    \"dependencies\": [\n        { \"id\": \"Inventory\", \"minVersion\": \"1.1.0\" }\n    ],\n    \"isServerSideOnly\": false,\n    \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMjc2OTM5MzI=",
    "name": "Gooey",
    "url": "https://github.com/Terasology/Gooey",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/1508076d7a76531836042552d1a951e7065f91d4c34a342f41722ad0ca131713/Terasology/Gooey",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Gooey\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"The Terasology Foundation\",\n  \"displayName\": \"Gooey & Friends\",\n  \"description\": \"Introduces Gooey's 'odd' cousin to the game. Say hi, just don't get too close ..\",\n  \"dependencies\": [],\n  \"isServerSideOnly\": false,\n  \"isAsset\": true\n}\n"
    },
    "readme": {
      "text": "<p align=\"center\">\n<img src=\"./banner.png\" alt=\"Gooey\" />\n</p>\n\n# Gooey\n\nAn asset module for our beloved gooeys.\nIt provides the models, materials and textures for both Gooeys and their weird, manic cousins the MawGooeys.\n\n## Gooeys\n\nThe Gooey glTF model can be referenced in prefabs with a `skeletalMesh` as `Gooey:gooey`.\n```json5\n  \"skeletalMesh\": {\n    \"mesh\": \"Gooey:gooey\"\n  }\n```\n\nThe model currently comes with one animation only, which is the `ArmatureAction`.\nThis animation can be referenced in a `skeletalMesh` with an `animationPool` as `Gooey:gooey#ArmatureAction`.\n```json5\n  \"skeletalMesh\": {\n    \"mesh\": \"Gooey:gooey\",\n    \"animationPool\": [\n      \"Gooey:gooey#ArmatureAction\"\n    ],\n    \"loop\": true\n  }\n```\n\nThere is a bunch of textures and materials provided that allow for gooeys in many colors of the rainbow.\nThe materials can be referenced in a `skeletalMesh` as `Gooey:gooeySkin<color>` with `<color>` being the color name, e.g. \"Blue\".\n```json5\n  \"skeletalMesh\": {\n    \"mesh\": \"Gooey:gooey\",\n    \"material\": \"Gooey:gooeySkinBlue\"\n  }\n```\n\nThe material and texture assets are named based on the [HTML Color Names](https://htmlcolorcodes.com/color-names/) of the respective color code of the color used in the texture.\n\n## MawGooeys\n\nThe MawGooey glTF model can be referenced in prefabs \n\nThe Gooey glTF model can be referenced in prefabs with a `skeletalMesh` as `Gooey:mawgooey`.\n```json5\n  \"skeletalmesh\": {\n     \"mesh\": \"Gooey:mawgooey\"\n   }\n```\n\nThe model comes with four different animations:\n- Attack\n- Death\n- IdleFinal\n- Walk\n\nThese animations can be referenced in a `skeletalMesh` with an `animationPool` as `Gooey:mawgooey#<animation>` with `<animation>` being the animation name, e.g. \"Walk\".\n```json5\n  \"skeletalMesh\": {\n    \"mesh\": \"Gooey:mawgooey\",\n    \"animationPool\": [\n      \"Gooey:mawgooey#Walk\"\n    ],\n    \"loop\": true\n  }\n```\n\nCurrently, there are three different color variants provided: Green, Purple, and Red.\nThe materials can be referenced in a `skeletalMesh` as `Gooey:mawgooeySkin<color>` with `<color>` being the color name, e.g. \"Red\".\n```json5\n  \"skeletalMesh\": {\n    \"mesh\": \"Gooey:mawgooey\",\n    \"material\": \"Gooey:mawgooeySkinRed\"\n  }\n```\n\nThe material and texture assets are _not_ aligned with any \"official\" colors.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzE4MzUzNTY=",
    "name": "GooeyDefence",
    "url": "https://github.com/Terasology/GooeyDefence",
    "description": "A Tower Defence gameplay module for Terasology",
    "homepageUrl": "https://terasology.github.io/GooeyDefence/",
    "openGraphImageUrl": "https://repository-images.githubusercontent.com/131835356/ad6be500-a096-11eb-9315-c088ea0a86d5",
    "usesCustomOpenGraphImage": true,
    "moduleTxt": {
      "text": "{\n    \"id\": \"GooeyDefence\",\n    \"version\": \"1.1.1-SNAPSHOT\",\n    \"author\": \"The Terasology Foundation\",\n    \"displayName\": \"Gooey's Defence\",\n    \"description\": \"Tower-defense style gameplay in which the player needs to defend the center of the gameplay arena against incoming waves of Gooeys by building \\\"towers\\\" that attack them.\",\n    \"dependencies\": [\n        {\n            \"id\": \"CoreRendering\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"FlexiblePathfinding\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Economy\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Gooey\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Notifications\",\n            \"minVersion\": \"0.1.0\",\n            \"maxVersion\": \"0.3.0\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isGameplay\": \"true\",\n    \"defaultWorldGenerator\": \"GooeyDefence:gooeyDefenceField\"\n}\n"
    },
    "readme": {
      "text": "<div align=\"center\">\n<img src=\"./docs/_media/banner.png\">\n</div>\n\n_This is a module for [Terasology].\nIt adds the \"Gooey's Defence\" gameplay to the game, which is a tower-defense style gameplay experience.\nThe goal is to defend the center of the arena against the malicious Gooeys spawning in waves in the outer areas of the arena and traversing it.\nThe player can buy tower components to build towers with various effects to keep the Gooeys from reaching the center._\n\n<h2 align=\"center\"><a href=\"https://terasology.github.io/GooeyDefence/\">👉 Documentation 👈</a></h2>\n\n## Contributing\n\nWe welcome contributions to our modules, be it bug fixes or feature contributions.\nCheck out the [Contributor Guide][contributor-guide] on the main project wiki to learn more.\n\nTo check out this module (and all its dependencies) to your Terasology workspace run (in the workspace root):\n\n```\ngroovyw module recurse GooeyDefence\n```\n\nTo build a module JAR for just this module run (in the workspace root):\n\n```\ngradlew :module:GooeyDefence:jar\n```\n\nTo run all tests and static code checks for this module run (in the workspace root):\n\n```\ngradlew :module:GooeyDefence:check\n```\n\n### Documentation via gh-pages\n\nThe documentation of this module is built with [docsify].\nIt is served via [gh-pages].\nTo preview the site you can either use the `docsify` [CLI tool](https://github.com/docsifyjs/docsify-cli) or just run a static server on the `docs` folder.\n\n<!-- References -->\n[Terasology]: https://github.com/MovingBlocks/Terasology\n[gh-pages]: https://pages.github.com/\n[docsify]: https://docsify.js.org/#/\n[contributor-guide]: https://github.com/MovingBlocks/Terasology/wiki/Contributor-Quick-Start\n\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk1MzIxNDcyNQ==",
    "name": "GooeysQuests",
    "url": "https://github.com/Terasology/GooeysQuests",
    "description": "Go on quests with Gooey, our official mascot!",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/a44d123c6c608041f68ebd94abbda74988a92362f480665ac1ed03e2d27ab143/Terasology/GooeysQuests",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"GooeysQuests\",\n    \"version\": \"1.1.2-SNAPSHOT\",\n    \"author\": \"Florian\",\n    \"displayName\": \"Gooey's Quests\",\n    \"description\": \"Planned content: A character called Gooey will appear. He offers you exciting and dangerous quests. However, be warned: He might modify your world... and not in a way you like!\",\n    \"dependencies\": [\n        {\n            \"id\": \"Behaviors\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Books\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"ChiselBlocks\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"CoreAdvancedAssets\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"CoreRendering\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"CoreWorlds\",\n            \"minVersion\": \"1.1.0\",\n            \"maxVersion\": \"3.0.0\"\n        },\n        {\n            \"id\": \"Equipment\",\n            \"minVersion\": \"1.2.0\"\n        },\n        {\n            \"id\": \"Fences\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Gooey\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"StructureTemplates\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"StructuralResources\",\n            \"minVersion\": \"2.1.0\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isGameplay\": \"true\",\n    \"defaultWorldGenerator\": \"CoreWorlds:FacetedSimplex\"\n}\n"
    },
    "readme": {
      "text": "#  Gooey's Quests\n\nA module for Terasology that causes a Gooey to randomly spawn around the world, offering the player quests that create structures.\n\n## Getting Started\n\n- Start a game in a world with mountains, with GooeysQuests activated.\n- Walk around until you find a character named Gooey that will ask you something.\n- So every time Gooey adds a structure, you will see something new.\n- Right now there are two available structures, the dungeon and the dwarf hall, but they have different combinations, so every time gooey add the structure, you will see something new.\n- But be careful - the changes Gooey makes to the world may impact any existing builds, be sure the area is clear!\n\n## Adding more structures\n\nIf you want to add a new structure, first you have to create the structures templates that will form the structure. Then you will have to create two java classes: a component and a system, typically in the folder `/src/main/java/org/terasology/gooeysQuests/quests`\n\n##### Naming conventions:\n- Add the name of your structure at the beginning of the name of each structure template that you create\n- The format for java class names is: `<YourStructure>QuestComponent` and `<YourStructure>QuestSystem`\n\n## Screenshots\n\n![Gooey in-game](https://user-images.githubusercontent.com/33598488/34733694-92fda2b6-f569-11e7-9d65-a324abc9c5f2.jpg)\n\n![GooeysQuests UI](https://user-images.githubusercontent.com/33598488/34733696-9530241e-f569-11e7-97ad-9e973f0647b6.jpg)\n\n## Credits\n\nA drawing of a \"gooey\" made by SuperSnark was the inspiration for Gooey, the main character of this module.\n\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNTg5MzI3MQ==",
    "name": "GrowingFlora",
    "url": "https://github.com/Terasology/GrowingFlora",
    "description": "Organically growing plants and trees (step-by-step growth over time)",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/2bbcaf9c1f6393ff4f84ed28392a2948905ca183bc4f3a5adcbe9a362da7d35d/Terasology/GrowingFlora",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"GrowingFlora\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"Marcin Sciesinski <marcins78@gmail.com>\",\n    \"displayName\": \"Growing Flora\",\n    \"description\": \"Module providing mechanisms for growing plants (trees, bushes, crops)\",\n    \"dependencies\": [\n        {\n            \"id\": \"BiomesAPI\",\n            \"minVersion\": \"4.0.0\"\n        },\n        {\n            \"id\": \"ClimateConditions\",\n            \"minVersion\": \"1.0.0\",\n            \"optional\": \"true\"\n        },\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"CoreWorlds\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        }\n    ],\n    \"isServerSideOnly\": false,\n    \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "GrowingFlora\n============\n**GrowingFlora** is a Terasology module that generate and grow plants organically over time.\n\n> ***If you are interested on making the assets for dynamic plants, you might want to check out [PlantPack](https://github.com/Terasology/PlantPack)***\n\nWorld Generation\n-------\n**GrowingFlora** not only handles the organic growth of plants, but also the generation of it. You can find the world generation code for the plants in `src/main/java/org/terasology/gf/generator`\n\nGrass Growth\n------------\nGrass growth/spread is also handled by GrowingFlora. This allows a block of grass to spread to a dirt block and turning it into a grass block. You can find the grass growth/spread code in `src/main/java/org/terasology/gf/grass`\n\nTrees\n-------\nTrees generation, trees growth, and saplings are also handled by GrowingFlora.\n\nTrees are divided into 3 main parts.\n 1. Branch\n 2. Leaf\n 3. Trunk\n\nTrees can have varying shapes. Shapes that currently exist can be found in `assets/prefabs/shapes`.\n\n**TreeCutDamage** is considered as a physical damage by the engine, it also have a directPickup set to true. You can find more information about this damage type in assets/prefabs/damage\n\nYou can find the code for trees management in `src/main/java/org/terasology/gf/tree`"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk3NTIzMzkzMw==",
    "name": "HealingBlocks",
    "url": "https://github.com/Terasology/HealingBlocks",
    "description": "A module for Terasology that adds the ability for blocks to heal",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/c03d20b011404ae79dcda64d82e640bb5f8a6a360fee346d2a3631cbb4c2dae1/Terasology/HealingBlocks",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxODcwNzQ0NTQ=",
    "name": "Health",
    "url": "https://github.com/Terasology/Health",
    "description": "Health Module for providing Health and related events ",
    "homepageUrl": "https://terasology.github.io/Health/",
    "openGraphImageUrl": "https://opengraph.githubassets.com/eccf443b092f4a0df2812e41ec1080d25976f3eddba65221f865f534d452306a/Terasology/Health",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Health\",\n    \"version\": \"2.0.0-SNAPSHOT\",\n    \"isReleaseManaged\": true,\n    \"author\": \"The Terasology Foundation\",\n    \"displayName\": \"Health\",\n    \"description\": \"Adds the concept of health (or hitpoints) to the game and handles regeneration, restoration and damage of entities.\",\n    \"dependencies\": [\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isLibrary\": true,\n    \"isAugmentation\": true\n}\n"
    },
    "readme": {
      "text": "<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/Terasology/Health/develop/docs/_media/banner.png\">\n</div>\n\n_This is a module for [Terasology].\nIt adds the concept of health (or hitpoints) to the game and handles regeneration, restoration and damage of entities._\n\n<h2 align=\"center\"><a href=\"https://terasology.github.io/Health\">👉 Documentation 👈</a></h2>\n\n## Contributing\n\nWe welcome contributions to our modules, be it bug fixes or feature contributions. \nCheck out the [Contributor Guide][contributor-guide] on the main project wiki to learn more.\n\nTo check out this module (and all its dependencies) to your Terasology workspace run (in the workspace root):\n\n```\ngroovyw module recurse Health\n```\n\nTo build a module JAR for just this module run (in the workspace root):\n\n```\ngradlew :module:Health:jar\n```\n\nTo run all tests and static code checks for this module run (in the workspace root):\n\n```\ngradlew :module:Health:check\n```\n\n### Documentation via gh-pages\n\nThe documentation of this module is build with [docsify]. \nIt is served via [gh-pages].\nTo preview the site you can either use the `docsify` [CLI tool](https://github.com/docsifyjs/docsify-cli) or just run a static server on the `docs` folder.\n\n<!-- References -->\n[Terasology]: https://github.com/MovingBlocks/Terasology\n[gh-pages]: https://pages.github.com/\n[docsify]: https://docsify.js.org/#/\n[contributor-guide]: https://github.com/MovingBlocks/Terasology/wiki/Contributor-Quick-Start\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk2NTcwMjI2MQ==",
    "name": "Herbalism",
    "url": "https://github.com/Terasology/Herbalism",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/d996bcff9e0b677c4b6762a86e3e0082d357690f25290e3954f05ad1eec224fb/Terasology/Herbalism",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMTcyODU3MTM=",
    "name": "HjerlHede",
    "url": "https://github.com/Terasology/HjerlHede",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/4b92e9f37060cefa835677ef220817953b8792b5d3da28a46e61e4215462dd50/Terasology/HjerlHede",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"HjerlHede\",\n  \"version\": \"1.2.0-SNAPSHOT\",\n  \"author\": \"Terasology Community\",\n  \"displayName\": \"HjerlHede\",\n  \"description\": \"Provides a culture definition for a system like DynamicCities with buildings from the Hjerl Hede outdoor museum in Denmark\",\n  \"dependencies\": [\n    {\n      \"id\": \"CoreAdvancedAssets\",\n      \"minVersion\": \"1.2.0\"\n    },\n    {\n      \"id\": \"CoreAssets\",\n      \"minVersion\": \"2.2.0\"\n    },\n    {\n      \"id\": \"DynamicCities\",\n      \"minVersion\": \"1.0.0\",\n      \"optional\": true\n    },\n    {\n      \"id\": \"Fences\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"StructureTemplates\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"StructuralResources\",\n      \"minVersion\": \"2.2.0\"\n    }\n  ],\n  \"serverSideOnly\": false,\n  \"isAsset\": true\n}\n"
    },
    "readme": {
      "text": "![Hjerl Hede Banner](img/HjerlHede_gooey.png)\n\nThis module adds buildings of the Hjerl Hede outdoor museum in Denmark as [Structure Templates](https://github.com/Terasology/StructureTemplates).\nA (hopefully up-to-date) list of the included buildings can be found below.\nThis module also defines culture, districts and building properties for the `DynamicCities` mechanism that allows to automatically spawn cities with `HjerlHede` buildings in-game.\n\n## How to contribute\n\nCheck out the open issues for buildings that are still missing and references on how they look.\nPlease comment on the issue if you decide to work on it and link your PR as soon as it's available.\n\n## Buildings\n\n| Name | Description | Screenshot | Reference |\n| ---- | ----------- | ---------- | --------- |\n| Agerumsladen | A barn | ![Agerumsladen](img/HjerlHede_Agerumsladen_Barn.png) | https://hjerlhede.dk/da/content/agerumsladen |\n| Bageriet | A bakery from 1882 | ![Bageriet](img/HjerlHede_Bageriet_Bakery.png) | http://hjerlhede.dk/da/content/bageriet |\n| Bødkerhuset | A cooper house from 1879 | ![Bodkerhuset](img/HjerlHede_Bodkerhuset_Cooper-House.png) | http://hjerlhede.dk/da/content/b-dkerhuset |\n| Bulladen | A bole barn from 1777  | ![Bulladen](img/HjerlHede_Bulladen_Bole-Barn.png) | https://hjerlhede.dk/da/content/bulladen |\n| Købmanden | A grocery store from 1800 | ![Kobmanden](img/HjerlHede_Kobmanden_Grocery-Store.png) | http://hjerlhede.dk/da/content/k-bmanden |\n| Mjesinghuset | A living house from 1770 | ![Mjesinghuset](img/HjerlHede_Mjesinghuset_Living-House.png) | http://hjerlhede.dk/da/content/mjesinghuset |\n| Skolen | A school from 1823  | ![Skolen](img/HjerlHede_Skolen_School.png) | http://hjerlhede.dk/da/content/skolen, https://arkiv.dk/vis/3665245 |\n| Smedjen | A smithy from 1700 | ![Smedjen](img/HjerlHede_Smedjen_Smithy.png) | http://hjerlhede.dk/da/content/smedjen |\n| Stubmøllen | A wind mill from 1778 | ![Stubmollen](img/HjerlHede_Stubmollen_Wind-Mill.png) | http://hjerlhede.dk/da/content/stubm-llen |\n| Vinderuphuset | A coachbuilder workshop from 1908 | ![Vinderuphuset](img/HjerlHede_Vinderuphuset_Coachbuilder-Workshop.png) | http://hjerlhede.dk/da/content/vinderuphuset |\n| Street Lamp | Just a street lamp ;) | ![Street Lamp](img/HjerlHede_Street-Lamp.png) |  |\n\n## References\n\n* [Museum website](http://hjerlhede.dk)\n* [Cervator's photo set](https://photos.app.goo.gl/BPAgJqN2B4GRy80B2)\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMjIxMDc3Mzc=",
    "name": "HumanoidCharacters",
    "url": "https://github.com/Terasology/HumanoidCharacters",
    "description": "Humanoid characters that players can select",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/c6e0023e83f406e23ff018275afe1c5ed2cd47fc5ec1289e67b8ebda9cddec18/Terasology/HumanoidCharacters",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"HumanoidCharacters\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"The Terasology Foundation\",\n  \"displayName\": \"HumanoidCharacters\",\n  \"description\": \"This augmentation module adds a humanoid model as the player appearance\",\n  \"dependencies\": [],\n  \"serverSideOnly\": false,\n  \"isAugmentation\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzg5NTE2Mw==",
    "name": "Hunger",
    "url": "https://github.com/Terasology/Hunger",
    "description": "Hunger, Thirst and Food!",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/e31d6f6ccb98a9f1612dfaf93644e25376464c554dd8d39dc440e5e048b567cd/Terasology/Hunger",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Hunger\",\n    \"version\": \"1.2.0-SNAPSHOT\",\n    \"author\": \"UltimateBudgie, Marcin Sciesinski <marcins78@gmail.com>\",\n    \"displayName\": \"Hunger and Food\",\n    \"description\": \"This module introduces Hunger and various related effects.\",\n    \"dependencies\": [\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Breathing\",\n            \"optional\": true\n        }\n    ],\n    \"isLibrary\": true,\n    \"isAugmentation\": true\n}\n"
    },
    "readme": {
      "text": "# Hunger\nA Terasology module, as the name implies, that features hunger in the form of a status bar.\n\n## Features\nA hunger status bar in the player's HUD, outlined in blue below:\n![](media/hud.png)\nThe player's hunger saturation decreases as time in the world progresses, but replenishes with food and other consumables.\n\n## Getting Started\n* Simply create a world with the Hunger module enabled\n* As time progresses, you'll notice the hunger bar going down!\n\n## Commands\n* `showHunger` - Displays your current food level\n* `setHunger <float>` - Sets your current food level\n* `setMaxHunger` - Sets your maximum food level\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyMTgzMjMxNw==",
    "name": "Index",
    "url": "https://github.com/Terasology/Index",
    "description": "An index repository for modules",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/c7d9616c46ff041267a902307cda1e1929361c7ca439ff010539d0a27af3b653/Terasology/Index",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": {
      "text": "# Index\n\n| ID | Version | Name | Author\n|----|---------|------|-------\n| Core | 0.1.0 | Core Gameplay | Gooey |\n| Fences | 0.1.0 | Fence Pack | A'nW |\n| NameGenerator | 0.3.0 | Random Name Generator | msteiger and Tobias 'skaldarnar' Nett |\n| Pathfinding | 0.1.0 | Pathfinding framework | synopia |\n| Portals | 0.1.0 | Portals | Cervator, Esapetri |\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk5MTY2NDczMA==",
    "name": "Indicators",
    "url": "https://github.com/Terasology/Indicators",
    "description": "pop-ups above entities",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/1970a4a35529cfe86d0729a5500c15bf3a1fcf15fe4cc51b599c79f73c3cff21/Terasology/Indicators",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk3OTU2MjkyNQ==",
    "name": "Inferno",
    "url": "https://github.com/Terasology/Inferno",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/0b4ed087976957ad71af8f9a12ad3f0ac52ea6cebddca54b0f322a89d93de1d1/Terasology/Inferno",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Inferno\",\n    \"version\": \"1.0.0-SNAPSHOT\",\n    \"author\": \"iojw\",\n    \"displayName\": \"Inferno\",\n    \"description\": \"A module that adds an additional dimension with spooky things.\",\n    \"dependencies\": [\n        {\n            \"id\": \"ChiselBlocks\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"CoreWorlds\",\n            \"minVersion\": \"1.1.0\",\n            \"maxVersion\": \"3.0.0\"\n        },\n        {\n            \"id\": \"DamagingBlocks\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isWorld\": \"true\",\n    \"defaultWorldGenerator\": \"Inferno:InfernoWorld\"\n}\n"
    },
    "readme": {
      "text": "Potential issue: https://github.com/iojw/Inferno/issues/1\n### Installation Note\nBefore loading the world make sure that the Inferno world template is selected ![](http://i.imgur.com/6peH4c3.png)\n# Inferno\n\n**in·fer·no**  \ninˈfərnō  \n*noun*  \n1\\. hell\n\nThis module adds an custom world generator which contains an alternate dimension on top of the features found in the default Perlin generator. \n\n---\n\nUpon spawning in the Overworld, you'll receive a **Resurrection Idol** in your inventory. But how do you enter the Inferno? \n\nWell... first... you have to die. While you would normally enter the ethereal dimension after dying, the **Resurrection Idol**, forged by the ancient tribes of Terasology, allows you to remain in your corporeal form even as you enter the Inferno, giving you one chance to explore the dimension!\n\n(Ideally, you would also want to die by natural means such as fall damage with the console closed so that you'll see the message when you enter. Also, remember to turn up the volume so you can hear the portal entering sound effects and Inferno ambience sounds!)\n\n![](http://i.imgur.com/PuZaPWS.png)\n![](http://i.imgur.com/SO219Fl.png)\n\nWorld blocks:\n\n- **Bloodied Stone**\n- **Bloodied Dirt**\n- **Infernal Brick**\n\nFlora: \n\n*Infused with the pain of souls sent here, these flora give out light, peppering the surface like stars in the night sky.*\n\n- **Flaming Flower**\n- **Dead Branch**\n- **Devil's Shroom**\n\nFeatures:\n\n- **Lava Huts**: *Reminscent of a bygone age, these dilapidated huts used to be belong to souls who were trapped in the Inferno*\n\n(Spawns at various heights and sizes, with blocks randomly placed to mimic dilapidation)\n\n![](http://i.imgur.com/7LctuL5.png)\n![](http://i.imgur.com/gT79tRa.png)\n\n- **Infernal Trees**: *These trees shine brightly, guiding the dead in their journey through the Inferno* \n\nThe **Fire Leaves** found on these trees make excellent light sources.\n\n(These trees have varying heights, as determined by white noise)\n\n![](http://i.imgur.com/MoLKV47.png)\n![](http://i.imgur.com/07Coz0E.png)\n\n- **Lava Falls**: *The source of all this lava is unknown*\n\n![](http://i.imgur.com/gIDBNXX.png)\n\n- **Caves** (This is a version of the Core caves plugin modified to work with this dimension)\n\n- **Lava Oceans**\n\n### Future expansion:\n- More sophisticated tree generation\n- A way to obtain the Resurrection Idol in the Overworld\n- Valuable resources in Inferno to incentivise players to enter\n- A special 'quest' or item that needs to be obtained to return to the Overworld\n- Lava flow (coming soon!)\n\n### Credits:\nResurrection Idol: https://pixabay.com/en/decoration-face-head-luau-mask-1293446/  \nEnter Portal sound: https://www.freesound.org/people/CosmicD/sounds/133003/ under [CC BY 3.0](https://creativecommons.org/licenses/by/3.0/)  \nInferno Ambience sound: https://www.freesound.org/people/KRISTIANKULTA/sounds/326962/ under [CC BY 3.0](https://creativecommons.org/licenses/by/3.0/)  \n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkzODkwMTU0Mg==",
    "name": "InGameHelp",
    "url": "https://github.com/Terasology/InGameHelp",
    "description": "Adds a help window.  Content can be added to the help window with prefabs.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/0dd50a43134f01482626885b6750b90addddcf3509acb741342796a5aefe9654/Terasology/InGameHelp",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"InGameHelp\",\n    \"version\": \"1.2.0-SNAPSHOT\",\n    \"author\": \"The Terasology Foundation\",\n    \"displayName\": \"In-Game Help\",\n    \"description\": \"Adds an in-game help window primarily for items (what it does, what it is, etc.)\",\n    \"dependencies\": [\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.0\"\n        },\n        {\n            \"id\": \"InGameHelpAPI\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Notifications\",\n            \"minVersion\": \"0.1.0\",\n            \"maxVersion\": \"0.3.0\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isAugmentation\": true\n}\n"
    },
    "readme": {
      "text": "InGameHelp\n============\n\nThis module adds a simple in-game help systems for items and other things. It allows for minor categorization of these\nitems.\n\n===\n\nIn order to add an item to the help system. follow the following instructions:\n\n* Open up the item's prefab file.\n* Make sure the item in question has a DisplayName component.\n* An ItemComponent is optional. But without it, a question-mark icon will be displayed.\n* Add the ItemHelp into the prefab.\n** \"title\" sets the title of the help subsection for this item. Leave it as the default unless you want to change up the UI.\n** \"category\" sets what section this help item will be located in. If not specific, it will default to \"Items\". If you\n   specify it, make sure that the item category actually exists.\n** \"paragraphText\" sets the description lines of this help item subsection.\n\nIn order to add a new category to the help system, follow the following instructions:\n\n* Clone the ItemsCategory.java file in this module, to your own module.\n* Rename the file to \"<NAME OF YOUR CATEGORY> Category\".\n* Change the constant string \"name\" to <NAME OF YOUR CATEGORY>\n* Under a (registered) system in your module, send a new OnAddNewCategoryEvent (through a dummy entity) that has a new\n  instance of your created category contained in it (passed in as a creation parameter). Make sure that this is sent\n  once during update. The event WILL NOT reach InGameHelp's receiver if the event is sent during initialise or preBegin.\n* Now, in your desired item prefabs, in the ItemHelpComponent, set the \"category\" variable to the name of your new category.\n* Start up Terasology, create a new game, open up the help system, and your new category should show up as a tab."
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk5Mjk2Mjk3NA==",
    "name": "InGameHelpAPI",
    "url": "https://github.com/Terasology/InGameHelpAPI",
    "description": "API of the InGameHelp module. This allows extension of the InGameHelp module without explicitly requring it.",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/3e62c660412885092360aa55708b3dd31dd9543d1f8323265dfc253891bebab6/Terasology/InGameHelpAPI",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"InGameHelpAPI\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"xrtariq2594\",\n  \"displayName\": \"In Game Help API\",\n  \"description\": \"API for InGameHelp module.\",\n  \"dependencies\": [\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"serverSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "InGameHelpAPI\n============\n\nThis module adds a simple in-game help systems for items and other things. It allows for minor categorization of these\nitems.\n\nThis module is an extension to the InGameHelp module, that contains the InGamHelp registry. The InGameHelpAPI module\nneeds to be added as a dependency by all modules that want to use the InGameHelp feature. Further, the InGameHelp\nhas a dependency on the InGameHelpAPI (this) module. This module essentially acts as an interface between the\nInGameHelp module and other modules which use it."
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzk1NjA2ODA=",
    "name": "Inventory",
    "url": "https://github.com/Terasology/Inventory",
    "description": "Provides a default inventory",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/6d3440fba73cc8e38b8c41c3a8fc73c631e2387b65b283108e7ecd663cf7876d/Terasology/Inventory",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Inventory\",\n  \"version\": \"1.5.0-SNAPSHOT\",\n  \"isReleaseManaged\": true,\n  \"displayName\": \"Core Inventory\",\n  \"author\": \"The Terasology Foundation\",\n  \"description\": \"This module adds a standard and simple inventory system as well as hooks for other modules\",\n  \"dependencies\": [\n    {\n      \"id\": \"CoreAssets\",\n      \"minVersion\": \"2.0.0\",\n      \"optional\": true\n    }\n  ],\n  \"isLibrary\": true,\n  \"isAugmentation\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyODY1NTk4NQ==",
    "name": "IRLCorp",
    "url": "https://github.com/Terasology/IRLCorp",
    "description": "Industrialized Reduction of Labor Corporation - Helping workmen everywhere",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/92add3032081485e18dc0680a346681c4c5c05cc79e2ac8e36aa2eabc24f9666/Terasology/IRLCorp",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"IRLCorp\",\n    \"version\": \"1.3.0-SNAPSHOT\",\n    \"author\": \"Josharias\",\n    \"displayName\": \"IRL Corp\",\n    \"description\": \"IRL Corp - for the industrialized reduction of labor\",\n    \"dependencies\": [\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"Durability\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Fluid\",\n            \"minVersion\": \"2.0.0\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"InGameHelp\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"ItemRendering\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Machines\",\n            \"minVersion\": \"1.2.0\"\n        },\n        {\n            \"id\": \"ManualLabor\",\n            \"minVersion\": \"1.3.0\"\n        },\n        {\n            \"id\": \"MultiBlock\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"PotentialEnergyDevices\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"StructuralResources\",\n            \"minVersion\": \"2.1.0\"\n        },\n        {\n            \"id\": \"Workstation\",\n            \"minVersion\": \"1.1.0\"\n        }\n    ],\n    \"isLibrary\": true,\n    \"isAsset\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMTU1NTU0ODc=",
    "name": "ItemPipes",
    "url": "https://github.com/Terasology/ItemPipes",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/f81093e494a53e9326dce4fddb010d948d59a9a60f805105cb29b14553e0410a/Terasology/ItemPipes",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"ItemPipes\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"The Terasology Foundation\",\n    \"displayName\": \"Item Pipes\",\n    \"description\": \"This library module allows to transport items via pipes.\",\n    \"serverSideOnly\": false,\n    \"dependencies\": [\n        {\n            \"id\": \"CoreAdvancedAssets\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\",\n            \"optional\": true\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"SegmentedPaths\",\n            \"minVersion\": \"1.0.0\"\n        }\n    ],\n    \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "# ItemPipes\n**ItemPipes** is a Terasology module that adds item transport system based on pipelines. ItemPipes are useful for automation purposes - this module lets you transport items without your involvement.\n\n## Items\n  - **Pipes** are the base of this module. They are used to transport items. You can connect them together with other pipes to make pipelines and with blocks such as Suction Blocks or chests.\n  - **Suction Block** is used to input items into pipes. Suction Block attracts all items laying on the ground within 5 block radius to suck them in. If more than one pipe is connected to a Suction Block, it will put the items randomly into one of the connected pipes.\n  \n_Check out **[AdditionalItemPipes](https://github.com/Terasology/AdditionalItemPipes)** for more interesting items using pipe system!_\n\n## Getting started\n_Note: The only way to obtain items provided by this module is to use `give <id>` command. To execute a command, open the console with <kbd>F1</kbd> key, type in a command and press <kbd>Enter</kbd>._\n\n1. Create a new world with the ItemPipes module enabled.\n2. Execute `give basicpipe` command to get some Pipes, and `give suction` to get some Suction Blocks.\n3. Your inventory should also have a chest in it. If it doesn't, execute `give chest` to get it. Put all of the three mentioned items into the hotbar and place them in a way like on the screnshot below.\n4. Remove all items from the chest (if there were any) and go infront of the suction block.\n5. Drop an item on the suction block and watch it go through the pipe.\n6. When the item in the pipe disappears, open the chest and voila - here's the item you've dropped!\n  \n## Creating pipelines\nTo create a pipeline just place two pipes next to each other. They will connect together with each other and make a pipeline. Every pipe is able to have up to 6 connections! If an item comes to a pipe which has more than two connections, it will go further into one of the other connected pipes randomly.\n\n## Integration with chests\nItemPipes allows the players to connect pipelines with chests to input items into them.\n\n![](https://user-images.githubusercontent.com/28996462/34639790-e94f8c18-f2e6-11e7-8c66-12589b3416f2.png)\n\n_A setup like this will put every dropped item in Suction Block's proximity into the chest._\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNzExMzI5Ng==",
    "name": "ItemRendering",
    "url": "https://github.com/Terasology/ItemRendering",
    "description": "A library for displaying \"holographic\" items in the world",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/5b777e452bf19192e67a95586c285fc369894630e6cbdb594fd6b22fe9888437/Terasology/ItemRendering",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"ItemRendering\",\n  \"version\": \"1.2.0-SNAPSHOT\",\n  \"author\": \"Josharias\",\n  \"displayName\": \"ItemRendering\",\n  \"description\": \"This library module allows to render and animate items when thrown into the world.\",\n  \"dependencies\": [\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "# RenderItemComponent\n\nAdd this to entities and they will display in the world.  This rendered version's location becomes a child of the owning entity (like the containing inventory). \n\n# CustomRenderedItemMeshComponent\n\nWhen the entity gets an RenderItemComponent added, it will use this mesh and material instead of the default block or item.\n\n## Minimal Usage on a prefab\n\n```java\n{\n    \"CustomRenderedItemMesh\" : {\n        \"mesh\" : \"UriOfYourMesh\",\n        \"material\" : \"UriOfYourMaterial\"\n    }\n}\n```\n\n\n# AnimateRotationComponent\n\nWhen the entity gets a AnimateRotationComponent added, it will rotate continuously.\n\n## Minimal Usage on a prefab\n\n```java\n{\n    \"AnimateRotation\" : {\n        \"yawSpeed|pitchSpeed|rollSpeed\" : <float value in rotations per second>\n    }\n}\n```\n\n## Defaults\n\n```java\n{\n    \"AnimateRotation\" : {\n        \"yawSpeed\" : \"0\",\n        \"pitchSpeed\" : \"0\",\n        \"rollSpeed\" : \"0\",\n        \"isSynchronized\" : \"false\"\n    }\n}\n```\n\n# AnimateBounceComponent\n\nWhen the entity gets a AnimateBounceComponent added, it will bounce continuously.\n\n## Minimal Usage on a prefab\n\n```json\n{\n    \"AnimateBounce\": {\n        \"maxHeight\" : 10.0,\n        \"period\" : 10.0\n    }\n}\n```\n\nA combination of AnimateBounceComponent and AnimateRotationComponent can be [watched on YouTube](https://www.youtube.com/watch?v=HhyODzw36bA).\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNjI5NjgzMQ==",
    "name": "JoshariasSurvival",
    "url": "https://github.com/Terasology/JoshariasSurvival",
    "description": "Survival a la Josharias",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/9999770d298cca540f29088a43e4907c4bf1c0d684ae9b8e68413be89401578b/Terasology/JoshariasSurvival",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"JoshariasSurvival\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"Josharias\",\n    \"displayName\": \"Josharias Survival\",\n    \"description\": \"Survival with an emphasis on technology\",\n    \"dependencies\": [\n        { \"id\": \"AdditionalFruits\", \"minVersion\": \"1.0.0\" },\n        { \"id\": \"BiomesAPI\", \"minVersion\": \"4.0.0\" },\n        { \"id\": \"Caves\", \"minVersion\": \"1.1.0\" },\n        { \"id\": \"ChrisVolume1OST\", \"minVersion\": \"1.0.0\" },\n        { \"id\": \"ChrisVolume2OST\", \"minVersion\": \"1.0.0\" },\n        { \"id\": \"CoreAdvancedAssets\", \"minVersion\": \"1.1.0\" },\n        { \"id\": \"CoreRendering\", \"minVersion\": \"1.0.0\" },\n        { \"id\": \"CoreWorlds\", \"minVersion\": \"1.1.0\", \"maxVersion\": \"3.0.0\" },\n        { \"id\": \"EdibleSubstance\", \"minVersion\": \"1.0.0\" },\n        { \"id\": \"EventualSkills\", \"minVersion\": \"1.0.0\" },\n        { \"id\": \"FlowingLiquids\", \"minVersion\": \"1.3.0\" },\n        { \"id\": \"Hunger\", \"minVersion\": \"1.1.0\" },\n        { \"id\": \"InGameHelp\", \"minVersion\": \"1.1.0\" },\n        { \"id\": \"InGameHelpAPI\", \"minVersion\": \"1.0.0\" },\n        { \"id\": \"Inventory\", \"minVersion\": \"1.1.0\" },\n        { \"id\": \"IRLCorp\", \"minVersion\": \"1.1.3\" },\n        { \"id\": \"Machines\", \"minVersion\": \"1.2.0\" },\n        { \"id\": \"ManualLabor\", \"minVersion\": \"1.3.0\" },\n        { \"id\": \"ManualLaborEventualSkills\", \"minVersion\": \"1.0.0\" },\n        { \"id\": \"OreGeneration\", \"minVersion\": \"2.0.0\" },\n        { \"id\": \"PlantPack\", \"minVersion\": \"1.1.0\" },\n        { \"id\": \"SimpleFarming\", \"minVersion\": \"2.1.0\" },\n        { \"id\": \"Thirst\", \"minVersion\": \"1.0.0\" },\n        { \"id\": \"WorkstationInGameHelp\", \"minVersion\": \"1.0.0\" },\n        { \"id\": \"WorldlyTooltip\", \"minVersion\": \"1.2.0\" },\n        { \"id\": \"Workstation\", \"minVersion\": \"1.1.0\" }\n    ],\n    \"isGameplay\": true,\n    \"isWorld\": true,\n    \"defaultWorldGenerator\": \"CoreWorlds:FacetedSimplex\"\n}\n"
    },
    "readme": {
      "text": "JoshariasSurvival\n=================\n\nThe most complex gameplay module there is to be seen (as of beginning of \n2019)! Contains several full technology trees and lots of other stuff too.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNjQxNTAxNQ==",
    "name": "Journal",
    "url": "https://github.com/Terasology/Journal",
    "description": "A journal!",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/4442486029775b180492b5a98741576542fbc1e9ffda3d57542b0c346bdbe623/Terasology/Journal",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Journal\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Marcin Sciesinski <marcins78@gmail.com>\",\n  \"displayName\": \"Journal\",\n  \"description\": \"Allows displaying story to the player, tracking progress in mods or game in general\",\n  \"dependencies\": [\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isLibrary\": true,\n  \"isAugmentation\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNDI5NTM4ODE=",
    "name": "Kallisti",
    "url": "https://github.com/Terasology/Kallisti",
    "description": "Library for embedding fantasy computer virtual machines in game engines.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/a44dc4c18502d975b5246dcb261b422f5f93480e27e96540149e64d0fd7cba0e/Terasology/Kallisti",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Kallisti\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"asiekierka\",\n  \"displayName\": \"Kallisti\",\n  \"description\": \"Library for embedding fantasy computer virtual machines in game engines.\",\n  \"dependencies\": [],\n  \"serverSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "# Kallisti\n\nKallisti is a library for embedding fantasy computer virtual machines inside other JVM-based systems, particularly\nJVM-based game engines.\n\nFantasy computers, in this meaning, refer to imaginary architectures designed for computer games, versus real-world\ntechnology. (However, it does not exclude support for the latter!)\n\nNote: Documentation is a work in progress.\n\n## Why?\n\n* Many sandbox-leaning games like to feature, or make available, an in-game computer system. Having a library which\nsolves the most common problems and provides compatibility with existing \"fantasy\" in-game codebases greatly\nsimplifies that.\n* Having a built-in simulator allows creators to test their in-game software without using the entire game engine, which\ncan be a costly and CPU/GPU-intensive process.\n* Having a common interface makes it easier for you to create your own, compatible designs and peripherals which work\nacross all games and architectures.\n\n## Key concepts\n\n* \"Components\" can be provided by the engine, and via implementing generic interfaces and automatically being wrapped\nthrough a rule-based system, the computer VM can translate it into APIs it understands internally.\n\n## Supported architectures\n\n* (WIP) OpenComputers/JNLua, based on the [OpenComputers](http://github.com/MightyPirates/OpenComputers) mod project."
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzg2MzUzNDk=",
    "name": "KComputers",
    "url": "https://github.com/Terasology/KComputers",
    "description": "Computer module powered by Kallisti",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/5f261d32b49d540e7053204fa03c039039f44f8eb1c2ddda66cb10c9eab2a1df/Terasology/KComputers",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"KComputers\",\n  \"version\": \"1.1.1-SNAPSHOT\",\n  \"author\": \"Adrian Siekierka <kontakt@asie.pl>\",\n  \"displayName\": \"KComputers\",\n  \"description\": \"Adds computers powered by the Kallisti library and compatible with OpenComputers.\",\n  \"dependencies\": [\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"Kallisti\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"MultiBlock\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"serverSideOnly\": false,\n  \"isLibrary\": true,\n  \"isAsset\": true\n}\n"
    },
    "readme": {
      "text": "KComputers\n=================\n\nModular computers, powered by [Kallisti](https://github.com/Terasology/Kallisti)!\n\nEarly WIP - does not run in a normal game environment yet.\n\nTo run this module with workarounds use either:\n\n* The `gradlew permissiveNatives` task to run the game with permissive security and an extra hook to load native files\n* The \"TerasologyPC (permissive security) run config in IntelliJ, after setting up the natives path in a variable\n  * Go to \"Path Variables\" under IntelliJ's settings, create `TERASOLOGY_NATIVES` and set it to the absolute path of the `natives` dir\n* From a game zip you'll need to execute Java with two extra arguments, `-Djava.library.path=<path to natives>` and `-permissiveSecurity` \n  \nTo get the hardware in-game:\n\n* `give display`\n* `give computer`\n* `give ROMOCBios`\n* `give CPULua53`\n* `give GPUOCType`\n* `give FloppyDiskOpenOS`\n* `give RAM256 5`\n\nPlace the computer and display blocks adjacent to each other in the world.\n\nOpen the computer block with `e` and plop all the hardware in filling in the leftover space with memory modules. Hit the \"Activate\" button\n\nSee https://github.com/MovingBlocks/Terasology/pull/3937 for some related discussion about natives. More work is needed to allow KComputers to run with security on and no special hooks for the [JNLua](https://github.com/MovingBlocks/JNlua) natives\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNDM0MDQyNjM=",
    "name": "KComputersSignalling",
    "url": "https://github.com/Terasology/KComputersSignalling",
    "description": "Signalling integration for KComputers",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/4534f78524f5ee9b941774f159e0de1b231edf8935c42550dd38324e59bb9114/Terasology/KComputersSignalling",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk3NTQ5NjE5Ng==",
    "name": "KotlinLib",
    "url": "https://github.com/Terasology/KotlinLib",
    "description": "Contains the language framework support for writing modules using Kotlin",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/b3dadcc062aaaba8b36c013cb825de222f37ae714d96bd74969e5b1a881641a0/Terasology/KotlinLib",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk1OTIyMzMxOA==",
    "name": "Lakes",
    "url": "https://github.com/Terasology/Lakes",
    "description": "Guess what this module contains! That's right, deserts! Er, wait.",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/26abe113c1c8546bf0cfe8c83a9c7b08b9c505462d88193a6648aac106b9e104/Terasology/Lakes",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Lakes\",\n    \"version\": \"2.0.0-SNAPSHOT\",\n    \"author\": \"The Terasology Foundation\",\n    \"displayName\": \"Lakes\",\n    \"description\": \"Plugin for world generation, which creates small lakes\",\n    \"dependencies\": [\n        { \"id\": \"CoreAssets\", \"minVersion\": \"2.0.1\" },\n        { \"id\": \"CoreWorlds\", \"minVersion\": \"1.1.0\", \"maxVersion\": \"3.0.0\" },\n        { \"id\": \"BiomesAPI\", \"minVersion\": \"4.0.0\" },\n        { \"id\": \"ParadIce\", \"minVersion\": \"0.1.0-SNAPSHOT\" }\n    ],\n    \"isWorld\": true\n}\n"
    },
    "readme": {
      "text": "Lakes\n=======================\n\n\nCurrent features:  \n-lakes based on distorted circles\n-underground and surface lakes and lava lakes  \n-underground will create a small cave above them, and surface lakes will smooth out their shorelines a little\n-desert lakes have palm trees around them\n\nKnown issues:  \n- Occasionally, lakes have uneven surfaces\n- Underground lakes sometimes overlap with each other\n- Lakes are far more common in generally flat areas\n\nFuture plans:  \n-join adjacent surface lakes together to one waterheight  \n-add lake biome  \n-base lake probability  on surfacehumidityfacet  \n\n![sc1](/images/smooth1.png)\n![sc2](/images/smooth2.png)\n![sc3](/images/smooth3.png)\n\n\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNjg5MTUyNQ==",
    "name": "LandOfTerra",
    "url": "https://github.com/Terasology/LandOfTerra",
    "description": "Module collection for rpg game experience (like Minecraft and Skyrim)",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/a87d379c5e2132274107603d2df2cf889a969d160d781c8d55389e6c369f02a8/Terasology/LandOfTerra",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNjIzODY0NA==",
    "name": "LegacyMusic",
    "url": "https://github.com/Terasology/LegacyMusic",
    "description": "A collection of legacy music assets",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/97d7bfcd09405a6022707df3c7bc4c2e9eea71af707e626d05f5f22828a3f2ee/Terasology/LegacyMusic",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"LegacyMusic\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Various Authors\",\n  \"displayName\": \"Legacy Music\",\n  \"description\": \"A collection of legacy music assets\",\n  \"dependencies\": [\n    {\n      \"id\": \"MusicDirector\",\n      \"minVersion\": \"1.0.0\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isAsset\": true\n}\n"
    },
    "readme": {
      "text": "LegacyMusic\n===========\n\nA collection of legacy music assets\n\n* Kevin Macleod - [Spacial Winds (Public Domain)](http://freepd.com/Cinematic/Spacial%20Winds).\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzg5NTIwNg==",
    "name": "LightAndShadow",
    "url": "https://github.com/Terasology/LightAndShadow",
    "description": "Light & Shadow is an experimental game type set in a quirky Alice in Wonderland inspired setting",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/ae2e550215846dcf8d14a488c6abea7408b7d0a81b79da806b00c3680a9073da/Terasology/LightAndShadow",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"LightAndShadow\",\n    \"version\": \"1.2.0-SNAPSHOT\",\n    \"author\": \"The Terasology Foundation\",\n    \"displayName\": \"Light & Shadow\",\n    \"description\": \"Light & Shadow is an experimental game type set in a quirky Alice in Wonderland inspired setting\",\n    \"dependencies\": [\n        {\n            \"id\": \"BiomesAPI\",\n            \"minVersion\": \"4.0.0\"\n        },\n        {\n            \"id\": \"Cities\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"CoreRendering\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"CoreWorlds\",\n            \"minVersion\": \"1.1.0\",\n            \"maxVersion\": \"3.0.0\"\n        },\n        {\n            \"id\": \"Dialogs\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Economy\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"ItemRendering\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"LightAndShadowResources\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Notifications\",\n            \"minVersion\": \"0.1.0\",\n            \"maxVersion\": \"0.3.0\"\n        },\n        {\n            \"id\": \"Tasks\",\n            \"minVersion\": \"1.0.0\"\n        }\n    ],\n    \"isServerSideOnly\": false,\n    \"isGameplay\": \"true\",\n    \"defaultWorldGenerator\": \"LightAndShadow:lasWorld\"\n}\n"
    },
    "readme": {
      "text": "# LightAndShadow\nLight &amp; Shadow is an experimental game type set in a quirky Alice in Wonderland inspired setting\n\n![image1](images/2015-10-11-screenshot.png \"Choose your team!\")\n\n\n### License\n\nThis module is licensed under the [Apache 2.0 License](http://www.apache.org/licenses/LICENSE-2.0.html).\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNDA1MTYyMQ==",
    "name": "LightAndShadowResources",
    "url": "https://github.com/Terasology/LightAndShadowResources",
    "description": "Art resources module for Light & Shadow, a.k.a. LASR!",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/245937df126d0837b7643fd0a5101f53df76d73f05410703a074b7bc9431a80d/Terasology/LightAndShadowResources",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"LightAndShadowResources\",\n  \"version\": \"1.2.0-SNAPSHOT\",\n  \"author\": \"glasz, SuperSnark, Skaldarnar, msteiger, smsunarto\",\n  \"displayName\": \"Light & Shadow - Resources\",\n  \"description\": \"Art resources module for Light & Shadow, a.k.a. LASR!\",\n  \"dependencies\": [\n    {\n      \"id\": \"CoreAssets\",\n      \"minVersion\": \"2.0.1\"\n    },\n    {\n      \"id\": \"CombatSystem\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"Drops\",\n      \"minVersion\": \"1.0.1\"\n    },\n    {\n      \"id\": \"Health\",\n      \"minVersion\": \"2.0.0-SNAPSHOT\"\n    },    \n    {\n      \"id\": \"ItemRendering\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isAsset\": true\n}\n"
    },
    "readme": {
      "text": "# Light and Shadow Resources\nArt resources module for [Light & Shadow](https://github.com/Terasology/LightAndShadow), a.k.a. LASR!\n\nContributing\n============\nYou can help contribute to LightAndShadowResources by creating the assets that is listed [here](https://github.com/MovingBlocks/Terasology/issues/2575)\n\n**Most of the art assets have concept art available at** http://forum.terasology.org/threads/las-light-and-shadow-art-discussion.762/. Some might even be partially complete - check the relevant issue or ask on IRC (freenode: #terasology) to see if that's the case.\n\n\nLicense\n=======\nThis module is licensed under the [Apache 2.0 License](http://www.apache.org/licenses/LICENSE-2.0.html)."
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk5MjA3NDk1MA==",
    "name": "Lost",
    "url": "https://github.com/Terasology/Lost",
    "description": "An adventure gameplay module filled with traps and puzzles.",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/067afeece4728f1cf754739181b1486338b296293d08f80c088615b847c23f19/Terasology/Lost",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Lost\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"nihal111\",\n    \"displayName\": \"Lost\",\n    \"description\": \"Are you truly lost? Will you ever return home?\",\n    \"dependencies\": [\n        {\n            \"id\": \"AdventureAssets\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"BiomesAPI\",\n            \"minVersion\": \"4.0.0\"\n        },\n        {\n            \"id\": \"Books\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"CommonWorld\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"ChrisVolume1OST\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"CoreAdvancedAssets\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"CoreRendering\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"CoreWorlds\",\n            \"minVersion\": \"1.1.0\",\n            \"maxVersion\": \"3.0.0\"\n        },\n        {\n            \"id\": \"DamagingBlocks\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Journal\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"PolyWorld\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"StructureTemplates\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"WorldlyTooltip\",\n            \"minVersion\": \"1.2.0\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isGameplay\": \"true\",\n    \"defaultWorldGenerator\": \"Lost:lost\"\n}\n"
    },
    "readme": {
      "text": "# Lost\n\nAre you truly lost? Will you ever return home?\nA researcher on a space expedition is stranded on an alien world with no way to get home.  \n\n ## How To Play\n\nDownload the Lost module and its dependencies. When this is installed, create a new world with the Lost template. If everything worked, you should spawn in a world with a small house nearby.\n\n## Current Features\n\n### Special Structure Generation\n\nAs you explore you might find buildings that contain treasures, secrets and puzzles.\n\n<details><summary>Spoiler regarding some puzzles.</summary>\n<p>\n\nBuildings are generated as you are exploring, some puzzles might require you to revisit areas.\n\n</p>\n</details>\n\n![House that starts your adventure](https://i.imgur.com/JywAWZ2.png)\n\n### Self-updating Journal\n\nAs you progress the story will be added in your Journal as you gather more research.\n\n![Journal that gives story elements](https://i.imgur.com/8wCww4Q.png)\n\n### Find Books That Help You Continue Your Journey\n\nFind books to be your guide.\n\n![Book of secrets](https://i.imgur.com/7Leuuni.png)\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNjI4ODE2OA==",
    "name": "Machines",
    "url": "https://github.com/Terasology/Machines",
    "description": "An assortment of machine infrastructure",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/0082492112bb61b1cc0d2b24227aa0635d3de9b1fdcf791b0f4ada9b4c2f8c7c/Terasology/Machines",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Machines\",\n  \"version\": \"1.3.1-SNAPSHOT\",\n  \"author\": \"Josharias\",\n  \"displayName\": \"Machines\",\n  \"description\": \"A library for machines\",\n  \"dependencies\": [\n    {\n      \"id\": \"FlowingLiquids\",\n      \"minVersion\": \"1.3.0\",\n      \"optional\": true\n    },\n    {\n      \"id\": \"Fluid\",\n      \"minVersion\": \"2.0.0\"\n    },\n    {\n      \"id\": \"InGameHelp\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"ItemRendering\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"PotentialEnergyDevices\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"Workstation\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "## Machines\nA module that provides the infrastructure to easily make machines for processing or assembly of materials.\n\nSee the forum for discussion: http://forum.terasology.org/threads/machines.938/\n\n## Entity Network\n- A set of components and systems to join entities together in a group.  These groups can then be queried so that interactions between joined entites can be orchestrated.\n\n[Entity Network Readme](src/main/java/org/terasology/entityNetwork/README.md)\n\n## Fluid\nsee Fluid\n\n## Fluid Transport\n- Tanks that can be interacted with by containers of fluid (like a bucket).\n- Pipes that simulate gravity and let fluid naturally flow from elevated tanks to lower tanks.\n- Pumps that input power to lift fluid to elevated tanks.\n\n## Item Transport\n- Ejection/extraction of items to/from adjacent inventories\n\n## Machines\n- A default UI implementation for an inventory based workstation process that allows a single visual extension\n- A system to simplify setup of a block to be a machine. It will automatically add an inventory, slot mappings, and extension of the default UI\n- Surface Placement block family to assist connecting devices in the right direction\n\n## Mechanical Power\n- Uses the EntityNetwork submodule and PotentialEnergyDevices module to enable transfer, storage, and production of energy\n\n[Mechanical Power Readme](src/main/java/org/terasology/mechanicalPower/README.md)\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk3NTEzNTMyNA==",
    "name": "MagicalStats",
    "url": "https://github.com/Terasology/MagicalStats",
    "description": "Stats that are more magical in nature",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/65bbb5cef4bf52a482ebf1e2ae2ed8a008cfe6e2cfab9966c2dcafb95cc9fbac/Terasology/MagicalStats",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzYwNzY4Nw==",
    "name": "Malicious",
    "url": "https://github.com/Terasology/Malicious",
    "description": "This module contains a number of tests for the sandboxing of modules, to ensure that security is correctly enforced",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/7708607be68dcf4402a105c648b3976a1f61616ef58b658b82fe8ce26c0a2b54/Terasology/Malicious",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Malicious\",\n    \"version\": \"1.0.0\",\n    \"author\": \"Immortius\",\n    \"displayName\": \"Malicious Exploit Security Checks\",\n    \"description\": \"This module contains a number of tests for the sandboxing of modules, to ensure that security is correctly enforced\",\n    \"dependencies\": [],\n    \"isServerSideOnly\": false,\n    \"isSpecial\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNzExMzM1Mg==",
    "name": "ManualLabor",
    "url": "https://github.com/Terasology/ManualLabor",
    "description": "Work is hard.  Here are tools a workman needs to make digging and chopping easier.",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/79e21d1edfd3902c3e85148e8b45dfc3664e9b85d7561da2e6f917672fdaed3c/Terasology/ManualLabor",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"ManualLabor\",\n    \"version\": \"1.4.0-SNAPSHOT\",\n    \"author\": \"Josharias\",\n    \"displayName\": \"Manual Labor\",\n    \"description\": \"Adds tools to make manual tasks like digging and chopping easier.\",\n    \"dependencies\": [\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"Drops\",\n            \"minVersion\": \"1.0.1\"\n        },\n        {\n            \"id\": \"Durability\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"EdibleSubstance\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"InGameHelp\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"ItemRendering\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Machines\",\n            \"minVersion\": \"1.2.0\"\n        },\n        {\n            \"id\": \"SubstanceMatters\",\n            \"minVersion\": \"2.0.0\"\n        },\n        {\n            \"id\": \"WildAnimals\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Workstation\",\n            \"minVersion\": \"1.1.0\"\n        }\n    ],\n    \"isAsset\": true,\n    \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "# Manual Labor\n\n## Conventions\n\n- Liquid amounts are in mL.  1 bucket is 1000mL (1 liter)\n- Substances are measured in mL\n- A metal nugget should be roughly 10mL\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkzODM1NDQxMw==",
    "name": "ManualLaborEventualSkills",
    "url": "https://github.com/Terasology/ManualLaborEventualSkills",
    "description": "Adds skill requirements to Manual Labor processes",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/b2d59dfcb2e6f465e6f7d62277a8008317644f917343f60d9f813df58ef2a9a1/Terasology/ManualLaborEventualSkills",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"ManualLaborEventualSkills\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Josharias\",\n  \"displayName\": \"ManualLabor - Eventual Skills\",\n  \"description\": \"Adds skill requirements to Manual Labor processes\",\n  \"dependencies\": [\n    {\n      \"id\": \"EventualSkills\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"ManualLabor\",\n      \"minVersion\": \"1.3.0\"\n    },\n    {\n      \"id\": \"Workstation\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxOTc2MDk3MTI=",
    "name": "Market",
    "url": "https://github.com/Terasology/Market",
    "description": "A module to add market where one can buy items in exchange for other items.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/4aadf91313880907d0985fb4e9b326772cccf1f4ff7b61cf4c78297dc7962a68/Terasology/Market",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNjA2MjU5Ng==",
    "name": "MarkovChains",
    "url": "https://github.com/Terasology/MarkovChains",
    "description": "Library module for the production of pseudo-random sequences.",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/0ac354d79debf05a97a388f69215d2c027b233791b82433c55cc9df899ce591a/Terasology/MarkovChains",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"MarkovChains\",\n  \"version\": \"1.6.1-SNAPSHOT\",\n  \"displayName\": \"Markov Chains\",\n  \"author\": \"Linus van Elswijk\",\n  \"description\": \"Library module for the production of pseudo-random sequences.\",\n  \"dependencies\": [],\n  \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "\n## MarkovChains\n\nA library module implementing (any-order) Markov chains.\nMarkov chains can be used for the production of pseudo-random sequences."
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxODQ1ODQzMg==",
    "name": "MasterOfOreon",
    "url": "https://github.com/Terasology/MasterOfOreon",
    "description": "Master the Oreons, or others like them, from the throne-world of the Ancients! A menu command system.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/41712abb71562ee06a4b27e2c87b70caee0511f6b77ff121908f734ac33beec4/Terasology/MasterOfOreon",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"MasterOfOreon\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"Mike Kienenberger <mkienenb@gmail.com>\",\n    \"displayName\": \"Master Of Oreon\",\n    \"description\": \"Provides a manager interface for working with Terasology\\nUse the 'O' key to toggle mouse grab so you can use the interface.\",\n    \"dependencies\": [\n        {\n            \"id\": \"Behaviors\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Books\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"ChangingBlocks\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"ChiselBlocks\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Cities\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"CommonWorld\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"CoreAdvancedAssets\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"CoreRendering\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Fences\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"ItemRendering\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"NameGenerator\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Oreons\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"StructuralResources\",\n            \"minVersion\": \"2.1.0\"\n        },\n        {\n            \"id\": \"StructureTemplates\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"WorldlyTooltip\",\n            \"minVersion\": \"1.2.0\"\n        },\n        {\n            \"id\": \"WorldlyTooltipAPI\",\n            \"minVersion\": \"1.0.0\"\n        }\n    ],\n    \"isServerSideOnly\": false,\n    \"isGameplay\": true,\n    \"defaultWorldGenerator\": \"CoreWorlds:FacetedSimplex\"\n}\n"
    },
    "readme": {
      "text": "Master of Oreon World Manager Interface for Terasology\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNDQyODY4OA==",
    "name": "Maze",
    "url": "https://github.com/Terasology/Maze",
    "description": "The A-mazing maze module!",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/724e955ede1133c6bb85b0a61dbabeec848dab6d6c428da8630c7458868c6c8d/Terasology/Maze",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Maze\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"synopia\",\n  \"displayName\": \"Maze\",\n  \"description\": \"Helper and tools to generate mazes\",\n  \"dependencies\": [\n    {\n      \"id\": \"CoreAssets\",\n      \"minVersion\": \"2.0.1\"\n    },\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"isServerSideOnly\": true,\n  \"isWorld\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNTQzOTYzNzk=",
    "name": "MazeAPIs",
    "url": "https://github.com/Terasology/MazeAPIs",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/4595cf6a946e673fb0844b6d1693f27ecbf3626879e12c8d75fde12df364902b/Terasology/MazeAPIs",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk2NTk5Mjk5MA==",
    "name": "MedievalCities",
    "url": "https://github.com/Terasology/MedievalCities",
    "description": "Medieval-themed assets and resources for (dynamic) cities.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/3b7574400715660d0ef2b7062cc160774d8f23f6e23dfcbea6abdf7fc3bfda3f/Terasology/MedievalCities",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"MedievalCities\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"skaldarnar\",\n  \"displayName\": \"Medieval Cities\",\n  \"description\": \"Provides a Medieval era culture definition for a system like DynamicCities along with some extras.\",\n  \"dependencies\": [\n    {\n      \"id\": \"CoreAdvancedAssets\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"CoreAssets\",\n      \"minVersion\": \"2.0.1\"\n    },\n    {\n      \"id\": \"DynamicCities\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"Fences\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"StructureTemplates\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"StructuralResources\",\n      \"minVersion\": \"2.1.0\"\n    }\n  ],\n  \"serverSideOnly\": false,\n  \"isAsset\": true,\n  \"isWorld\": true,\n  \"defaultWorldGenerator\": \"DynamicCities:DynamicCities\"\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxODc2NDA3NDM=",
    "name": "MetalRenegades",
    "url": "https://github.com/Terasology/MetalRenegades",
    "description": "A harsh western world with a robotic twist.",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/9b8d22db9fcb379a30854ef4b379c8a281d5b377d503d73c55f7e37395a16110/Terasology/MetalRenegades",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"MetalRenegades\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"The Terasology Foundation\",\n    \"displayName\": \"Metal Renegades\",\n    \"description\": \"A harsh western world with a robotic twist.\",\n    \"dependencies\": [\n        {\n            \"id\": \"AdditionalFruits\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"AdditionalVegetables\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"AdvancedRails\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Behaviors\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"BiomesAPI\",\n            \"minVersion\": \"4.1.0\"\n        },\n        {\n            \"id\": \"Cities\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"CombatSystem\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"CommonWorld\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"CoreAdvancedAssets\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"CoreRendering\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"CoreWorlds\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Dialogs\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"DynamicCities\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Economy\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Fences\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"GenericRocks\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Gooey\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"GrowingFlora\",\n            \"minVersion\": \"1.1.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Hunger\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Minimap\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"NameGenerator\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"OreGeneration\",\n            \"minVersion\": \"2.0.0\"\n        },\n        {\n            \"id\": \"PlantPack\",\n            \"minVersion\": \"1.2.2-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Rails\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"SimpleFarming\",\n            \"minVersion\": \"2.1.0\"\n        },\n        { \n            \"id\": \"Soils\",\n            \"minVersion\":  \"1.0.0\"\n        },\n        {\n            \"id\": \"StructureTemplates\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Tasks\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Thirst\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"WildAnimals\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"WorldlyTooltip\",\n            \"minVersion\": \"1.2.0\"\n        },\n        {\n            \"id\": \"WorldlyTooltipAPI\",\n            \"minVersion\": \"1.0.0\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isGameplay\": true,\n    \"defaultWorldGenerator\": \"MetalRenegades:dynamicWorld\"\n}\n"
    },
    "readme": {
      "text": "# Metal Renegades\n\n_This is a module for [Terasology].\nIt provides a gameplay mode for a harsh western world with a robotic twist._\n\n<h2 align=\"center\"><a href=\"https://terasology.github.io/MetalRenegades\">👉 Documentation 👈</a></h2>\n\n![The robots of Metal Renegades](https://forum.terasology.org/attachments/good-bad-gooey-png.1523/)\n\n## Contributing\n\nWe welcome contributions to our modules, be it bug fixes or feature contributions. \nCheck out the [Contributor Guide][contributor-guide] on the main project wiki to learn more.\n\nTo check out this module (and all its dependencies) to your Terasology workspace run (in the workspace root):\n\n```\ngroovyw module recurse MetalRenegades\n```\n\nTo build a module JAR for just this module run (in the workspace root):\n\n```\ngradlew :module:MetalRenegades:jar\n```\n\nTo run all tests and static code checks for this module run (in the workspace root):\n\n```\ngradlew :module:MetalRenegades:check\n```\n\n### Documentation via gh-pages\n\nThe documentation of this module is build with [docsify]. \nIt is served via [gh-pages].\nTo preview the site you can either use the `docsify` [CLI tool](https://github.com/docsifyjs/docsify-cli) or just run a static server on the `docs` folder.\n\n<!-- References -->\n[Terasology]: https://github.com/MovingBlocks/Terasology\n[gh-pages]: https://pages.github.com/\n[docsify]: https://docsify.js.org/#/\n[contributor-guide]: https://github.com/MovingBlocks/Terasology/wiki/Contributor-Quick-Start\n "
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzYwNzcyNg==",
    "name": "Minerals",
    "url": "https://github.com/Terasology/Minerals",
    "description": "This module adds a wide range of minerals.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/1fccdf4726263191f4168272c5ada5b91e99e9df55bd694bdc4357b3e1e32859/Terasology/Minerals",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Minerals\",\n    \"version\": \"1.0.0-SNAPSHOT\",\n    \"author\": \"Metouto,Esa-Petri,Qwertygiy\",\n    \"displayName\": \"Mineral Pack\",\n    \"description\": \"This module adds a wide range of minerals.\",\n    \"dependencies\": [\n        { \"id\": \"CoreAssets\", \"minVersion\": \"2.0.1\" },\n        { \"id\": \"GenericRocks\", \"minVersion\": \"1.0.0\" }\n    ],\n    \"isServerSideOnly\": false,\n    \"isAsset\": true\n}\n"
    },
    "readme": {
      "text": "# Minerals\nThis module adds a wide range of minerals, ores, and everything inbetween. Sands do not go in this library, they instead go into the soils library. \n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMDg2OTQwOTY=",
    "name": "Minesweeper",
    "url": "https://github.com/Terasology/Minesweeper",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/c583681de25abb97da00343bb72e41bd58b738036603c0ae160c577cb5e59324/Terasology/Minesweeper",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"MineSweeper\",\n    \"version\": \"1.0.0-SNAPSHOT\",\n    \"author\": \"The Terasology Foundation\",\n    \"displayName\": \"Mine Sweeper\",\n    \"description\": \"This module allows to play Mine Sweeper in Terasology.\",\n    \"dependencies\": [\n        { \"id\": \"CoreAssets\", \"minVersion\": \"2.0.1\" },\n        { \"id\": \"CustomOreGen\", \"minVersion\": \"1.0.0\" },\n        { \"id\": \"Explosives\", \"minVersion\": \"1.0.0\" }\n    ],\n    \"serverSideOnly\": false,\n    \"isSpecial\": true\n}\n"
    },
    "readme": {
      "text": "# Minesweeper\n\nThe Minesweeper module adds minefields to Terasology. The minefields appear across the world upon loading. The basic goal is to mine all the surrounding blocks and mark all the mines without setting off the entire field.\n\n## Guide\n\nThis module adds minefields which naturally generate in the world. In order to make them generate, all you need to do is enable the module. The minefields consist of stone-like blocks which all look the same. However, they are not. Some of them are harmless, but others are mines. The harmless ones can be mined safely, but mines will create a huge explosion, usually destroying the whole minefield, if you try to mine them. The ones on the outside will always be safe, though.\n\nEach block also has a number on it. Similar to the original minesweeper, this number represents the number of mines within a 3x3x3 cube centered around that block, including the block itself if it is a mine. Theoretically, this means that the highest possible number would be a 27, however the minefields are generated in such a way that it will never exceed 16. When a block is destroyed, as long as it isn’t a mine, it will leave behind a floating number with the same value so that you can still use the information.\n\nAny block in the minefield which you think is a mine can be marked using the interaction key, which is `E` by default. If you successfully mark every mine in the field, the entire thing will be cleared and you will receive an ore as a reward. The larger the minefield was, the better the ore that you get is. There is also currently no penalty for marking a block which isn’t a mine, however there's no benefit to it either.\n\n![Minefield with some blocks mined and one mine marked](https://raw.githubusercontent.com/Terasology/Minesweeper/master/image.png)\n\n![Cleared minefield with coal ore reward](https://user-images.githubusercontent.com/1063833/33593053-ad1a4692-d95b-11e7-9116-21ccec981536.jpg)\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNTQ1ODEwNw==",
    "name": "Minimap",
    "url": "https://github.com/Terasology/Minimap",
    "description": "A Minimap for Terasology",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/6b1d69bf0ba4afd481d0b209841b279174128c9490c19ac7fff6ba24052d020c/Terasology/Minimap",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Minimap\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"mkienenb, msteiger\",\n  \"displayName\": \"Minimap\",\n  \"description\": \"This module adds a minimap to the UI using the HUD Element system.\\n\\n'M' toggles the map visibility. \\n\\n'Number-Pad-Minus' and 'Number-Pad-Plus' decrease and increase the zoom factor.\",\n  \"dependencies\": [],\n  \"isServerSideOnly\": false,\n  \"isAugmentation\": true\n}\n"
    },
    "readme": {
      "text": "# Minimap\n![teaser](images/2015-09-13_screenshot.jpg \"A screenshot of the Minimap of a Perlin World\")\n\nThis module adds a minimap to the UI using the HUD Element system.\n\n`M` toggles the map visibility.\n\n`Number-Pad-Minus` and `Number-Pad-Plus` decrease and increase the zoom factor.\n\n### Images\n\nThe \"Maps Center Direction Icon\" image was taken from https://icons8.com/ (Linkware License)\n\n### License\n\nThis module is licensed under the [Apache 2.0 License](http://www.apache.org/licenses/LICENSE-2.0.html). \n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkzNDQ5ODM0MA==",
    "name": "MobileBlocks",
    "url": "https://github.com/Terasology/MobileBlocks",
    "description": "Because naming this module MovingBlocks would just be cruel (there would be MovingBlocks/Terasology and Terasology/MovingBlocks ...)",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/f6ca200eedc467f58f02e65dc585b5b71a18a26c0157fc6d57d859c0880afd78/Terasology/MobileBlocks",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"MobileBlocks\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"Marcin Sciesinski<marcins78@gmail.com>\",\n    \"displayName\": \"Mobile Blocks\",\n    \"description\": \"Allowing blocks to move\",\n    \"dependencies\": [\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        }\n    ],\n    \"isServerSideOnly\": false,\n    \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkzNDE1MTY5MA==",
    "name": "ModularComputers",
    "url": "https://github.com/Terasology/ModularComputers",
    "description": "Adds support for in-game computers with various functionality modules available",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/a5a3ec1f2a3a5b1ef9d9a7e3fd529511dfd8aeec9c8eeef4dd8ac5e31cc4caec/Terasology/ModularComputers",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"ModularComputers\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Marcin Sciesinski <marcins78@gmail.com>\",\n  \"displayName\": \"Modular Computers\",\n  \"description\": \"Computers in Terasology! Automate all the things with just a bit of programming.\",\n  \"dependencies\": [\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"MobileBlocks\",\n      \"minVersion\": \"1.0.0\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk4ODYzNTU1Mw==",
    "name": "ModuleTestingEnvironment",
    "url": "https://github.com/Terasology/ModuleTestingEnvironment",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/d47db411c3af1e4d4c4f4b0388a6eda119082dd3b1b24e67a0af9d87ee1f6c51/Terasology/ModuleTestingEnvironment",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"ModuleTestingEnvironment\",\n    \"version\": \"0.3.3-SNAPSHOT\",\n    \"author\": \"The Terasology Foundation\",\n    \"displayName\": \"Module Testing Environment\",\n    \"description\": \"A test helper to instantiate a full headless TerasologyEngine instance.\",\n    \"dependencies\": [],\n    \"serverSideOnly\": false,\n    \"isLibrary\": true,\n    \"isSpecial\": true\n}\n"
    },
    "readme": {
      "text": "# ModuleTestingEnvironment\n\nA test helper to instantiate a full headless TerasologyEngine instance in JUnit tests.\n\n## Usage\n\nFor more examples see\n[the test suite](https://github.com/terasology/ModuleTestingEnvironment/tree/develop/src/test/java/org/terasology/moduletestingenvironment).\n\nHere's an example taken from the test suite:\n\n```java\n@ExtendWith(MTEExtension.class)\n@Dependencies(\"MyModule\")\n@UseWorldGenerator(\"CoreWorlds:flat\")\npublic class ExampleTest {\n\n    @In\n    private WorldProvider worldProvider;\n    @In\n    private BlockManager blockManager;\n    @In\n    private EntityManager entityManager;\n    @In\n    private ModuleTestingHelper helper;\n\n    @Test\n    public void testExample() {\n        // create some clients (the library connects them automatically)\n        Context clientContext1 = helper.createClient();\n        Context clientContext2 = helper.createClient();\n\n        // wait for both clients to be known to the server\n        helper.runUntil(()-> Lists.newArrayList(entityManager.getEntitiesWith(ClientComponent.class)).size() == 2);\n        assertEquals(2, Lists.newArrayList(entityManager.getEntitiesWith(ClientComponent.class)).size());\n\n        // run while a condition is true or until a timeout passes\n        boolean timedOut = helper.runWhile(1000, ()-> true);\n        assertTrue(timedOut);\n\n        // send an event to a client's local player just for fun\n        clientContext1.get(LocalPlayer.class).getClientEntity().send(new ResetCameraEvent());\n\n        // wait for a chunk to be generated\n        helper.forceAndWaitForGeneration(new Vector3i());\n\n        // set a block's type and immediately read it back\n        worldProvider.setBlock(Vector3i.zero(), blockManager.getBlock(\"engine:air\"));\n        assertEquals(\"engine:air\", worldProvider.getBlock(Vector3f.zero()).getURI().toString());\n    }\n}\n```\n\n## Receiving events\n\nYou can use a `TestEventReceiver` to inspect events fired against the engine context.\n\n```java\nTestEventReceiver receiver = new TestEventReceiver<>(context, DropItemEvent.class, (event, entity) -> {\n  // do something with the event or entity\n});\n```\n\n## Delay code\n\nConventionally, we use `while (condition)` to wait for delaying action. This can be done in MTE test by using\n`runWhile()` method. This runs the test engine while the condition is true.\n\n```java\nrunWhile(() -> true);\n```\n\nConversely, for running the enging _until_ some condition is true, use `runUntil()`\n\n```java\nrunUntil(() -> false);\n```\n\nCheck the JavaDoc and test suite for more usage examples.\n\n## Isolating test cases\n\nBy default `MTEExtension` will reuse the same engine instance for all test cases. If you want to create a new engine\ninstance for every test (and wait **much** longer) try `IsolatedMTEExtension`.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzYwNzgwOA==",
    "name": "MoreLights",
    "url": "https://github.com/Terasology/MoreLights",
    "description": "This module adds lights, such as glowing flora,blocks,and artificial sources",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/6b0ec4be36b9b04573fc6506a205e64bed7e54c49ef5e8bec298eced27815de5/Terasology/MoreLights",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"MoreLights\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Esa-Petri\",\n  \"displayName\": \"More Lights\",\n  \"description\": \"This module adds lights, such as glowing flora, blocks, and artificial sources\",\n  \"dependencies\": [],\n  \"isServerSideOnly\": false,\n  \"isAsset\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNjQxNTA2Nw==",
    "name": "MultiBlock",
    "url": "https://github.com/Terasology/MultiBlock",
    "description": "Multi block multi block!",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/a48726865b5c396ced81e636591658f538e77006959692239a969d02e3c15297/Terasology/MultiBlock",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"MultiBlock\",\n    \"version\": \"1.1.1-SNAPSHOT\",\n    \"author\": \"Marcin Sciesinski <marcins78@gmail.com>\",\n    \"displayName\": \"Multi Block\",\n    \"description\": \"Simplifies creating multi-block structures\",\n    \"dependencies\": [\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        }\n    ],\n    \"isServerSideOnly\": false,\n    \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNjAyMjY5OQ==",
    "name": "MusicDirector",
    "url": "https://github.com/Terasology/MusicDirector",
    "description": "A module that controls music assets from other modules",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/dff35e726f416912360eee6203439c4fe731cd3da760714d64334c6dfb2f9c6e/Terasology/MusicDirector",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"MusicDirector\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"msteiger\",\n  \"displayName\": \"MusicDirector\",\n  \"description\": \"A module that controls music assets from other modules\",\n  \"dependencies\": [],\n  \"isServerSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "MusicDirector\n=============\n\nA module that controls music assets from other modules\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzcyODkzOQ==",
    "name": "NameGenerator",
    "url": "https://github.com/Terasology/NameGenerator",
    "description": "This module adds name generators.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/910a814c84576c2be827a72ae5b165e5d344c0c86ed1d9d945e634be290b3e0b/Terasology/NameGenerator",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"NameGenerator\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"msteiger and Tobias 'skaldarnar' Nett\",\n  \"displayName\": \"Random Name Generator\",\n  \"description\": \"This module provides randomized name for different entities.\",\n  \"dependencies\": [\n    {\n      \"id\": \"MarkovChains\",\n      \"minVersion\": \"1.5.1\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "# Name Generator\n\nA module that creates names for different entities using a Markov chain model.\nIt is based on [David Legare's NameGenerator](https://github.com/excaliburHisSheath/NameGenerator), which is licensed under Creative Commons Attribution-ShareAlike 3.0 Unported License.\nThe code has been adopted to the use in Terasology.\n\nThe original idea was published by [Oh, The Huge Manatee!](http://ohthehugemanatee.net/2009/10/the-magical-word-o-matic-or-markov-text-analysis-for-fun-and-non-profit/).\nThis website also contains an excellent explanation of the functionality of the algorithm.\n\n## Usage Guide\n\nLet's start with an example:\n\n```java\nTownNameProvider townNameProv = new TownNameProvider(12345);\nString name = townNameProv.generateName();\n```\n\nSimple as that. You can also explicitly select a theme:\n\n```java\nTownNameProvider townNameProv = TownNameProvider(123455, TownAssetTheme.FANTASY);\n```\n\nYou can also tweak the generated names:\n\n```java\nTownAffinityVector aff = TownAffinityVector.create().prefix(0.5);\nString name = townNameProv.generateName(aff);\n```\n\nHalf of the generated names will have a prefix such as \"Market\", \"Old\" or \"Nether\".\nGoing one step further, you can even combine different name affinities:\n\n```java\nTownAffinityVector.create().prefix(0.33).postfix(0.33);\n```\n\nThis will give you 1/3 prefixed names, 1/3 postfixed names and 1/3 without.\n\n>Nether Kirchen,\n>Dunharsden,\n>Southophall,\n>Green Hophall,\n>Old Guildhey,\n>Halgh Barrens\n\nSimilarly, you can create creature names:\n\n```java\nCreatureNameProvider p = new CreatureNameProvider(123, CreatureAssetTheme.ELVEN);\nCreatureAffinityVector a = CreatureAffinityVector.create().maleOnly().nobility(0.5);\nString name = p.generateName(a);\n```\n\nThis gives:\n\n>Gweradrae Nagalan the Wise,\n>Suss Camth,\n>Vel Our,\n>Estalandra Ilve,\n>Laethalandrieldralae Whiiliazym the Noble\n\n## License\n\nThis module is licensed under the [Apache 2.0 License](http://www.apache.org/licenses/LICENSE-2.0.html).\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk3Nzg5Mjg1NA==",
    "name": "NeoTTA",
    "url": "https://github.com/Terasology/NeoTTA",
    "description": "An experimental gameplay template based on Throughout the Ages and JoshariasSurvival",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/e0bbf24d996e23283f870fa564e8a9568adda2722f79f761597c02e5732e2854/Terasology/NeoTTA",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"NeoTTA\",\n    \"version\": \"1.1.0\",\n    \"author\": \"The Terasology Foundation\",\n    \"displayName\": \"NeoTTA Crafting (experimental)\",\n    \"description\": \"Experimental gameplay template with many modules focusing on crafting at various tiers (wood, stone, metals). Successor to Throughout The Ages and also inspired by JoshariasSurvival\",\n    \"dependencies\": [\n        { \"id\": \"Alchemy\", \"minVersion\": \"1.1.0\" },\n        { \"id\": \"AnotherWorld\", \"minVersion\": \"1.0.0\" },\n        { \"id\": \"AnotherWorldPlants\", \"minVersion\": \"1.0.0\" },\n        { \"id\": \"BiomesAPI\", \"minVersion\": \"4.0.0\" },\n        { \"id\": \"Books\", \"minVersion\": \"1.1.0\" },\n        { \"id\": \"ChrisVolume1OST\", \"minVersion\": \"1.0.0\" },\n        { \"id\": \"ClimateConditions\", \"minVersion\": \"1.0.0\" },\n        { \"id\": \"Cooking\", \"minVersion\": \"1.1.0\" },\n        { \"id\": \"CoreAssets\", \"minVersion\": \"2.0.1\" },\n        { \"id\": \"CoreRendering\", \"minVersion\": \"1.0.0\" },\n        { \"id\": \"CoreWorlds\", \"minVersion\": \"1.1.0\" },\n        { \"id\": \"Drops\", \"minVersion\": \"1.0.1\" },\n        { \"id\": \"EquipmentSmithing\", \"minVersion\": \"1.1.0\" },\n        { \"id\": \"GrowingFlora\", \"minVersion\": \"1.0.0\" },\n        { \"id\": \"Health\", \"minVersion\": \"1.0.0\" },\n        { \"id\": \"Hunger\", \"minVersion\": \"1.1.0\" },\n        { \"id\": \"Inventory\", \"minVersion\": \"1.1.0\" },\n        { \"id\": \"SimpleFarming\", \"minVersion\": \"2.1.0\" },\n        { \"id\": \"StoneCrafting\", \"minVersion\": \"1.0.2\" },\n        { \"id\": \"Thirst\", \"minVersion\": \"1.0.0\" },\n        { \"id\": \"WorldlyTooltip\", \"minVersion\": \"1.2.0\" },\n        { \"id\": \"WoodCrafting\", \"minVersion\": \"1.0.3\" }\n    ],\n    \"isGameplay\": \"true\",\n    \"defaultWorldGenerator\": \"NeoTTA:neoTTA\"\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkzNzE1ODQ5NQ==",
    "name": "NetworkTransport",
    "url": "https://github.com/Terasology/NetworkTransport",
    "description": "Utility that helps implementing entity (i.e. item transport) and power systems",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/1e418ccfa54eba129c79e46326992927a7d9e8a4abe2da0e02d57631aab29d5a/Terasology/NetworkTransport",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkzMTQ2NTQzMTk=",
    "name": "Notifications",
    "url": "https://github.com/Terasology/Notifications",
    "description": "Show notifications like achievements or other information.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://repository-images.githubusercontent.com/314654319/cde45180-2b81-11eb-83c3-c41cf9b01da3",
    "usesCustomOpenGraphImage": true,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Notifications\",\n  \"version\": \"0.2.0-SNAPSHOT\",\n  \"author\": \"The Terasology Foundation\",\n  \"displayName\": \"Notifications\",\n  \"description\": \"Show notifications like achievements or other information.\",\n  \"dependencies\": [],\n  \"serverSideOnly\": false,\n  \"isLibrary\": true,\n  \"isAugmentation\": true\n}\n"
    },
    "readme": {
      "text": "<p align=\"center\">\n<img src=\"./docs/banner.png\" alt=\"Notifications\"/>\n</p>\n\n# Notifications\n\nThis module provides an event-based system to show notifications, e.g., achievements or one-time help notes, in a common\nnotification area. Messages can be added and removed by sending events.\n\nThe system currently only reacts to events without keeping the state of notifications for a player!\n\n## Usage\n\nTo show or hide notifications from other modules add a dependency in `module.txt`:\n\n```json5\n  { \"id\": \"Notifications\", \"minVersion\": \"0.1.0-SNAPSHOT\" }\n```\n\nThe displayed message itself is defined by the `Notification` class. Each message has an `id` to be able to identify \nduplicate messages or remove a specific notification. The system ensures that there is at most one message of the same \nidentifier displayed on screen.\n\nA notification may contain an _icon_, displayed on the left. There is room for two brief lines of text, the `title` and\na `subtitle`. See the image below for a visual representation of a notification. As the size of the notification box is\nfixed developers should pay attention that the text fits into the available space.\n\n![Notification Overlay](docs/notification.jpg)\n\nShowing and hiding notifications is controlled via events. See the description below for a quick overview. You can find\nmore detailed information in the JavaDoc.\n\n- `ShowNotificationEvent(notification)` - A request to show a notification to the player in the notification overlay area.\n    This event should be targeted at a client entity (an entity with `ClientComponent`). If not specified otherwise \n    notifications will be shown indefinitely. The event allows to set the duration of the notification in in-game\n    time (ms).\n    \n    It is recommended to show a notification for at least 10 seconds to give the player the chance to notice it. The \n    event may be consumed to prevent the message from showing. If a notification with the same `id` is already shown \n    this event is ignored.\n- `ExpireNotificationEvent(id)` - removes a notification for the entity it is sent to if present. Otherwise, this event\n    is ignored. If not otherwise specified, the notification will be slowly faded out.\n\n## Customization\n\nCustomization of the notification system is currently limited. The UI screen `assets/ui/NotificationAreaOverlay.ui` can\nbe modified via asset override or asset delta to adjust the location where the notification overlay is displayed.\n\nThe layout of a notification message is defined by `NotificationRenderer` and only be changed directly in that renderer\nclass for now. The message box has a fixed size, regardless of the content.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNDg4MDUwNg==",
    "name": "OreGeneration",
    "url": "https://github.com/Terasology/OreGeneration",
    "description": "A plugin system for adding randomized ore generation to the world",
    "homepageUrl": "http://forum.terasology.org/threads/ore-generation.1104",
    "openGraphImageUrl": "https://opengraph.githubassets.com/4f3512deb6814ee38fdf64e832b24eb0620aa979b59e96b294e0fc21bad24f37/Terasology/OreGeneration",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"OreGeneration\",\n    \"version\": \"2.1.0-SNAPSHOT\",\n    \"author\": \"Josharias\",\n    \"displayName\": \"Ore Generation\",\n    \"description\": \"A plugin system for adding randomized ore generation to the world\",\n    \"dependencies\": [\n        {\n            \"id\": \"CustomOreGen\",\n            \"minVersion\": \"1.0.0\"\n        }\n    ],\n    \"isLibrary\": true,\n    \"isWorld\": true\n}\n"
    },
    "readme": {
      "text": "# Ore Generation\n\nA plugin system for adding randomized ore generation to the world\n\n## Pocket Ore Generation\n\nAll **pocket ore generation** variants share the base properties defined in the base _pocket ore-generation component_ [`BasePocketOreGenComponent`](/src/main/java/org/terasology/oreGeneration/components/BasePocketOreGenComponent.java).\nDefault values can be found in the component definition.\n\n### Density-based generation\n\nPocket ore generation is small clumps of blocks that occur underground.\nThe _pocket density ore gen component_ [`PocketDensityOreGenComponent`](/src/main/java/org/terasology/oreGeneration/components/PocketDensityOreGenComponent.java) provides additional properties.\nDefault values can be found in the component definition.\n\n```json5\n// Minimal definition, e.g, in 'CoalOreGen.prefab'\n{\n    \"OreGenDefinition\":  {},\n    \"PocketDensityOreGen\": {\n        \"block\": \"CoreAssets:CoalOre\",  // What block will be placed\n        \"frequency\": 1                  // How often this pocket will happen in 10 vertical blocks in the region\n    }\n}\n```\n\n### Depth-based Generation\n\nThis pocket ore gen is contained within a certain range of depth underground.\nThe _depth pocket density ore gen component_ [`DepthPocketOreGenComponent`](/src/main/java/org/terasology/oreGeneration/components/DepthPocketOreGenComponent.java) provides additional properties.\nDefault values can be found in the component definition.\n\n```json5\n// Minimal definition, e.g, in 'CoalOreGen.prefab'\n{\n    \"OreGenDefinition\":  {},\n    \"DepthPocketOreGen\": {\n        \"block\": \"CoreAssets:CoalOre\", //  What block will be placed\n        \"frequency\": 1,                // How often this pocket will happen in 10 vertical blocks in the region\n        \"minDepth\": 4,                 // The minimum depth that this pocket will occur\n        \"maxDepth\": 80                 // The maximum depth that this pocket will occur\n    }\n}\n```\n\n## Veins Ore Generation\n\nThe **veins ore generation** creates a round central \"mother lode\" with branches radiating in all directions.\nBranches may twist and turn, and may fork to create a more tree-like structure.\nAll veins-based or generators share the properties defined in the base _veins ore-generation component_ [`BaseVeinsOreGenComponent`](/src/main/java/org/terasology/oreGeneration/components/BaseVeinsOreGenComponent.java).\nDefault values can be found in the component definition.\n\n### Density-based Generation\n\nRestricts the generation of veins based on the _density_.\nThe _density-based veins ore-generation component_ [`VeinsDensityOreGenComponent`](/src/main/java/org/terasology/oreGeneration/components/VeinsDensityOreGenComponent.java) defines additional properties.\nDefault values can be found in the component definition.\n\n```json5\n// Minimal definition, e.g, in 'IronOreGen.prefab'\n{\n    \"OreGenDefinition\":  {},\n    \"VeinsDensityOreGen\": {\n        \"block\": \"CoreAssets:IronOre\",  //  What block will be placed\n        \"frequency\": 1                  // How often this ore gen will happen in 10 vertical blocks in the region\n    }\n}\n```\n\n### Depth-based Generation\n\nRestrict the generation of veins to a specific range of depth underground.\nThe _depth-based veins ore-generation component_ [`DepthVeinsOreGenComponent`](/src/main/java/org/terasology/oreGeneration/components/DepthVeinsOreGenComponent.java) defines additional properties.\nDefault values can be found in the component definition.\n\n```json5\n// Minimal definition, e.g, in 'IronOreGen.prefab'\n{\n    \"OreGenDefinition\":  {},\n    \"DepthVeinsOreGen\": {\n        \"block\": \"CoreAssets:IronOre\",  //  What block will be placed\n        \"frequency\": 1,                 // How often this ore gen will happen in 10 vertical blocks in the region\n        \"minDepth\": 4,                  // The minimum depth that this pocket will occur\n        \"maxDepth\": 80                  // The maximum depth that this pocket will occur\n    }\n}\n```\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzg5NTQ1OA==",
    "name": "Oreons",
    "url": "https://github.com/Terasology/Oreons",
    "description": "Oreo Invasion for Terasology",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/12fe32817d1c48a8ceccddd9112d8f364a2a04a722f050d1973db7a16238e128/Terasology/Oreons",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Oreons\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Maternal Mathes.Wenzel@googlemail.com\",\n  \"displayName\": \"Oreons\",\n  \"description\": \"Oreon Invasion for Terasology\",\n  \"dependencies\": [\n    {\n      \"id\": \"CoreAssets\",\n      \"minVersion\": \"2.0.1\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isAsset\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyMzIxNDMzODY=",
    "name": "ParadIce",
    "url": "https://github.com/Terasology/ParadIce",
    "description": "A frozen world of ice and snow beneath a gentle tropical breeze.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/84bba717a0cda81b4aa42054b504b49832c41a23bd4cc040c999ca4684a6c559/Terasology/ParadIce",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\" : \"ParadIce\",\n    \"version\" : \"0.1.0-SNAPSHOT\",\n    \"author\" : \"Qwertygiy\",\n    \"displayName\" : \"ParadIce\",\n    \"description\" : \"A frozen land of ice and snow beneath a gentle tropical breeze\",\n    \"dependencies\" : [\n        {\"id\": \"BiomesAPI\", \"minVersion\": \"4.0.0\"},\n        {\"id\": \"CoreAssets\", \"minVersion\": \"2.0.0\"},\n        {\"id\": \"CoreRendering\", \"minVersion\": \"1.0.0\" },\n        {\"id\": \"CoreWorlds\", \"minVersion\": \"2.0.0-SNAPSHOT\"},\n        {\"id\": \"PlantPack\", \"minVersion\": \"1.0.0\"}\n    ],\n    \"serverSideOnly\" : false,\n    \"isWorld\" : \"true\",\n    \"defaultWorldGenerator\" : \"ParadIce:ParadIce\"\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzc2Mjc2Ng==",
    "name": "Pathfinding",
    "url": "https://github.com/Terasology/Pathfinding",
    "description": "A pathfinding module mainly meant as a library/framework for other modules",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/5b4850f52808a67f472682fb0ecc423c300eaa3da3d684c9988d55baab8b298b/Terasology/Pathfinding",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Pathfinding\",\n    \"version\": \"1.0.1-SNAPSHOT\",\n    \"author\": \"synopia\",\n    \"displayName\": \"Pathfinding Framework\",\n    \"description\": \"A pathfinding module mainly meant as a library/framework for other modules\",\n    \"dependencies\": [\n        { \"id\": \"BiomesAPI\", \"minVersion\": \"4.0.0\" },\n        { \"id\": \"CoreAssets\", \"minVersion\": \"2.0.1\" },\n        { \"id\": \"CoreWorlds\", \"minVersion\": \"1.1.0\", \"maxVersion\": \"3.0.0\" },\n        { \"id\": \"ModuleTestingEnvironment\", \"minVersion\": \"0.3.1\", \"optional\": \"true\" }\n    ],\n    \"isServerSideOnly\": true,\n    \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "R_kgDOGXOSOg",
    "name": "PathfindingBehaviors",
    "url": "https://github.com/Terasology/PathfindingBehaviors",
    "description": "Store for an assortment of pathfinding behaviors that can be applied to creatures ",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/491f03d07931ea8812e764641244851231aad33c520d4f9afa0d2ca99db2140a/Terasology/PathfindingBehaviors",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\" : \"PathfindingBehaviors\",\n    \"version\" : \"1.0.0\",\n    \"author\" : \"\",\n    \"displayName\" : \"PathfindingBehaviors\",\n    \"description\" : \"\",\n    \"dependencies\" : [\n        {\n            \"id\": \"Pathfinding\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Behaviors\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"ModuleTestingEnvironment\",\n            \"minVersion\": \"0.3.0\",\n            \"optional\": true\n        }\n    ],\n    \"serverSideOnly\" : false\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk2MjQzMDI5MQ==",
    "name": "PhysicalStats",
    "url": "https://github.com/Terasology/PhysicalStats",
    "description": "A basic physical statistics system based on RPGs.",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/de129720a763aeb2d36a41e0658a0bfdc067c1e538902b991490867c051c9678/Terasology/PhysicalStats",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"PhysicalStats\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"XTariq\",\n    \"displayName\": \"PhysicalStats\",\n    \"description\": \"Adds a basic RPG stat system for seven physical attributes or stats.\",\n    \"dependencies\": [\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "PhysicalStats\n============\n\nThis module adds a basic RPG stats system consisting of seven different physical attributes or stats. Plus, a system for\nmodifying these stats is in place.\n\nThese attributes are the following:\n\n* Strength (STR) - Affects physical damage dealt.\n* Dexterity (DEX) - Affects weapon accuracy and item use speed (not implemented).\n* Constitution (CON) - Affects entity's health. At base, 1 CON = 10 HP.\n* Agility (AGI) - Affects entity movement speed.\n* Endurance (END) - Affects carrying capacity and some interactions with status effects (not implemented).\n* Charisma (CHA) - Affects NPC interactions and haggling (not implemented).\n* Luck (LUK) - Affects the success/benefits/penalties of many different actions (not implemented).\n\nThis module is intended to be extended by other modules for more complex interactions."
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNjM1MjUyNA==",
    "name": "PlantPack",
    "url": "https://github.com/Terasology/PlantPack",
    "description": "A collection of trees and plants",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/c302609923860b89c5736e18c7ac9464acb604d931970a231707d1724456eaf0/Terasology/PlantPack",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"PlantPack\",\n  \"version\": \"1.2.2-SNAPSHOT\",\n  \"author\": \"Marcin Sciesinski <marcins78@gmail.com>, Esa-Petri, Metouto, Josharias, Skaldarnar, Qwertygiy\",\n  \"displayName\": \"PlantPack\",\n  \"description\": \"Provides basic plant assets\",\n  \"dependencies\": [\n    {\n      \"id\": \"ChangingBlocks\",\n      \"minVersion\": \"1.1.0\",\n      \"optional\": true\n    },\n    {\n      \"id\": \"CoreAssets\",\n      \"minVersion\": \"2.0.1\"\n    },\n    {\n      \"id\": \"Drops\",\n      \"minVersion\": \"1.0.1\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isAsset\": true\n}\n"
    },
    "readme": {
      "text": "PlantPack\n=========\nA collection of trees and dynamic plants. In combination with [`ChangingBlocks`](https://github.com/Terasology/ChangingBlocks) they grow over time or change in other ways.\n\n\nPlants\n------\nThe plants are divided into 2 types:\n 1. Crops\n 2. Trees\n\n**Crops** are able to grow (change texture) over time and they can have several stages of growth. Crops are similar to a normal block.\n**Trees**, however, do not have the capability to slowly grow over time that crops have. They are usually a structure, composed of many blocks.\n\nCreating a New Crop\n=================\n\n*For examples of existing crops, check out `assets/blocks/crop` & `assets/prefabs/crop`*\n\nPrefab File\n-----------\n\nTo start making a new crop you need to decide how many stages of growth you want to have, then create a prefab file to indicate those stages. \n\nHere is an example of a crop with 7 stages:\n```json\n{\n  \"ChangingBlocks\": {\n      \"blockFamilyStages\": [\n          { \"key\": \"PlantPack:Corn1\", \"value\": 30000 },\n          { \"key\": \"PlantPack:Corn2\", \"value\": 30000 },\n          { \"key\": \"PlantPack:Corn3\", \"value\": 30000 },\n          { \"key\": \"PlantPack:Corn4\", \"value\": 30000 },\n          { \"key\": \"PlantPack:Corn5\", \"value\": 30000 },\n          { \"key\": \"PlantPack:Corn6\", \"value\": 30000 },\n          { \"key\": \"PlantPack:Corn7\", \"value\": 30000 }\n      ],\n      \"loops\": false\n    }\n}\n```\nEach line in `blockFamilyStages` indicates a growth stage for the crop, and the number next to it represents the growth time it requires. The `loops` property indicates whether or not the plant should loop the growth stages after the initial growth finishes.\n\nAfter you finish making the stages, you MUST remember the name of those stages so that you can create the .block file for each stage.\n\nBlock File\n----------\nAfter you finished the prefab file, you need to create a .block file for each growth stage. All .block files are located in `assets/blocks/crop`.\n\nHere is an example of a .block file for a crop:\n\n```json\n{\n    \"author\": \"metouto\",\n    \"basedOn\": \"CoreAssets:plant\",\n    \"entity\": {\n        \"prefab\": \"PlantPack:Corn\",\n        \"keepActive\": true\n    }\n}\n```\n\nMake sure you type-in the prefab in the .block file in accordance to the name of the prefab that you made.\n\nTexture Files\n-------\nAfter creating the prefab and block files, you also need to create the texture for each of the crop growth stages. All texture files (.png) for crops are located at `assets/blockTiles/crop/`. Make sure you name these texture files in accordance to the growth stages that you want to assign them to.\n\n\nDeveloping With PlantPack\n=======\n**PlantPack** assets can bring a good addition to world generation modules, you can utilize the plants that this module have to *spice up* the world that your module generates.\n\nA good example would be, [AnotherWorld](https://github.com/Terasology/AnotherWorld/) module that works together with [AnotherWorldPlant](https://github.com/Terasology/AnotherWorldPlants) that utilizes PlantPack assets.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxODU4MzIzNzk=",
    "name": "PointPool",
    "url": "https://github.com/Terasology/PointPool",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/bdb2c584b3935003ff77640b1050bdf347afaa17ca71ea510dc44166eccb589d/Terasology/PointPool",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxOTUwMzQwMQ==",
    "name": "PolyWorld",
    "url": "https://github.com/Terasology/PolyWorld",
    "description": "A world generator that is based on Voronoi diagrams",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/a9cec2e2a91211677da11d5edf85ff922f16da553c26517dfe2693b06499704c/Terasology/PolyWorld",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"PolyWorld\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"msteiger\",\n    \"displayName\": \"PolyWorld\",\n    \"description\": \"A world generator that creates island worlds based on Amit Patel's flash implementation\",\n    \"dependencies\": [\n        {\n            \"id\": \"BiomesAPI\",\n            \"minVersion\": \"4.0.0\"\n        },\n        {\n            \"id\": \"CommonWorld\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"CoreWorlds\",\n            \"minVersion\": \"1.1.0\",\n            \"maxVersion\": \"3.0.0\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isWorld\": true\n}\n"
    },
    "readme": {
      "text": "# PolyWorld\n\nThis is a polygon-based world generating module. It is based on the [map generating algorithm by Amit Patel of Red Blob Games](http://www-cs-students.stanford.edu/~amitp/game-programming/polygon-map-generation/).\n\n![image1](images/2015-07-22_island.jpg \"A screenshot of version 0.6.0\")\n\nThe basic idea is to tesselate the terrain (using Fortune's algorithm) into a set of polygons.\nCurrently, only island worlds are supported. An island world is created as follows:\n\n**Step 1:** Since the terrain is infinite, it needs to be partitioned into finite areas first:\n\n![step1](images/step1_partition.png \"An arbitrarily sized area in the world\")\n\n**Step 2:** The area is tesselated into polygons. The algorithms behind this are approximate Poisson disc sampling to generate a well-behaved set of sampling points, Fortune's algorithm to compute the initial Voronoi diagram and Lloyd's relaxation to regularize the polygon shapes.\n\n![step2](images/step2_tesselation.png \"An arbitrarily sized area in the world\")\n\n**Step 3:** Based on a random noise function such as Perlin noise, water and land vertices are defined. Starting at the border of the rectangle, the height of the island increases towards the center. Lake areas are flattened afterwards.\n\n![step3](images/step3_elevation.png \"The generated height map of the island\")\n\n**Step 4:** Since the elevation gradient is monotonously increasing, rivers can start at any corner of the map, flow downhill\nand always reach either a lake or the ocean.\n\n![step4](images/step4_rivers.png \"The generated rivers always flow downwards until they hit the ocean\")\n\n**Step 5:** Based on height and the distance to rivers, a map of moisture is generated.\n\n![step5](images/step5_moisture.png \"The generated height map of the island\")\n\n**Step 6:** Each of the regions is assigned to exactly one biome as defined by Whittaker.\n\n![step6](images/step6_biomes.png \"The generated biomes of the island\")\n\n**Step 7:** Each of the biomes has its unique distribution of flowers, mushrooms and other small plants.\n\n![step6](images/step7_flora.png \"The generated flora of the island\")\n\n**Step 8:** Same goes for different tree types.\n\n![step8](images/step8_trees.png \"The fully generated island\")\n\n### Acknowledgements\n\nThis module is loosely based on the Java implementation by [Connor Clark](https://github.com/Hoten/Java-Delaunay).\n\n### License\n\nThis module is licensed under the [Apache 2.0 License](http://www.apache.org/licenses/LICENSE-2.0.html).\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzg5NTgxNQ==",
    "name": "Portals",
    "url": "https://github.com/Terasology/Portals",
    "description": "Allows portals to be created in the world, responsible for spawning assorted creatures",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/53cfb2c41ce03024a78933ff47666a5a7edc9eddee242e3b5603ca2856269bb5/Terasology/Portals",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Portals\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Cervator, Esapetri\",\n  \"displayName\": \"Portals\",\n  \"description\": \"Allows portals to be created in the world, responsible for spawning assorted creatures\",\n  \"dependencies\": [\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"Oreons\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"Spawning\",\n      \"minVersion\": \"1.0.0\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isAsset\": true,\n  \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk1ODc3NTgyNw==",
    "name": "PotentialEnergyDevices",
    "url": "https://github.com/Terasology/PotentialEnergyDevices",
    "description": "A library for creating entities that build up potential energy.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/30bee629652a143ed1e5fd13cf08a93bab12297ec600aa5f36d45126955fc88d/Terasology/PotentialEnergyDevices",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"PotentialEnergyDevices\",\n  \"version\": \"1.2.0-SNAPSHOT\",\n  \"author\": \"Josharias\",\n  \"displayName\": \"Potential Energy Devices\",\n  \"description\": \"A library for creating entities that build up potential energy.\",\n  \"dependencies\": [\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"serverSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "#Potential Energy Devices\nThis module provides a common set of components that can store energy in an entity.\n\n##Storing Energy\n###Basic usage on a prefab\n```\n{\n  \"PotentialEnergyDevice\": {\n    \"maximumStoredEnergy\": 50\n  }\n}\n```\n\n###Defaults\n```\n{\n  \"PotentialEnergyDevice\": {\n    \"currentStoredEnergy\": 0\n    \"maximumStoredEnergy\": 0\n  }\n}\n```\n\n##Energy Regeneration or Decay\nAdding the ```PotentialEnergyRegenComponent``` to an entity that has a ```PotentialEnergyDeviceComponent``` on it will continuously add energy to the current stored energy.\n \n###Basic usage on a prefab\n```\n{\n  \"PotentialEnergyRegen\": {\n    \"energyPerSecond\": -5\n  }\n}\n```\n\n###Defaults\n```\n{\n  \"PotentialEnergyRegen\": {\n    \"energyPerSecond\": 0\n  }\n}\n```\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzg5NjYwNw==",
    "name": "Potions",
    "url": "https://github.com/Terasology/Potions",
    "description": "A small collection of potions",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/6ef15bc678b1853db43df147376f1fc69dc360ba65d26550222236983a70f3e0/Terasology/Potions",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Potions\",\n    \"version\": \"1.4.0-SNAPSHOT\",\n    \"author\": \"bi0hax, XTariq, shardulc, S-ulphuric, kallentu, Mandar Juvekar, Arpit Kamboj (digitalripperynr), SufurElite, JayGupta2003, He Who Shall Not Be Named (VaibhavBajaj), mdj117, FieryPhoenix909, jellysnake\",\n    \"displayName\": \"Potions\",\n    \"description\": \"A small collection of various potions that can be consumed for several effects.\",\n    \"dependencies\": [\n        {\n            \"id\": \"AlterationEffects\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Durability\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Explosives\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Fluid\",\n            \"minVersion\": \"2.0.0\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"InGameHelpAPI\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isAsset\": true,\n    \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "Potions\n============\n\nThis module adds several potions which have a variety of effects such as healing, regen, speed increases, and status\nailment cures. This also adds a potion drinking system as well as the ability for other systems to modify the effects.\nMoreover, if a potion is durable enough, an empty bottle will be returned following the potion consumption.\n\nThe following potions are present in this module:\n\n* All Speed - Combines the effects of the Jump Speed, Swim Speed, and Walk Speed potions.\n* Battle - Allows the user to withstand more damage, restores 50 HP, and activates 5 HP per second health regen for 11.5 seconds.\n* BlindWalk - Turns the player blind for 5 seconds along with speed decrease (Awaiting API integration for the No_Visibility effect to work)\n* Combat - Combines the effects of walk speed, health boost, regeneration, resist physical damage and heal potions. Useful in combat.\n* Cure All - Cures all status ailments when consumed.\n* Cure Poison - Cures poison status when consumed.\n* Divergence - Coincidentally harms and regenerates player's health, but regens in larger amounts.\n* Double Jump - Allows the user to double jump for 15 seconds.\n* Explosive - When consumed, it produces an explosion that destroys the surrounding area.\n* Giga Jump - Triples all jump stats for 10 seconds\n* Glue - Reduces the user's walking speed by 10% and prevents them from jumping for 15 seconds.\n* Harm - Removes 20 HP from the user instantly.\n* Heal - Restores 20 HP to the user instantly.\n* Health Boost - Increases the user's base max health by 50% for 30 seconds.\n* Hemlock Potion - A more dangerous version of the poison potion, dealing 6 damage per second for up to 15 seconds.\n* Immobility Potion - Greatly reduces various mobility stats for 15 seconds.\n* Inversion - Disorients the player by inverting the controls (i.e. turning left will turn right).\n* Invincible - Makes the user invincible for 10 seconds.\n* Item Use Speed - Increases the user's item use speed by 25% for 15 seconds.\n* Juggernaut - Restricts the Player's movements in exchange for damage resistance for 10 seconds.\n* Jump Speed - Doubles the user's jump speed for 10 seconds.\n* Mega Jump - Doubles all jump stats for 10 seconds\n* Mobility - For 15 seconds, doubles the user's jump height, walk speed, and swim speed, grants the ability to double jump, but reduces item use speed by 25%.\n* Ninja - Speeds up your running and jumping\n* Overdrive - Triples the user’s jumping and walking speeds for 11 seconds.\n* Poison - Poisons user, dealing 3 damage per second for up to 15 seconds.\n* Rage - Triples the user's jump height, walk speed, and swim speed for 15 seconds. However, during this period, it also poisons the user for 3 damage per second.\n* Regen - User regenerates 3 HP per second for 10 seconds.\n* Regen II - User regenerates 6 HP per second for 10 seconds ( Like regular Regen X 2 )\n* Resist Physical - Temporarily increases user's physical defense by 15 for 20 seconds.\n* Resist Poison - Reduces the effects of poison statuses by 2 when consumed for 15 seconds.\n* Sacred - Regenerates 3 HP per second for 10 seconds, increases the user's base max health by 25% for 30 seconds, and also cures poison status.\n* Super Heal - Restores a vast 300 HP to the user.\n* Swim Speed - Doubles the user's swim speed for 10 seconds.\n* Ultimate - Applies all effects from the positive potions onto the user.\n* Ultra Heal - Restores a very vast 500 HP to the user.\n* Walk Speed - Doubles the user's walk speed for 10 seconds.\n\nThe following potion effects are present in this module:\n\n* CURE_ALL_AILMENTS - Cures all status ailments from target. The `magnitude` and `duration` fields are unused here.\n* CURE_POISON - Cures poison status ailment from target. The `magnitude` and `duration` fields are unused here.\n* EXPLOSIVE - Explodes all blocks around target for `magnitude` damage over a maximum range of `duration`. The `duration` field is used to dictate range instead of time.\n* GLUE - Reduce target's base walk speed to 10% lower and prevents them from jumping for `duration` milliseconds.\n* HARM - Removes `magnitude` health. The `duration` field is unused.\n* HEAL - Restores `magnitude` health. The `duration` field is unused.\n* ITEM_USE_SPEED - Modifies target's base item use speed to be `magnitude` times as fast for `duration` milliseconds.\n* JUMP_SPEED - Modifies target's base jumping speed to be `magnitude` times as fast for `duration` milliseconds.\n* MULTI_JUMP - Grants target the ability to multi jump `magnitude` times before hitting solid ground for `duration` milliseconds.\n* POISON - Inflicts poison status ailment onto target, which damages them for `magnitude` damage per second for `duration` milliseconds.\n* REGEN - Regenerates `magnitude` health per second for `duration` milliseconds.\n* RESIST_PHYSICAL - Increases physical defense by `magnitude` for `duration` milliseconds.\n* RESIST_POISON - Increases poison defense by `magnitude` for `duration` milliseconds.\n* SWIM_SPEED - Modifies target's base swimming speed to be `magnitude` times as fast for `duration` milliseconds.\n* TEMP_MAX_HEALTH_BOOST - Boosts maximum health value by `magnitude`% for `duration` milliseconds.\n* WALK_SPEED - Modifies target's base walking speed to be `magnitude` times as fast for `duration` milliseconds.\n\n## Contribution\n\nRun `groovyw module recurse Potions` command while in the Terasology root folder to fetch and store the module locally. Then fork the module and add a remote reference using the command `git remote add <remote-name> <your fork>` in the `/module/Potions` directory.  \n\nRefer to the [Developer Guide](https://github.com/Terasology/Potions/wiki/Developer-Guide) section in the wiki for further details about how to develop new potions and containers.\n\nSend in PRs to this repository and feel free to add your name to the authors list in the [module.txt file](https://github.com/Terasology/Potions/blob/master/module.txt). Also add credits to [this README](https://github.com/Terasology/Potions/blob/master/README.md) citing sources for icons and textures.\n\n## Credits for images:\n\n* [Trekmarvel](https://github.com/Trekmarvel) for the base potion bottle graphics.\n* Regen2PotionBottle.png edited from base by Minege\n* Sacred: SacredPotionBottle.png edited from base by smsunarto \n\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk4NjkzMzYwOA==",
    "name": "Projectile",
    "url": "https://github.com/Terasology/Projectile",
    "description": "Base module for projectile weapons",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/3e4a93834ffb88cd02e215605b01a67e41e1d32fbfb2c3900aa5c0215c5cca59/Terasology/Projectile",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Projectile\",\n    \"version\": \"1.2.1-SNAPSHOT\",\n    \"author\": \"niksoc\",\n    \"displayName\": \"Projectile\",\n    \"description\": \"Base module for projectiles\",\n    \"dependencies\": [\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"Explosives\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "# Projectile\nModule for projectiles. \n\n## Currently Available Projectiles \n* Fireball - Has a health component, is dealt as much damage as it deals.\n* Spear - Can be picked up after use\n* Grenade\n\n## Documentation \nThe ProjectileActionComponent is attached to any entity that is meant to be thrown when activated (mouse right-click) and that carries out an action after collision. The collision fires an HitTargetEvent which contains the following properties,\n\n* instigator\n* target \n* origin \n* direction \n* hitPosition \n* hitNormal \n\nwhich is intercepted in a CollisionHandler that you can provide specifying custom behaviour on collision. The logic in the [default CollisionHandler](https://github.com/Terasology/Projectile/blob/master/src/main/java/org/terasology/projectile/ProjectileCollisionHandler.java) is as follows\n```java\npublic class ProjectileCollisionHandler extends BaseComponentSystem {\n    // Set handler to low priority as it contains override-able default behaviour\n    @Priority(EventPriority.PRIORITY_LOW)\n    @ReceiveEvent\n    public void onCollision(HitTargetEvent event, EntityRef entity, ProjectileActionComponent projectile) {\n\t    // inflict damage on target\n        event.getTarget().send(new DoDamageEvent(projectile.damageAmount, projectile.damageType));\n        //reset ProjectileActionComponent to defaults and drop item\n        projectile.direction = null;\n        projectile.currentVelocity = null;\n        projectile.distanceTravelled = 0;\n        entity.saveComponent(projectile);\n        entity.send(new DropItemEvent(entity.getComponent(LocationComponent.class).getWorldPosition()));\n    }\n}\n```\nProjectiles are further customised by their prefabs. The various settings and defaults in ProjectileActionComponent can be found [here](https://github.com/Terasology/Projectile/blob/master/src/main/java/org/terasology/projectile/ProjectileActionComponent.java).\n\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMTc2MTY5MzE=",
    "name": "ProtoSignals",
    "url": "https://github.com/Terasology/ProtoSignals",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/9bab5650ecd5e19d43f2189436956cffa75bbc078c8d94444b29a55b7960c1fc/Terasology/ProtoSignals",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNTk1OTE2Mw==",
    "name": "Rails",
    "url": "https://github.com/Terasology/Rails",
    "description": "Base rail module for minecarts and such",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/81ac46d7f7c33e7baca7d66fe4d1c41dd94850c50030cd5f9644c0bb9862343a/Terasology/Rails",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Rails\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"small-jeeper, SkySom, Cervator, pollend, msteiger\",\n    \"displayName\": \"Rails\",\n    \"description\": \"A module that adds rails and carts.\",\n    \"serverSideOnly\": false,\n    \"dependencies\": [\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\",\n            \"optional\": true\n        },\n        {\n            \"id\": \"Drops\",\n            \"minVersion\": \"1.0.1\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"SegmentedPaths\",\n            \"minVersion\": \"1.0.0\"\n        }\n    ],\n    \"isAsset\": true,\n    \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "[![Build Status](http://jenkins.terasology.org/view/Modules/job/Rails/badge/icon)](http://jenkins.terasology.org/view/Modules/job/Rails/)\n\nRails\n=====\n**Rails** is a Terasology module that adds rail transport into the game. It helps the player to travel far distances faster and easier than ever before.\n\nItems\n=====\n\n## Rails\nRails are the most fundamental part of this module. They are the tracks on which carts can travel.\n  \n## Carts\nA cart is a vehicle that can travel on rails. This module contains a simplistic cart which can be ridden by the player. It moves only when pushed by the player or dragged by a connected cart.\n\n## Wrench\nThe wrench is a tool that can be used to perform specific actions like connecting carts with each other or changing the direction of a tee joint.\n\nFor additional items like locomotives and special rails to use with **Rails**, please take a look at the [AdditionalRails](https://github.com/Terasology/AdditionalRails) module.\n\nGetting Started\n======\n1. Create a new world with the Rails module enabled\n2. You should see a wrench and a cart item in your inventory.\n3. Press <kbd>F1</kbd> to open up the console and type in `give rails:rails` to obtain rail blocks, which will be available in the inventory. Repeat this step when you need more rail blocks.\n4. Place rail blocks on top of other blocks to build a track.\n5. To place a cart on a track, select the cart item in your inventory and place it (right-click) on a rail block as you would place a normal block. The cart will automatically align itself with the track.\n\nCreating Tracks\n=====\nTracks are built by placing rail blocks. When a rail block is placed, it automatically connects to nearby rail blocks to form contiguous track segments. Rail blocks can be straight or sloped and can form a corner, T (tee) junction, or an intersection.\n\nConnecting Carts\n=====\n\nYou can connect two carts as follows:\n\n 1. Place two carts on two adjacent rail blocks such that they are very close to each other.\n 2. Select the wrench in your inventory and right-click on a cart\n 3. You now have a connection between the two carts. On pushing one cart, the other cart should follow suit.\n\nTesting\n=====\nYou can verify whether or not all of the functionality in **Rails** is working perfectly by following the [Test Plan](https://github.com/Terasology/Rails/wiki/Rails-Test-Plan) that has been written in the repository's wiki.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk3OTY4NjAyNg==",
    "name": "RomanCities",
    "url": "https://github.com/Terasology/RomanCities",
    "description": " An addition for the DynamicCities module that adds a Roman culture. ",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/772efa810217cf87842c1cec633abab73169c8da4fff82b1009d18b6d1723ed6/Terasology/RomanCities",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzYwNzkwNw==",
    "name": "Sample",
    "url": "https://github.com/Terasology/Sample",
    "description": "This module contains a number of assets for testing Terasology engine features",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/e67c5a107523c28563d3619167e9978c60a7bf3f04c78447b44e38e10c5985fb/Terasology/Sample",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Sample\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"MovingBlocks Community, Mandar Juvekar, Paarth Madan, Scott Moses Sunarto, SufurElite, Wojciech Sadowski\",\n    \"displayName\": \"Sample Module\",\n    \"description\": \"This module contains assets and code for testing / showcasing Terasology engine + module features\",\n    \"dependencies\": [\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        }\n    ],\n    \"isServerSideOnly\": false,\n    \"isAsset\": true,\n    \"isSpecial\": true\n}\n"
    },
    "readme": {
      "text": "﻿# About\n\n\n\nThis module is for fun and trying out new crazy and wacky things with the game. It houses a number of example blocks and UI screens.\n\n \nYou can test your UI screens and various other creations in this module. It is more focused towards developers who want to test stuff, but players can enjoy it too!\n\n# License\n\nThe module is licensed under Apache 2.0 license.\n\n# Credits for images\n\n\n\nWhiteStone: [Planet Minecraft](http://www.planetminecraft.com/texture_pack/new-start---by-loufisch)\n\nCementStone: [Dane Claessen](https://github.com/Dane99)\n\n\nRainbow block: [Dev Choganwala](https://github.com/DevChoganwala)\n\nDiamond wallpaper: [Vishal Devireddy](https://github.com/TwoTau)\n\n\nGiftbox: [András Ottó Földes](https://github.com/andriii25)\n\n\nBlue Deco: [Megan Yu](https://github.com/meganyyu)"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyMDM4Mjc3MA==",
    "name": "ScalaLib",
    "url": "https://github.com/Terasology/ScalaLib",
    "description": "Scala runtime library module for Terasology.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/169ccdf3a1358d71bb0cd96a8029bd3047726a64d882c8926688ce09419a77f8/Terasology/ScalaLib",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk5MjMyNDc5MA==",
    "name": "Scenario",
    "url": "https://github.com/Terasology/Scenario",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/1fff108b5d50a68f9be6a0332ea2f0252c6bd083c391e724550a69a0fd50c502/Terasology/Scenario",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Scenario\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"Cata\",\n    \"displayName\": \"Scenario\",\n    \"description\": \"The Scenario module allows for creations of scenarios, which are \\\"static worlds\\\" with logic attached to them.\",\n    \"dependencies\": [\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"StructureTemplates\",\n            \"minVersion\": \"1.0.0\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isAugmentation\": true,\n    \"isSpecial\": true\n}\n"
    },
    "readme": {
      "text": "# Scenario Module\nThe Scenario module allows for creations of scenarios, which are \"static worlds\" with logic attached to them.\n\nWith the Scenario module a developer(or multiple) is able to utilize the HubTool item to create and edit logic and regions in the world around them, both in singleplayer and multiplayer.\n\nLogic is composed of a list of triggers that all include customizable events, conditionals, and actions. Regions are areas that can be tracked to monitor players entering/leaving regions and for protection of areas of the world to prevent any editing.\n\nEssentially, the Scenario module is a Game Maker created within Terasology that allows for altering the world logic around the player, while playing in that world. This allows for designers to develop scenarios to be experienced by other players!\n\n\n## Tutorials!\n\n### Creating a Scenario\nVideo tutorial about creation of a barebones fetch quest using the Scenario module, [Here!](https://youtu.be/lsEGuzC2MfQ)\n\n### Development Tutorials\nSome text tutorials about developing new trigger elements for the Scenario module.\n\n[Action](tutorials/ActionTutorial.md)\n\n[Conditional](tutorials/ConditionalTutorial.md)\n\n[Event](tutorials/EventTutorial.md)\n\n[Expression](tutorials/ExpressionTutorial.md)\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNjEyNDc4Mw==",
    "name": "Seasons",
    "url": "https://github.com/Terasology/Seasons",
    "description": "Add seasons to Terasology",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/db9c76ec3af2552fbc5a3b0758d89c42988ef3edbb87b9a1fb1221284c0f8a2f/Terasology/Seasons",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Seasons\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"displayName\": \"Seasons\",\n  \"author\": \"LinusVanElswijk\",\n  \"description\": \"A library module that adds seasons to Terasology. Other modules can use to easily adjust their behaviour to the seasons.\",\n  \"dependencies\": [\n    {\n      \"id\": \"ClimateConditions\",\n      \"minVersion\": \"1.0.0\"\n    }\n  ],\n  \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk4Nzc3MDcyNQ==",
    "name": "SegmentedPaths",
    "url": "https://github.com/Terasology/SegmentedPaths",
    "description": "A module for segmented curved paths",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/3e816bf01340af5f3a318bc0a638a1c4ad5b81be1523c5571e8f04ab3dcc7e76/Terasology/SegmentedPaths",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"SegmentedPaths\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"The Terasology Foundation\",\n  \"displayName\": \"SegmentedPaths\",\n  \"description\": \"A library module to generically describe paths composed of segments based on bezier curves.\",\n  \"dependencies\": [],\n  \"serverSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "# Segmented Paths\n\nA module to generically describe paths composed of segments based on bezier curves. Multiple path segments can be composed to a (longer) path. The module provides means to move entities along a path.\n\n## Planned Features\n\n- Implement some form of mesh generation for segments\n- Implement a better path caching model\n\n## Segment\n\nA segment is described by a bezier curve. Segments can be linked together to form a path. This is tied against a PathDescriptor for an associated EntityRef. A PathDescriptor is used to store a set of possible paths. The only restriction between segments is they have to match up with either the starting s1 or s4 point for a curve.\n\n## SegmentEntity & SegmentMapping\n\nA segment entity is an entity that is used to follow a segment. A segment entity will store the current heading of the entity along the associated path and path prefab. The heading is used to keep entity moving at the same direction given that the ending and start points may swap between segments. The SegmentMapping class is used by the SegmentSystem to figure out the next segment in the path. This requires returning the next entity along with the path prefab.\n\n## Blocks\n\nBlocks that use the segment system will have to implement the PathFamily Interface. This is used by the segment system to figure out the rotation of the segment for the associated block.\n\n# License\n  \nThis module is licensed under the [Apache 2.0 License](https://www.apache.org/licenses/LICENSE-2.0.html)."
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk5NzMwMjEzNw==",
    "name": "Sensors",
    "url": "https://github.com/Terasology/Sensors",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/c8f62b5b322a59a4ddd5ddf9448e25b45b1641d31ba31883ddef5ba2f7808318/Terasology/Sensors",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Sensors\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"0shine0\",\n  \"displayName\": \"Sensors\",\n  \"description\": \"This library module is used to sense other entities in various ways\",\n  \"dependencies\": [],\n  \"serverSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "# Sensors\n\nThis module is used to sense other entities by an entity.\nThere are various sensing methods available like area detection, weight detection, line of sight detection etc.\n\nCheckout the module [CombatSystem](https://github.com/Terasology/CombatSystem) to see how they are implemented in traps in that module.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMjAzMzgwNjI=",
    "name": "ServerMOTD",
    "url": "https://github.com/Terasology/ServerMOTD",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/a1692d5a1da0b5a9b9fa3a52d1104442cf30cff10376e2291f24d08e145797d9/Terasology/ServerMOTD",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk1NDY5MzczOA==",
    "name": "ShatteredPlanes",
    "url": "https://github.com/Terasology/ShatteredPlanes",
    "description": "World generator which aims to produce surreal landscapes",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/df50f97132af98808ef0708a072366ec83a6aa6ace3a2781913e422363ba87fd/Terasology/ShatteredPlanes",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"ShatteredPlanes\",\n    \"version\": \"1.0.0-SNAPSHOT\",\n    \"author\": \"The Terasology Foundation\",\n    \"displayName\": \"Shattered Planes\",\n    \"description\": \"Rough canyons, floating islands and more to come\",\n    \"dependencies\": [\n        { \"id\": \"BiomesAPI\", \"minVersion\": \"4.0.0\" },\n        { \"id\": \"CoreAssets\", \"minVersion\": \"2.0.1\" },\n        { \"id\": \"CoreWorlds\", \"minVersion\": \"1.1.0\", \"maxVersion\": \"3.0.0\" }\n    ],\n    \"isWorld\": true\n}\n"
    },
    "readme": {
      "text": "Shattered Planes\n=======================\n\n![sc1](/images/updatescreen5.jpg)\n![sc2](/images/updatescreen6.jpg)\nold screenshots:  \n\n![sc3](/images/updatescreen3.jpg)\n![sc4](/images/updatescreen4.jpg)\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzYwNzQ4MA==",
    "name": "Signalling",
    "url": "https://github.com/Terasology/Signalling",
    "description": "Module containing blocks that can send signals to other blocks",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/d38abf870ef6b62ef1189ab7a6339ee1d14f80e7572e6e1744ca6e06478eee5a/Terasology/Signalling",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Signalling\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Marcin Sciesinski <marcins78@gmail.com>\",\n  \"displayName\": \"Signalling framework\",\n  \"description\": \"Mod containing blocks that send signals to other blocks\",\n  \"dependencies\": [\n    {\n      \"id\": \"BlockNetwork\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"MobileBlocks\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"ModularComputers\",\n      \"minVersion\": \"1.0.0\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isLibrary\": true,\n  \"isAsset\": true\n}\n"
    },
    "readme": {
      "text": "# Signalling\nThis module adds blocks that send signals to other blocks. The blocks included in this module allow for basic logic gates to be created in game, using cables, inputs, gates, and outputs. A signal strength system is used where the strength of a cable's signal decreases as it grows longer. Signal strengths go on a scale from 1-10, and can also be infinite.\n\n## Blocks/Items added\n * **Screwdriver** - Used to rotate blocks\n * **Cable** - Used to transmit signals\n * **Logic Gates** - AND, NAND, OR, and XOR gates function using their respective operations. For information on what these operations are look [here](http://whatis.techtarget.com/definition/logic-gate-AND-OR-XOR-NOT-NAND-NOR-and-XNOR).\n * **Set-Reset Gate** - Signal output can be toggled using 2 different sides\n * **Delay Gate** - Delay signals; self explanatory\n * **Transformer** - Increases signal strength by 1 unless it is already 10 or infinite\n * **Button** - Provides a short pulse with infinite signal strength when pressed\n * **Pressure Plate** - Produces infinite signal strength when a player stands on it\n * **Limited Switch** - Produces a togglable signal with a strength of 5\n * **Switch** - Same as limited switch but with infinite strength\n * **Lamp** - Lights up when powered\n\n## Contribution\nIn order to contribute to this repository, fork it and submit a pull request with your changes. There is currently no set process for adding a block, although the basic structure is that it must have a .block and .prefab file following a similar format to the existing ones. Gates also must use SignalGateComponents. Behaviors must be defined in the SignalSwitchBehaviorSystem class.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkzMjIwMDU3Ng==",
    "name": "SimpleFarming",
    "url": "https://github.com/Terasology/SimpleFarming",
    "description": "Easy to understand growing of foods",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/b1908f144db1ab4b87a5da34ad4e1836694e2d449e46bdb69a09a1696c347755/Terasology/SimpleFarming",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"SimpleFarming\",\n  \"version\": \"2.2.0-SNAPSHOT\",\n  \"author\": \"Josharias, Mandar Juvekar, patrick Wang, Harry Wang, mdj117, SufurElite, He Who Shall Not Be Named (VaibhavBajaj), andriii25, smsunarto, DhananjayGarg, Jay Gupta\",\n  \"displayName\": \"Simple Farming\",\n  \"description\": \"Adds the capability to grow plants using seeds. Ripe plants can be harvested for the fruit that the plant produces.\",\n  \"dependencies\": [\n    {\n      \"id\": \"CoreAssets\",\n      \"minVersion\": \"2.0.1\"\n    },\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"Genome\",\n      \"minVersion\": \"1.0.0\",\n      \"optional\": true\n    },\n    {\n      \"id\": \"BasicCrafting\",\n      \"minVersion\": \"1.0.0\",\n      \"optional\": true\n    },\n    {\n      \"id\": \"SubstanceMatters\",\n      \"minVersion\": \"2.0.0\",\n      \"optional\": true\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "![header](https://i.imgur.com/Bo7RZQv.png)\n\n**Simple Farming** adds the ability to create bushes and vines that can grow and give produce.  \n\n# [Player Guide](https://github.com/Terasology/EdibleFlora/blob/master/README.md)\n\n*For information on developing with this module see the wiki*\n\nThis module does not contain any content by itself. [EdibleFlora](http://github.com/Terasology/EdibleFlora), [AdditionalVegetables](http://github.com/Terasology/AdditionalVegetables) and [AdditionalFruits](http://github.com/Terasology/AdditionalFruits) provide content using this module.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk3NDYzMjE2Mw==",
    "name": "Smithing",
    "url": "https://github.com/Terasology/Smithing",
    "description": "A system for smithing",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/6c9565d88337ed09cf4cb37ef1d1eb190f577e02a4410c2d911262733ceb4809/Terasology/Smithing",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Smithing\",\n    \"version\": \"1.2.0-SNAPSHOT\",\n    \"author\": \"XTariq\",\n    \"displayName\": \"Smithing\",\n    \"description\": \"A module that implements some simple systems for smithing metal-based items\",\n    \"dependencies\": [\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"Drops\",\n            \"minVersion\": \"1.0.1\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },        \n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"MultiBlock\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"OreGeneration\",\n            \"minVersion\": \"2.0.0\"\n        },\n        {\n            \"id\": \"Workstation\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"WorkstationCrafting\",\n            \"minVersion\": \"2.0.0\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isAsset\": true,\n    \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "Smithing\n============\n\nThis module adds a basic metalsmithing system for the production of metal-based items. This includes two smithing\nstations as well as fuel items.\n\nThis is a systems-focused module. So, it's intended to be extended by other modules to add new content."
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzYwNzg1Ng==",
    "name": "Soils",
    "url": "https://github.com/Terasology/Soils",
    "description": "This module introduces a number of new soil types",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/70d99b31ad9d4fac0094d2e28f1c0b7c7a832ccf3df419e1e381bcd359ebb918/Terasology/Soils",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Soils\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Metouto, Eleazzaar\",\n  \"displayName\": \"Soil Pack\",\n  \"description\": \"This module introduces a number of new soil types\",\n  \"dependencies\": [\n    {\n      \"id\": \"CoreAssets\",\n      \"minVersion\": \"2.0.1\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isAsset\": true\n}\n"
    },
    "readme": {
      "text": "# Soils\nA Terasology module featuring different Soil textures\n\n## Features\n\n### Sands\nThe Soils module features different types of sands: \n* ContinentalSand\n* DesertSand\n* GarnetSand\n* Greensand\n* QuartzSand\n* SilicaSand\n* VolcanicashSand\n* VolcanicBeachSand\n* VolcanicBlackSand\nThese textures can be seen in the image below, in row-major order:\n![](media/sands.png)\n\n### Olivine Sands\nThere are 5 different textures for Olivine Sands:\n![](media/olivinesands.png)\n\n### Ooid Sands\nThere are 5 different textures for Ooid Sands:\n![](media/ooidsands.png)\n\n### Soils \nThe Soils module features different types of soils: \n* SoilAverageDamp\n* SoilAverageDry\n* SoilAverageWet\n* SoilPoorDamp\n* SoilPoorDry\n* SoilPoorWet\n* SoilRichDamp\n* SoilRichDry\n* SoilRichWet\nThese textures can be seen in the image below, in row-major order:\n![](media/soils.png)\n\n### Fancier Textures\nThe Soils module also features some awesomely fancy blocks for your Terasology ground purposing needs:\n* Bentoniteclay\n* BlackSand\n* Clay\n* Fireclay\n* Kaoloniteclay\n* Loam\n* Peat\n* Rockysoil\n* Sandy\n* Silty\nThese textures can be seen in the image below, in row-major order:\n![](media/fancy.png)\n\n## Getting Started\n* Simply create a world with the Soils module enabled!\n\n## Commands\n* `give Soils:<blockName>` - Gives your player some blocks from the Soils module\n  * Example: `give Soils:ContinentalSand`"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxOTMwMTYzMTM=",
    "name": "SoundyGenetics",
    "url": "https://github.com/Terasology/SoundyGenetics",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/229ad5b129759e84f0436a1088bbc75758dc56c1970c38b42f5d4309b8146f17/Terasology/SoundyGenetics",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"SoundyGenetics\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Soundwave\",\n  \"displayName\": \"Soundy Genetics\",\n  \"description\": \"This library module adds genetics.\",\n  \"dependencies\": [\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"serverSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNjQwMjIzOQ==",
    "name": "Spawning",
    "url": "https://github.com/Terasology/Spawning",
    "description": "Supports an assortment of ways to create Spawners for creatures and flag creatures as Spawnable",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/49289bdbcb54f555568028b1959700ac4580fac627e06f0f2f472e1f9ed67bbc/Terasology/Spawning",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Spawning\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Cervator, Esapetri\",\n  \"displayName\": \"Spawning\",\n  \"description\": \"Supports an assortment of ways to create Spawners for creatures and flag creatures as Spawnable\",\n  \"dependencies\": [\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk2MTIyNzU4OA==",
    "name": "StaticCities",
    "url": "https://github.com/Terasology/StaticCities",
    "description": "A Cities-based module that creates the entire content at world-gen time",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/076a19321c9f987ca89f2a8eff7bb6638ef5f783c1e720a46351084e0063df0d/Terasology/StaticCities",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"StaticCities\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"msteiger\",\n    \"displayName\": \"StaticCities\",\n    \"description\": \"Spawns static cities at worldgeneration.\",\n    \"dependencies\": [\n        {\n            \"id\": \"BiomesAPI\",\n            \"minVersion\": \"4.0.0\"\n        },\n        {\n            \"id\": \"Cities\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"CommonWorld\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"CoreWorlds\",\n            \"minVersion\": \"1.1.0\",\n            \"maxVersion\": \"3.0.0\"\n        },\n        {\n            \"id\": \"NameGenerator\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"StructuralResources\",\n            \"minVersion\": \"2.1.0\"\n        }\n    ],\n    \"isServerSideOnly\": false,\n    \"defaultWorldGenerator\": \"StaticCities:staticCities\",\n    \"isWorld\": true\n}\n"
    },
    "readme": {
      "text": "# StaticCities\nA Cities-based module that creates the entire content at world-gen time\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk3NTY4NzM0MQ==",
    "name": "StoneCrafting",
    "url": "https://github.com/Terasology/StoneCrafting",
    "description": "Stone level crafting stuff",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/2f7c24290153b19c14eff283ecf5b6b5be539228066e2b57a00a1a7e8261a7c2/Terasology/StoneCrafting",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"StoneCrafting\",\n  \"version\": \"1.1.2-SNAPSHOT\",\n  \"author\": \"XTariq\",\n  \"displayName\": \"Stonecrafting\",\n  \"description\": \"Module that introduces crafting of several stone-based items through workstations.\",\n  \"dependencies\": [\n    {\n      \"id\": \"AnotherWorld\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"CoreAssets\",\n      \"minVersion\": \"2.0.1\"\n    },\n    {\n      \"id\": \"Drops\",\n      \"minVersion\": \"1.0.1\"\n    },\n    {\n      \"id\": \"Durability\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"Health\",\n      \"minVersion\": \"2.0.0-SNAPSHOT\"\n    },    \n    {\n      \"id\": \"InGameHelpAPI\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"MultiBlock\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"WoodCrafting\",\n      \"minVersion\": \"1.0.3\"\n    },\n    {\n      \"id\": \"Workstation\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"WorkstationCrafting\",\n      \"minVersion\": \"1.0.1\"\n    }\n  ],\n  \"serverSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxODQ0NzE0MA==",
    "name": "StructuralResources",
    "url": "https://github.com/Terasology/StructuralResources",
    "description": "Various structural resources like block shapes for buildings.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/817b55412e15103c414ffd76ebe58d7cd1dfc14a92be0c7e5453b2365fba9274/Terasology/StructuralResources",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"StructuralResources\",\n  \"version\": \"2.3.0-SNAPSHOT\",\n  \"author\": \"skaldarnar, A'nW\",\n  \"displayName\": \"Structural Resources\",\n  \"description\": \"This module adds various resources for buildings, e.g. new shapes.\",\n  \"dependencies\": [\n    {\n      \"id\": \"CoreAssets\",\n      \"minVersion\": \"2.0.1\"\n    },\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isAsset\": true\n}\n"
    },
    "readme": {
      "text": "# Structural Resources\n\nThis module provides various building resources, e.g., shapes and textures.\n\n![image1](https://github.com/MetaTerasology/StructuralResources/raw/master/images/Terasology-2014-04-04-obelisks.jpg \"Examples for obelisk shapes.\")\n\n## Content\nCurrently, the module contains the following shapes\n\n* **Obelisk**: base, 3 pillar shapes (bottom, middle, tip)\n* **Pillar**: pillar base, top and middle part\n* **Stack**: three stack shapes (like ingots or bars; 1/3, 2/3 and Full Stack)\n* **Barrel**: barrel shape and texture\n* **Connectors**: connectors for cables, axles, ... (two sizes, different variants)\n* **TimberFrame**: cross, diagonal, horizontal, vertical, plain\n* **Roof**: various roof tiles\n\n![image2](https://github.com/MetaTerasology/StructuralResources/raw/master/images/Terasology-140428172032-1152x700.jpg \"Stacks and barrel shape.\")\n\n## Contributors\n* [@skaldarnar](https://github.com/skaldarnar)\n* A'nW\n* [@Josharias](https://github.com/Josharias)\n* [@niruandaleth](https://github.com/jdrueckert)\n\n### License\n\nThis module is licensed under the [Apache 2.0 License](http://www.apache.org/licenses/LICENSE-2.0.html).\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk1OTI0NDk5NA==",
    "name": "StructureTemplates",
    "url": "https://github.com/Terasology/StructureTemplates",
    "description": "Structure Templates is a module for Terasology that allows for the creation of so called \"structure templates\".",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/0b73113950e301c36dd3a6b94e11e7684f0d7c5ef7422f24565b8535f27329bc/Terasology/StructureTemplates",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"StructureTemplates\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"Florian\",\n    \"displayName\": \"Structure Templates\",\n    \"description\": \"A module that adds 'structure templates' which can be used to spawn whole structures for faster building.\",\n    \"dependencies\": [\n        {\n            \"id\": \"CoreAdvancedAssets\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isAsset\": true\n}\n"
    },
    "readme": {
      "text": "#  Structure Templates\n\n## About this repository.\n\nStructure Templates is a module for Terasology that allows for the creation of so called \"structure templates\".\n\n\n## What are structure templates\n\nStructure tempaltes describe a structure. This structure can then be placed multiple times.\n\nThe structure templates can either be obtained as item ingame and just be used for quicker building.\n\nHowever structure templates can also be used exported to json files (terasology prefabs) and used by modules to generate for example a random dungeon with multiple rooms. The module [Gooey's Quest](https://github.com/Terasology/GooeysQuests) does for example exactly that. A single structure template can spawn a complete random dungeon as structure templates can also trigger the spawning of further structure templates.\n\nStructure templates can not only spawn blocks but for example also entities. However the spawning of more than just blocks and chests with items need currently some manual extension of the json file. For example the dungeon generating structure templates of  [Gooey's Quest](https://github.com/Terasology/GooeysQuests) also spawn skeletons.\n\nThe structure template framework can also be easily extended to add further spawn actions and conditions.\n\n## How to view/edit existing structure templates ingame\n\nIt is possible to place structure templates in a edit mode. In that edit mode placeholders will be placed at locations where for example normally other further sturcture template spawning would have been triggered normally. To do this you first need to obtian the toolbox item ![with red toolbox icon](assets/textures/Toolbox16x16.png) via the command `give toolbox`. This item opens on activation a dialog which allows you to obtain items (Icon: ![with T icon](assets/textures/StructureTemplateOrigin.png)) that spawn structure templates in edit mode. However to actually see structure templates ingame you need to activate first a moduel like [Gooey's Quest](https://github.com/Terasology/GooeysQuests) that contains structure templates. \n\nOnce you placed a structure template a white block with a black T (Icon: ![T](assets/textures/StructureTemplateOrigin.png)\n) will  appear at the so called \"origin\" of the structure template.\nThis structure template orign block can be activated to open a interaction dialog with the structure template.\n\nTo add a block to that template you would then activate the option \"Record block addition\" in that dialog. This will make a outline appear around the blocks of the structure template. Whenever you place a block, the template instance you place will now know that this block belongs to the structure. If you remove a block whilte \"Record block addition\" is active then the block will be also be removed from the template.\n\nIf you are making an underground room it is a good idea to place the structure template you are editing underground. Then you can activate the option \"Record block removal\". With this option active any block removal you do will count result in the new air block being added to the template. Any block placement will result in the air block being removed from the structure template.\n\nIf both \"Record block addition\" and \"Record block removal\" have been activated then any block addition and removal will be added to the structure template.\n\nA quick way to extend underground rooms is the \"Wall replacer\" tool that can also be obtained form the toolbox. It allows you to replace a wall with another block including air. If you have the option \"Recond block addition\" active then those changes will be automatically recorded too. Independent if you add actual blocks or air.\n\nWhen you want to try out your modifications to the tempalte then you can use the \"Create Structure Spawner\" button in the structure template origin dialog to give yourself a item that spawns the structure template (in non edit mode).\n\nWhen you are happy with the changes you can use the \"Selected -> Clipboard\" button in the structure template origin dialog in order to copy a text string in json format to the clipboard that represents the structure template. This json can then be pasted in the prefab file that represents the structure template. By however careful to check what changes you made as existing structure template components may contain additional components that can not yet be represented by the template in editing mode.\n\nOne part that can not be represented yet are spawn conditions for the structure template. For example you can make structure templates be only placeable underground so that a randomly generated dungeon does not generate rooms above the surface. To get the json that represents a \"is underground\" condition for a structure template click on the `Copy \"is underground\" condition` button. This json needs then to be added manually to the prefab file. If you make an underground room larger you probably also need to regenerate this underground condition so that it also checks that the added parts are underground.\n\n\n## How a single structure template can spawn a random dungeon\n\nStructure templates can spawn other structure templates. So it is possible to make a template that \"represents a dungeon entrance\" and have that template trigger the spawning of a randomly chosen cooridor structure template. This cooridor structure template then might trigger the spawning of one or more other coorditor structure template. Thus recusivly a huge random dungeon can be generated.\n\nTo make a structure template spawn another structure template you need to place a structure placeholder block within your template and then activate it to specify what structure template type shall be spawned.\n\nEach structure template can belong to a structure template type that gets described itself by a prefab with `StructureTemplateType` component. The sturucture template type and the spawn rate can be specified via the structure template origin block. The larger the spawn rate value is, the more often it will be picked. If you want your structure tempalte to have an average spawn rate you should set the spawn rates value to 100. A structure template with the spawn reate 200 gets picked twice as often as one with the spawn rate 100. A structure template with the spawn rate 50 gets only picked half as often as one with the spawn rate 100.\n\nNo further registering of structure templates is necessary. You just need to add a prefab file for you new structure template and it will automatically be used whenever another structure template wants to spawn a structure template of its type.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNzExMzM5Nw==",
    "name": "SubstanceMatters",
    "url": "https://github.com/Terasology/SubstanceMatters",
    "description": "A library for defining and using materials",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/8eb3886064f12cf1d3832593c97eebde694f644a77da105da3388c813d171931/Terasology/SubstanceMatters",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"SubstanceMatters\",\n  \"version\": \"2.1.0-SNAPSHOT\",\n  \"author\": \"The Terasology Foundation\",\n  \"displayName\": \"SubstanceMatters\",\n  \"description\": \"Adds systems for tracking the composition of items.  Also adds world generation for some core ores if OreGeneration is enabled.\",\n  \"dependencies\": [\n    {\n      \"id\": \"CoreAssets\",\n      \"minVersion\": \"2.0.1\"\n    },\n    {\n      \"id\": \"Fluid\",\n      \"minVersion\": \"2.0.0\"\n    },\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"ItemRendering\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"OreGeneration\",\n      \"minVersion\": \"2.0.0\",\n      \"optional\": true\n    },\n    {\n      \"id\": \"Workstation\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "# Substance Matters\n\n## Design Goals\n\n- Have a central place to put definitions for common substances.\n- Define default ore generation in the world.\n- Create multiple items from one texture, with all of these items being easily identifiable from one another.\n- Be able to specify what an ore block is made out of and create items out of that ore that represent that substance.\n  So when an iron block is melted, an iron looking nugget is produced.\n  This iron nugget could then make another item that looks like iron.\n\n## Substances\n\nSubstances hold attributes that allow creation of materials from a single image but look different from materials made of different substances.\n\n### Basic Prefab Usage\n\n```json5\n// TestModule/assets/prefabs/copper.prefab\n{\n    \"substance\": {\n        \"name\": \"Copper\",\n        \"hue\": 20,\n        \"saturationScale\": 1,\n        \"brightnessScale\": 1\n    }\n}\n```\n\nThe name of the substance will be prepended to the material name.\nSo if you have a \"Nugget\" material made of \"Iron\" substance, it will be named \"Iron Nugget\".\nHue is the color that this substance use on a material.\nSaturation scale and Brightness scale allow you to further tweak the appearance of the color tinting without changing the intent of the original artwork.\n\n## Materials\n\nMaterials are made out of substance.\nYou would add a `MaterialItemComponent` to an item and specify a texture to use.\nThen when a `MaterialCompositionComponent` is added, the primary substance (the substance with the greatest value) will be used to tint the texture to look like that substance.\n\n### Basic Prefab Usage\n\n```json5\n// TestModule/assets/prefabs/nugget.prefab\n{\n  \"parent\": \"engine:iconItem\",\n  \"Item\": {\n    \"icon\": \"TestModule.Nugget\",\n    \"stackId\": \"TestModule:Nugget\"\n  },\n  \"DisplayName\": {\n    \"name\": \"Nugget\"\n  },\n  \"MaterialItem\": {\n    \"icon\": \"TestModule.Nugget\"\n  }\n}\n```\n\n## Testing out your materials\n\nUse the `giveMaterialItem` command to create materials to test with.\n\nPut this into your in-game console to create copper nuggets with the above prefabs: \n\n```\ngiveMaterialItem nugget copper 10\n```\n\nThis item will look like a nugget,  and have 10 copper substance attached to it.\n\n\n## Material Composition\n\nA list of the substance contents of an item.\nNot intended to be added directly to a prefab with JSON.\nCan be used to determine what substances are on an item and act accordingly.\n\n# Substance Matters for Fluids\n\n### Fluid Substances\n\n```json5\n// TestModule/assets/prefabs/poison.prefab\n{\n    ...\n    \"fluidSubstance\": {},\n    \"somePoisonAttribute\": {\n        \"deadly\": \"very yes\"\n    }\n}\n```\n\n### Material Fluid Containers\n\n```json5\n// TestModule/assets/prefabs/fluidBucket.prefab\n{\n  ...\n  \"MaterialFluidItemContainer\": {\n    \"fluidIcon\": \"TestModule.Nugget\"\n  }\n}\n```\n\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMTc1MDA3MjY=",
    "name": "SurfaceFacets",
    "url": "https://github.com/Terasology/SurfaceFacets",
    "description": "A Terasology module containing world generation facets and their providers that store useful surface-level information",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/60700dbabd55ce85c9d4bd15a7cf28d708feb61a0d6446f5825c14910b04406e/Terasology/SurfaceFacets",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"SurfaceFacets\",\n    \"version\": \"1.0.0-SNAPSHOT\",\n    \"author\": \"eviltak\",\n    \"displayName\": \"SurfaceFacets\",\n    \"description\": \"A module containing facets that store useful surface-level information and their providers as a plugin\",\n    \"dependencies\": [\n        { \"id\": \"CoreAssets\", \"minVersion\": \"2.0.1\" },\n        { \"id\": \"CoreWorlds\", \"minVersion\": \"1.1.0\", \"maxVersion\": \"3.0.0\" }\n    ],\n    \"serverSideOnly\": false,\n    \"isWorld\": true\n}\n"
    },
    "readme": {
      "text": "## SurfaceFacets\nThis module contains facets and their corresponding providers which available as plugins that provide extra information about the world surface.\n\n## Facets\n### `SurfaceNormalFacet`\nContains the surface normal data for each point in a world.\n\n### `SurfaceSteepnessFacet`\nContains the surface steepness (which is the angle in radians between the surface normal and the vertical) data for each point in a world.\n\n## Providers\n### `SurfaceNormalProvider`\nProduces a `SurfaceNormalFacet` with the surface normals for a world obtained from its surface heights.\n\n### `SurfaceSteepnessProvider`\nProduces a `SurfaceSteepnessFacet` with the surface steepness for a world obtained from its surface heights.\n\n## Usage\nYou can either directly add the providers to your world builder via `addProvider` or add all of them as plugins via `addPlugins`. The facets contain data as a 2D field of the surface points much like `SurfaceHeightProvider` and can be used in rasterizers.\n\nFor an example of how the facets can be used to generate worlds, take a look at the world generator and rasterizer under the `examples` subpackage. The example can be run by using the _SurfaceFacets Example_ world generator after activating the module.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMzkwNDQ4OA==",
    "name": "Tasks",
    "url": "https://github.com/Terasology/Tasks",
    "description": "A module to add questing features",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/15bfd5b06cce9eb847bc38f99f1dd3abb0a9587baa78cab35935242ce801ebeb/Terasology/Tasks",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Tasks\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"nh_99, msteiger\",\n  \"displayName\": \"Tasks\",\n  \"description\": \"A module to add some questing features to the game.\",\n  \"dependencies\": [\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"ItemRendering\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isAugmentation\": true\n}\n"
    },
    "readme": {
      "text": "Tasks Framework\n===============\nThis is the tasks framework. It currently only contains features for making and playing through quests.\n\nActivate the quest HUD by pressing `K`.\n\nA typical setup is illustrated in the [QuestExamples](https://github.com/Terasology/QuestExamples) module.\n\nThe basic idea is as follows:\n\n* A quest point entity provides quest items to players.\n* A quest item is activated by the player.\n* The quest HUD documents the list of tasks to achieve.\n* When all tasks are complete, the quest is complete.\n\n[Sneak Preview: Quest System](https://www.youtube.com/watch?v=GMoOZ1CvyhE).\n\n\nDeveloping\n------------\n\nQuest Points need to have a `QuestListComponent` that enumerates available quest items.\n\nQuests are stored in the form of prefabs with a `QuestComponent` that is comprised by a list of tasks.\n\nBeacons (points the player has to go to) are identified by `QuestBeaconComponent` ID.\n\n\n### License\n\nThis module is licensed under the [Apache 2.0 License](http://www.apache.org/licenses/LICENSE-2.0.html).\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNDE0OTIxOTU=",
    "name": "TestReplayModule",
    "url": "https://github.com/Terasology/TestReplayModule",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/6da5889607b50d331d5131b2b5da4fc2f887805a5e5454a68183023c96c7209e/Terasology/TestReplayModule",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk0NDg0NDQwMg==",
    "name": "TheBetweenlands",
    "url": "https://github.com/Terasology/TheBetweenlands",
    "description": "Temporary / sandbox repository for experimenting with the MC mod The Betweenlands",
    "homepageUrl": "http://www.minecraftforum.net/forums/mapping-and-modding/minecraft-mods/wip-mods/1441135-wip-reboot-dimension-the-betweenlands-a-dark",
    "openGraphImageUrl": "https://opengraph.githubassets.com/3b89e5ad1358e1ac06b4287fe8542cd700a572c878ed61f4e6b6f849bb4b1e2f/Terasology/TheBetweenlands",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk3NDMwODE5MQ==",
    "name": "Thirst",
    "url": "https://github.com/Terasology/Thirst",
    "description": "This module introduces Thirst and various related effects.",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/12861c698561b6cbddc4ac884204bf86f7e82cc074c2ef421bf9b40ef995ca28/Terasology/Thirst",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"Thirst\",\n    \"version\": \"1.1.0-SNAPSHOT\",\n    \"author\": \"UltimateBudgie, Marcin Sciesinski <marcins78@gmail.com>, Mandar Juvekar\",\n    \"displayName\": \"Thirst and Drink\",\n    \"description\": \"This module introduces Thirst and various related effects.\",\n    \"dependencies\": [\n        {\n            \"id\": \"Fluid\",\n            \"minVersion\": \"2.0.0\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Breathing\",\n            \"optional\": true\n        }\n    ],\n    \"isLibrary\": true,\n    \"isAugmentation\": true\n}\n"
    },
    "readme": {
      "text": "# Thirst\nA Terasology module, as the name implies, that features thirst in the form of a status bar.\n\n## Features\nA thirst status bar in the player's HUD.\nThe player's thirst saturation decreases as time in the world progresses, but replenishes with water and other consumables.\n\n## Getting Started\n* Simply create a world with the Thirst module enabled\n* As time progresses, you'll notice the thirst bar going down!\n\n## Commands\n* `showThirst` - Displays your current drink level\n* `setThirst <float>` - Sets your current drink level to the given value\n* `setMaxThirst <float>` - Sets your maximum drink level to the given value\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxOTgwNjc3ODc=",
    "name": "Towers",
    "url": "https://github.com/Terasology/Towers",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/a8fad93de9ee7ebc6c2ddfbae5e055b4cc207230a2986c7641b7f7abe7c3989d/Terasology/Towers",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\" : \"Towers\",\n    \"version\" : \"0.1.0-SNAPSHOT\",\n    \"author\" : \"darshan3\",\n    \"displayName\" : \"Towers\",\n    \"description\" : \"\",\n    \"dependencies\" : [{\"id\" : \"LightAndShadowResources\", \"minVersion\" : \"0.2.0\"},\n                      {\"id\" : \"AlterationEffects\", \"minVersion\" : \"1.0.1\"}],\n    \"serverSideOnly\" : false\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxOTk2NjU2NDQ=",
    "name": "TowerTargeters",
    "url": "https://github.com/Terasology/TowerTargeters",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/c692db104a74f45b8471fa83f9924fa5cbecbe727217c589fd8919e411b09d2b/Terasology/TowerTargeters",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNTMzNzA1NTY=",
    "name": "TreasureHunt",
    "url": "https://github.com/Terasology/TreasureHunt",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/3178f7789af6d586dd0f45066a02ac0d6cd95a5fe29b3932ce02314cd812c12d/Terasology/TreasureHunt",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk1MzI0MDQyOA==",
    "name": "TutorialAssetSystem",
    "url": "https://github.com/Terasology/TutorialAssetSystem",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/f3a2cd3d9ee8274c0f3daebd4d319175f1d3201f0f6addd491d7a17928b160d7/Terasology/TutorialAssetSystem",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk5ODk4MzU0OQ==",
    "name": "TutorialBehaviors",
    "url": "https://github.com/Terasology/TutorialBehaviors",
    "description": "A repository showcasing some example entities with behaviors.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/c80f688f515573c30fa3768943cb280ca0b7fa7555d4069d8ae7870c080723bf/Terasology/TutorialBehaviors",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMTQwMTYzNTQ=",
    "name": "TutorialBlockFamily",
    "url": "https://github.com/Terasology/TutorialBlockFamily",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/a4fe14e4e8178a0d46acf31ed39c3382398b81cf5dddef5804f47161cd26429c/Terasology/TutorialBlockFamily",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk2NTQ4ODM5Nw==",
    "name": "TutorialDynamicCities",
    "url": "https://github.com/Terasology/TutorialDynamicCities",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/757cfdee6a8fab66efad951289b3f316f4d88d1b5c754b600de46443bc592f87/Terasology/TutorialDynamicCities",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyMjcyMjA4NjI=",
    "name": "TutorialEntitySystem",
    "url": "https://github.com/Terasology/TutorialEntitySystem",
    "description": "Tutorial on Terasology's Entity Component System (ECS)",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/9147bfef9d29ea0adeea16e0925520110ccdce9bfe2f8d1f8e6ef59895229e4c/Terasology/TutorialEntitySystem",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyMjcyMjExMjE=",
    "name": "TutorialEventsInteractions",
    "url": "https://github.com/Terasology/TutorialEventsInteractions",
    "description": "Tutorial on using events in Terasology",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/4e00a0b5ce390b4620b2cd60bf83a7f91aef4b3da7efaca6117ed4f3b281c265/Terasology/TutorialEventsInteractions",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyMDQzMjU0NDY=",
    "name": "TutorialGroups",
    "url": "https://github.com/Terasology/TutorialGroups",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/044a25c26be21d689d6113b1faeea338da288bc4fd8761a71b2285abbd897df5/Terasology/TutorialGroups",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk5NDg2Njk0Nw==",
    "name": "TutorialI18n",
    "url": "https://github.com/Terasology/TutorialI18n",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/2f961a3921536a74d6dadf90419eca3765433bea31118bc6c18b6d310aeb0af6/Terasology/TutorialI18n",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNjc2NTE1MTI=",
    "name": "TutorialMinimalEngineDemo",
    "url": "https://github.com/Terasology/TutorialMinimalEngineDemo",
    "description": "A module demonstrating how to build a minimal \"game\" with the barebone Terasology engine.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/a41add79755780e8fbb01c3c1b7e85548b5f13d38ac28f9a201d9d37e613416b/Terasology/TutorialMinimalEngineDemo",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"TutorialMinimalEngineDemo\",\n    \"version\": \"1.1.1-SNAPSHOT\",\n    \"author\": \"The Terasology Foundation\",\n    \"displayName\": \"Tutorial - Minimal Engine Demo\",\n    \"description\": \"The last block you pick up is what you place.\\nExtreme minimalistic gameplay setting to showcase engine running nearly solo (no inventory, health, etc). More for testing than playing\",\n    \"dependencies\": [\n        { \"id\": \"CoreRendering\", \"minVersion\": \"1.0.0\" }\n    ],\n    \"serverSideOnly\": false,\n    \"isGameplay\": \"true\",\n    \"isTutorial\": true,\n    \"defaultWorldGenerator\": \"TutorialMinimalEngineDemo:minimalDemoWorld\"\n}\n"
    },
    "readme": {
      "text": "# Tutorial - Minimal Engine Demo\n\nThis tutorial module is rather a \"showcase\" of a minimal playable setup.\nIt builds upon the very basics of the [world generation tutorial](https://github.com/Terasology/TutorialWorldGeneration) and the [entity-component-system tutorial](https://github.com/Terasology/TutorialEntitySystem).\n\nThe player will spawn in a world of rolling green hills, where they can walk around and dig some blocks.\nThe last item picked up is the one which can be placed - simple as that.\n\n![](screenshot.png)\n\n## Blocks\n\nEvery game mode in Terasology needs to define (or reuse) blocks.\nFor this minimal demo we make use of the _auto-block_ feature by just placing block tiles in `assets/blockTiles/auto`.\nThe asset system will take these `.png` files and automatically create blocks with the same name for us.\n\n```\nassets/\n└── blockTiles\n    └── auto\n        ├── dirt.png\n        └── grass.png\n```\n\nThe blocks are registered with a resource URN that's prefixed with the module name:\n\n```\n\"TutorialMinimalEngineDemo:dirt\"\n```\n\nLearn more about the [asset system](https://github.com/Terasology/TutorialAssetSystem/wiki).\n\n## World Generation\n\nThe world generation used in this module is very simple.\nBasically, it follows the first steps of the world generation tutorial by providing the minimal required set of building blocks to create a world.\n\n```\nsrc/main/java/org/terasology/tutorial/minimalenginedemo/world/\n├── BuilderWorldGenerator.java\n├── BuilderWorldRasterizer.java\n└── SurfaceProvider.java\n```\n\nThe surface provider determines the height of our world, e.g., where mountains and valleys are, by sampling a noise function.\nThe world rasterizer is responsible for turning this surface information into blocks.\nThe top-most layer is covered with grass, while all blocks below are dirt.\nIn the generator class these pieces are put together and given a name, such that players can select the world generator in game.\n\nLearn more about [world generation](https://github.com/Terasology/TutorialWorldGeneration/wiki).\n\n## Single-slot Inventory\n\nFinally, a _single-slot inventory_ is added to the game by letting the player own the last block they have picked up.\nThis is achieved by introducing a new _component_ denoting the ownership of an item, and a system handling the event to give the player an item.\n\n```\nsrc/main/java/org/terasology/tutorial/minimalenginedemo/logic\n├── CharacterOwnedItemComponent.java\n└── HeldItemSystem.java\n```\n\nLearn more about the [entity-component system](https://github.com/Terasology/TutorialEntitySystem/wiki).\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyMjcyMjEzNjY=",
    "name": "TutorialMultiplayerExtras",
    "url": "https://github.com/Terasology/TutorialMultiplayerExtras",
    "description": "Tutorial on making Terasology's ECS work with multiplayer",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/8127cf9e4315fa3ef2a9992d9d7baf37235577d1c2019b5ff568cd272c4b2f18/Terasology/TutorialMultiplayerExtras",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk2NjIwODIxMg==",
    "name": "TutorialNui",
    "url": "https://github.com/Terasology/TutorialNui",
    "description": "A series of tutorials for the NUI interface framework.",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/bec0db7f885441de68a445d7f1be555b5c7d9c61d65f0beacaed953feed552ba/Terasology/TutorialNui",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMTQxNjI1Mzk=",
    "name": "TutorialParticleSystem",
    "url": "https://github.com/Terasology/TutorialParticleSystem",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/d44b864a1dfbf5f75c52e61c28deccfd01e6b65d42d10ffac59e554a2f80ebae/Terasology/TutorialParticleSystem",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNzU0MjYyMDE=",
    "name": "TutorialPathfinding",
    "url": "https://github.com/Terasology/TutorialPathfinding",
    "description": "A tutorial on Terasology's various pathfinding topics",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/0b453bf7786053823143c0a5a3ab7db7b01e05bb4dcf6592d70994423ccda1ce/Terasology/TutorialPathfinding",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyMjU3NTYxOTc=",
    "name": "TutorialProfiling",
    "url": "https://github.com/Terasology/TutorialProfiling",
    "description": null,
    "homepageUrl": "https://terasology.github.io/TutorialProfiling",
    "openGraphImageUrl": "https://opengraph.githubassets.com/cab55b7a937313a13a366eb0badf0b21d4d760b31a4d5f6c92b6f6370b14f0e9/Terasology/TutorialProfiling",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNTU1NTY5Mg==",
    "name": "TutorialQuests",
    "url": "https://github.com/Terasology/TutorialQuests",
    "description": "Sample quests and such based on the Tasks module",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/1798b29e64bb02022f3c3b88685fd9d88d38842f0061c6086c539e498a9e0e8d/Terasology/TutorialQuests",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"TutorialQuests\",\n    \"version\": \"1.0.1-SNAPSHOT\",\n    \"author\": \"nh_99, msteiger\",\n    \"displayName\": \"Tutorial Quests\",\n    \"description\": \"A module to show how to make quests to developers.\",\n    \"dependencies\": [\n        { \"id\": \"Books\", \"minVersion\": \"1.1.0\" },\n        { \"id\": \"CoreAssets\", \"minVersion\": \"2.0.1\" },\n        { \"id\": \"Inventory\", \"minVersion\": \"1.1.0\" },\n        { \"id\": \"Tasks\", \"minVersion\": \"1.0.0\" }\n    ],\n    \"isServerSideOnly\": false,\n    \"isTutorial\": true\n}\n"
    },
    "readme": {
      "text": "TutorialQuests\n======\nThis is a module that is mostly intended for developers to show them how to make quests.\n\n\n### License\n\nThis module is licensed under the [Apache 2.0 License](http://www.apache.org/licenses/LICENSE-2.0.html).\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk5Mzg4NDUzMw==",
    "name": "TutorialSectors",
    "url": "https://github.com/Terasology/TutorialSectors",
    "description": "A Terasology module to test my work on sectors",
    "homepageUrl": "",
    "openGraphImageUrl": "https://opengraph.githubassets.com/166aa495f9f42344a60b8d8c3a0d328a81e6568f332c743e4f38b7399b3568b6/Terasology/TutorialSectors",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyMDQyODQ5Ng==",
    "name": "TutorialSnakeTournament",
    "url": "https://github.com/Terasology/TutorialSnakeTournament",
    "description": "A module coding tutorial based on the classic Snake game",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/cc1c6a50f932330ddb5ad2673381adf7428dcf012a93467dabcc71211f46bfac/Terasology/TutorialSnakeTournament",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxMDA4NzE3Njg=",
    "name": "TutorialTelemetry",
    "url": "https://github.com/Terasology/TutorialTelemetry",
    "description": "A test module for telemetry in Terasology",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/a3776aaffaab7139f65609a1975a8b64e43ad8b48a941c34ccddf81faea61189/Terasology/TutorialTelemetry",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNTUwMDM0Nw==",
    "name": "TutorialWorldGeneration",
    "url": "https://github.com/Terasology/TutorialWorldGeneration",
    "description": "A tutorial on the facet world generation system",
    "homepageUrl": "http://terasology.github.io/TutorialWorldGeneration",
    "openGraphImageUrl": "https://opengraph.githubassets.com/9a71ed14acff353a0f101255aed510193968557bee0502091c91bdb17ebee263/Terasology/TutorialWorldGeneration",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk3ODI1NTE5Mg==",
    "name": "Underworld",
    "url": "https://github.com/Terasology/Underworld",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/38b06e81ae44aacbf431a453cc9cd9a7f62c969e83b3e131d992545c57511a2e/Terasology/Underworld",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkzMDgwMzU1MQ==",
    "name": "Valentines",
    "url": "https://github.com/Terasology/Valentines",
    "description": "What is love? Gooey don't hurt me, don't hurt me, no more ... ♫",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/33c5fc7c9d56af7271967f84286e14246fb8c982ebb3bd96d76426fbd1edea95/Terasology/Valentines",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Valentines\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Kissey-faced Gooey\",\n  \"displayName\": \"Valentines\",\n  \"description\": \"What is love? Gooey don't hurt me, don't hurt me, no more ... ♫\",\n  \"dependencies\": [],\n  \"isServerSideOnly\": false,\n  \"isAsset\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNzM3NDEwNTA=",
    "name": "Volcanoes",
    "url": "https://github.com/Terasology/Volcanoes",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/3314e7d1b59cfeed96000f5601a7a6304dca6590d74f68bb180da3e76b660c30/Terasology/Volcanoes",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\r\n    \"id\" : \"Volcanoes\",\r\n    \"version\" : \"1.1.0-SNAPSHOT\",\r\n    \"author\" : \"sin3point14\",\r\n    \"displayName\" : \"Volcanoes\",\r\n    \"description\" : \"Provides Volcano plugins to be used in worlds\",\r\n    \"dependencies\" : [\r\n        {\"id\": \"CoreAssets\", \"minVersion\": \"2.0.0\"},\r\n        {\"id\": \"CoreWorlds\", \"minVersion\": \"1.0.0\", \"maxVersion\": \"3.0.0\"},\r\n        {\"id\": \"GenericRocks\", \"minVersion\": \"1.0.0\"}\r\n     ],\r\n    \"serverSideOnly\" : true,\r\n    \"isWorld\" : true\r\n}\r\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNjIyODkxNw==",
    "name": "WeatherManager",
    "url": "https://github.com/Terasology/WeatherManager",
    "description": "Adds weather to Terasology",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/3df87ae0000b5e02a82bd92c1cf7c534d139380736e71b4522356b5cee505475/Terasology/WeatherManager",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"WeatherManager\",\n    \"version\": \"1.0.0-SNAPSHOT\",\n    \"displayName\": \"Weather Manager\",\n    \"author\": \"Linus van Elswijk, msteiger\",\n    \"description\": \"This module adds weather to the game\",\n    \"dependencies\": [\n        { \"id\": \"MarkovChains\", \"minVersion\": \"1.5.0\" },\n        { \"id\": \"CoreAssets\", \"minVersion\": \"2.1.0\" },\n        { \"id\": \"FlowingLiquids\", \"minVersion\": \"1.2.0\" }\n    ],\n    \"isAugmentation\": true\n}\n"
    },
    "readme": {
      "text": "WeatherManager\n==============\n\nAdds weather to Terasology\n\n\nWeather conditions\n--------------------\n\nDifferent weather conditions such as rainfall or cloudiness are simulated.\n\n\nClouds\n-------\n\nA plugin for world generators adds block-based clouds that animate over time (currently every world timer tick).\n\n![image1](images/clouds.jpg \"A screenshot of generated clouds\")\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNzc1MTc1OA==",
    "name": "WildAnimals",
    "url": "https://github.com/Terasology/WildAnimals",
    "description": "Module for basic wildlife serving primarily as world ambience",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/16868e7d0693f2c8bcf7c4cd784e643071f5fb61363edb0210c2b3bcbb0abc8a/Terasology/WildAnimals",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"WildAnimals\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"glasz, flo, nihal111, quaternius, dkambersky\",\n  \"displayName\": \"Wild Animals\",\n  \"description\": \"Contains a deer and some other placeholder deer variants. Spawned with `spawnPrefab deer` and similar\",\n  \"dependencies\": [\n    {\n      \"id\": \"Behaviors\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"CoreAssets\",\n      \"minVersion\": \"2.0.1\"\n    },\n    {\n      \"id\": \"Drops\",\n      \"minVersion\": \"1.0.1\"\n    },\n    {\n      \"id\": \"Health\",\n      \"minVersion\": \"2.0.0-SNAPSHOT\"\n    },    \n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"NameGenerator\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"WorldlyTooltipAPI\",\n      \"minVersion\": \"1.0.0\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "![The Wild Animals](banner.png \"The Wild Animals\")\n\n`WildAnimals` is intended to be used as dependency and not as a standalone content module. \nThe idea is that content modules can decide on the rules when and where to spawn the wild animals.\n\nSo far it contains four animals with very simple AIs.\n* Deer\n* Crab\n* Chicken\n* Bat\n\nEach of them can be spawned manually using the `spawnPrefab <animalname>` command, e.g. `spawnPrefab deer`."
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk5NjU3NDA4Mw==",
    "name": "WildAnimalsGenome",
    "url": "https://github.com/Terasology/WildAnimalsGenome",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/1c00385210176ce928add3f7f50b1dc6bf6eb3ca0ef1525afb16bf22e4ff7269/Terasology/WildAnimalsGenome",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"WildAnimalsGenome\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"arpan98\",\n  \"displayName\": \"Wild Animals - Genome\",\n  \"description\": \"Integrates WildAnimals with Genome adding breeding capabilities.\",\n  \"dependencies\": [\n    {\n      \"id\": \"Behaviors\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"Genome\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"WildAnimals\",\n      \"minVersion\": \"1.0.0\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNTgwNjYwMw==",
    "name": "WoodAndStone",
    "url": "https://github.com/Terasology/WoodAndStone",
    "description": "Primitive tool making",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/b4817f62322b1167ced2b878ed3651e28e78b71be669787ec3a72349315c7eed/Terasology/WoodAndStone",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"WoodAndStone\",\n    \"version\": \"1.0.0-SNAPSHOT\",\n    \"author\": \"Marcin Sciesinski <marcins78@gmail.com>\",\n    \"displayName\": \"Wood and Stone\",\n    \"description\": \"Basic 'Stone Age' crafting\",\n    \"dependencies\": [\n        {\n            \"id\": \"AlterationEffects\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"AnotherWorld\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"AnotherWorldPlants\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"BiomesAPI\",\n            \"minVersion\": \"4.0.0\"\n        },\n        {\n            \"id\": \"ClimateConditions\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"CombatSystem\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.1\"\n        },\n        {\n            \"id\": \"CoreWorlds\",\n            \"minVersion\": \"1.1.0\",\n            \"maxVersion\": \"3.0.0\"\n        },\n        {\n            \"id\": \"Drops\",\n            \"minVersion\": \"1.0.1\"\n        },\n        {\n            \"id\": \"Fences\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Fluid\",\n            \"minVersion\": \"2.0.0\"\n        },\n        {\n            \"id\": \"Genome\",\n            \"minVersion\": \"1.0.1-SNAPSHOT\"\n        },\n        {\n            \"id\": \"GrowingFlora\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Hunger\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Journal\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"MultiBlock\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"NameGenerator\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"PlantPack\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Seasons\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"StructuralResources\",\n            \"minVersion\": \"2.1.0\"\n        },\n        {\n            \"id\": \"Workstation\",\n            \"minVersion\": \"1.1.0\"\n        }\n    ],\n    \"isServerSideOnly\": false,\n    \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "WoodAndStone\n============\n\nThis module adds primitive tool making from first steps of humanity to begining of bronze age.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk5Mjg3NzczNg==",
    "name": "WoodAndStoneCraftingJournal",
    "url": "https://github.com/Terasology/WoodAndStoneCraftingJournal",
    "description": "A journal integration for WoodCrafting and StoneCrafting content modules.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/bc5e80026ac87b4596a624101c7e62e2d922964dde2652865f0236f4cfec5416/Terasology/WoodAndStoneCraftingJournal",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"WoodAndStoneCraftingJournal\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"The Terasology Foundation\",\n  \"displayName\": \"Wood and Stone - Crafting Journal\",\n  \"description\": \"This library module integrates a crafting journal with Wood and Stone\",\n  \"dependencies\": [\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"Journal\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"MultiBlock\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"StoneCrafting\",\n      \"minVersion\": \"1.0.2\"\n    },\n    {\n      \"id\": \"WoodCrafting\",\n      \"minVersion\": \"1.0.3\"\n    },\n    {\n      \"id\": \"WorkstationCrafting\",\n      \"minVersion\": \"1.0.0\"\n    }\n  ],\n  \"serverSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk3NTY4NjkwNA==",
    "name": "WoodCrafting",
    "url": "https://github.com/Terasology/WoodCrafting",
    "description": "Wood-level crafting stuff",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/f89967308af1baad26bf8d26e944cafbfd59ca5edb6f789315783e22adff4b44/Terasology/WoodCrafting",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"WoodCrafting\",\n  \"version\": \"1.1.3-SNAPSHOT\",\n  \"author\": \"XTariq\",\n  \"displayName\": \"Woodcrafting\",\n  \"description\": \"Module that introduces crafting of several wood-based items through workstations. This module relies on the use of the NeoTTA world generator\",\n  \"dependencies\": [\n    {\n      \"id\": \"AnotherWorld\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"AnotherWorldPlants\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"Drops\",\n      \"minVersion\": \"1.0.1\"\n    },\n    {\n      \"id\": \"Durability\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"Fences\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"GrowingFlora\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"Health\",\n      \"minVersion\": \"2.0.0-SNAPSHOT\"\n    },    \n    {\n      \"id\": \"InGameHelpAPI\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"MultiBlock\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"PlantPack\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"StructuralResources\",\n      \"minVersion\": \"2.1.0\"\n    },\n    {\n      \"id\": \"Workstation\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"WorkstationCrafting\",\n      \"minVersion\": \"2.0.0\"\n    }\n  ],\n  \"serverSideOnly\": false,\n  \"isAsset\": true\n}\n"
    },
    "readme": {
      "text": "# WoodCrafting\nThis module adds basic woodcrafting to Terasology. It adds various recipes (see below) and three crafting stations.\n\n1. The Basic Woodworking Station\n2. The Novice Woodworking Station\n3. The Standard Woodworking Station (Same skin as Novice station)\n\nThere is also the Portable Basic Wood Station which allows for the crafting of the same recipes as the basic station. When placed as a block, it is identical to the basic station.\n\nItems can also be crafted by hand, in fact, most of the recipes are crafted by hand.\n\n# Crafting\nAt the stations, you can craft various recipes. Each successive station allows you to craft better and better items. The UI screen of the standard station looks like this:\n\n![Standard Station UI](https://github.com/Steampunkery/WoodCrafting/blob/master/assets/textures/StandardWoodworking.png)\n\nEach station has a slightly different UI, allowing for different inputs, tools, upgrades and outputs.\n\nIt is important to remember that Wood Crafting is a system. This means that you can make your own module that houses your recipes and crafting stations so you won't have to modify Wood Crafting.\n\n## Getting started\nYou're probably wondering how to actually craft an item. Here's how you get started.\n\n1. Whip out your pickaxe (Using a shovel will not result a stone, you must use a pick)\n2. Start mining dirt until you have 3-5 stones and 2-3 flint\n3. Press \"n\" to open the hand crafting menu\n4. Click the craft button of one of the available items\n\n# Recipes\nHere is a reference to all the craftable items in this module:\n\n[In-hand crafting items](https://github.com/Terasology/WoodCrafting/tree/master/assets/prefabs/recipe/hand)\n\n[Basic Station crafting items](https://github.com/Terasology/WoodCrafting/tree/master/assets/prefabs/recipe/wood/basic)\n\n[Novice Station crafting items](https://github.com/Terasology/WoodCrafting/tree/master/assets/prefabs/recipe/wood/novice)\n\n[Standard Station crafting items](https://github.com/Terasology/WoodCrafting/tree/master/assets/prefabs/recipe/wood/standard)\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNjc3NTg3Mw==",
    "name": "Workstation",
    "url": "https://github.com/Terasology/Workstation",
    "description": "A module for generic workstation support",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/0fab0be5b1f454f6db767db428f1fc6f8729045a96aa730b385c4a53f3925d74/Terasology/Workstation",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Workstation\",\n  \"version\": \"1.2.0-SNAPSHOT\",\n  \"author\": \"Marcin Sciesinski <marcins78@gmail.com>, Josharias\",\n  \"displayName\": \"Workstation\",\n  \"description\": \"This library module adds workstations and processes.\",\n  \"dependencies\": [\n    {\n      \"id\": \"Fluid\",\n      \"minVersion\": \"2.0.0\"\n    },\n    {\n      \"id\": \"Inventory\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"isServerSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk2MTY4ODQ2OA==",
    "name": "WorkstationCrafting",
    "url": "https://github.com/Terasology/WorkstationCrafting",
    "description": "Crafting at a station you do work at .. hmm :-)",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/35e68d64cd3c50c745db428ba377046bb23eef92bd1c62467d2ee3e33ad81422/Terasology/WorkstationCrafting",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"WorkstationCrafting\",\n    \"version\": \"2.1.0-SNAPSHOT\",\n    \"author\": \"XTariq, Marcin Sciesinski <marcins78@gmail.com>, Mandar Juvekar, Isaac (iojw)\",\n    \"displayName\": \"Workstation Crafting\",\n    \"description\": \"An extended version of crafting to allow for more advanced methods and items.\",\n    \"dependencies\": [\n        {\n            \"id\": \"CoreAssets\",\n            \"minVersion\": \"2.0.0\"\n        },\n        {\n            \"id\": \"Durability\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Fluid\",\n            \"minVersion\": \"2.0.0\"\n        },\n        {\n            \"id\": \"InGameHelpAPI\",\n            \"minVersion\": \"1.0.0\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"MultiBlock\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"Workstation\",\n            \"minVersion\": \"1.1.0\"\n        }\n    ],\n    \"serverSideOnly\": false,\n    \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "# Workstation Crafting\n\n\nThis module adds a more detailed set of classes (compared to the Crafting module) that allow for more complicated and\ndetailed crafting. This is intended to be extended by other modules.\n\nCurrently under reorganization.\n\n---\n\nNaming convention:\n\n- Append `Station` to the end of every workstation.\n  - Here, I follow the convention of `[SkillLevel][StationName]Station`.\n- Append `Process` to the end of every process name.\n- Prepend `Recipe` to any crafting recipe name.\n\n---\n\nIn order to add a new process to this module, do the following:\n\n- Add the process definition under `assets/prefabs/processDefinitions`. \n  Use the preexisting ones as templates.\n- Add a static variable containing the name of the process in `src/main/java/org/terasology/processing/WorkstationCrafting.java`\n- Add this process to the process factory in `src/main/java/org/terasology/processing/system/RegisterWorkstationCraftingRecipes.java`\n (via `registerProcessFactory`).\n\nNow, you should be able to use this process in a workstation or recipe.\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk0MTM4Njk2OA==",
    "name": "WorkstationInGameHelp",
    "url": "https://github.com/Terasology/WorkstationInGameHelp",
    "description": "Ties the workstation processes to items in the InGameHelp module.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/b740985d3da9a45df9b2c89fe400de88a6bbf6d1cc544e9ea02260bc88e4e324/Terasology/WorkstationInGameHelp",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"WorkstationInGameHelp\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"Josharias, xrtariq2594, Cervator\",\n  \"displayName\": \"Workstation - In-Game Help\",\n  \"description\": \"A module which ties workstation processes to items in the InGameHelp module.\",\n  \"dependencies\": [\n    {\n      \"id\": \"InGameHelp\",\n      \"minVersion\": \"1.1.0\"\n    },\n    {\n      \"id\": \"InGameHelpAPI\",\n      \"minVersion\": \"1.0.0\"\n    },\n    {\n      \"id\": \"Workstation\",\n      \"minVersion\": \"1.1.0\"\n    }\n  ],\n  \"serverSideOnly\": false,\n  \"isAugmentation\": true\n}\n"
    },
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkyNDEyMjU3Nw==",
    "name": "WorldlyTooltip",
    "url": "https://github.com/Terasology/WorldlyTooltip",
    "description": "Shows what you are looking at",
    "homepageUrl": "http://forum.terasology.org/threads/worldly-tooltip.1092",
    "openGraphImageUrl": "https://opengraph.githubassets.com/12775ceb0588b9e08be3ee67e2f126305ec2dd6e6b4ba161dd76e32a22b24bdf/Terasology/WorldlyTooltip",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\": \"WorldlyTooltip\",\n    \"version\": \"1.3.0-SNAPSHOT\",\n    \"author\": \"Josharias, nihal111\",\n    \"displayName\": \"Worldly Tooltip\",\n    \"description\": \"Shows what you are looking at (alt for debug info)\",\n    \"dependencies\": [\n        {\n            \"id\": \"Health\",\n            \"minVersion\": \"2.0.0-SNAPSHOT\"\n        },\n        {\n            \"id\": \"Inventory\",\n            \"minVersion\": \"1.1.0\"\n        },\n        {\n            \"id\": \"WorldlyTooltipAPI\",\n            \"minVersion\": \"1.0.0\"\n        }\n    ],\n    \"isAugmentation\": true\n}\n"
    },
    "readme": {
      "text": "# WorldlyTooltip\n\nShows what you are looking at.\n\nThis module works with [WorldlyTooltipAPI](https://github.com/Terasology/WorldlyTooltipAPI), that contains the events `GetTooltipIconEvent` and `GetTooltipNameEvent`.\nThe WorldlyTooltipAPI module needs to be added as a dependency by all modules that want to use the WorldlyTooltip feature.\n\nWorks with:\n\n### Blocks\n![](/images/blocktooltip.png)\n\n### Player Entities\n![](/images/playertooltip.png)\n\n### WildAnimals\n![](/images/deertooltip.png)\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk5MDMxNDk4OQ==",
    "name": "WorldlyTooltipAPI",
    "url": "https://github.com/Terasology/WorldlyTooltipAPI",
    "description": "API of WorldyTooltip module, allows extension of WorldyTooltip without requring it",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/5310316663b76737274b64cd4d8dee664cb015c382818e1953ecd9ca7dc11602/Terasology/WorldlyTooltipAPI",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n  \"id\": \"WorldlyTooltipAPI\",\n  \"version\": \"1.1.0-SNAPSHOT\",\n  \"author\": \"nihal111\",\n  \"displayName\": \"Worldly Tooltip - API\",\n  \"description\": \"Library module for WorldlyTooltip\",\n  \"dependencies\": [],\n  \"serverSideOnly\": false,\n  \"isLibrary\": true\n}\n"
    },
    "readme": {
      "text": "WorldlyTooltipAPI\n==============\n\nShows what you are looking at.\n\nThis module is an extension to the [WorldlyTooltip](https://github.com/Terasology/WorldlyTooltip) module, that contains the WorldlyTooltipClient system that fires GetTooltipIconEvent and GetTooltipNameEvent. \nThese events are defined in this module. The WorldlyTooltipAPI module needs to be added as a dependency by all modules that want to use the WorldlyTooltip feature.\nFurther, the WorldlyTooltip has a dependency on the WorldlyTooltipAPI (this) module. This module essentially acts as an interface between the WorldlyTooltip module and other modules which use it."
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnk3ODMxNjcwNQ==",
    "name": "WorldPortals",
    "url": "https://github.com/Terasology/WorldPortals",
    "description": null,
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/753bff5ba0f5143739b08abde5683ea020d6a2674ee94dea11c62c817eb6f4be/Terasology/WorldPortals",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": null,
    "readme": null
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkzMjQ2MTY4Mzg=",
    "name": "Xmas",
    "url": "https://github.com/Terasology/Xmas",
    "description": "Merry, Gooey Christmas! A wintry, holiday-themed module for the festive season.",
    "homepageUrl": null,
    "openGraphImageUrl": "https://repository-images.githubusercontent.com/324616838/8458d900-47b5-11eb-8803-4fbe4e220648",
    "usesCustomOpenGraphImage": true,
    "moduleTxt": {
      "text": "{\n  \"id\": \"Xmas\",\n  \"version\": \"0.1.0-SNAPSHOT\",\n  \"author\": \"The Terasology Foundation\",\n  \"displayName\": \"Xmas\",\n  \"description\": \"Merry, Gooey Christmas! A wintry, holiday-themed module for the festive season.\",\n  \"dependencies\": [\n    { \"id\": \"BiomesAPI\", \"minVersion\": \"4.0.0\" },\n    { \"id\": \"CoreAdvancedAssets\", \"minVersion\": \"1.2.0\", \"optional\": true },\n    { \"id\": \"CoreAssets\", \"minVersion\": \"2.0.0\" },\n    { \"id\": \"CoreWorlds\", \"minVersion\": \"1.0.0\", \"maxVersion\": \"3.0.0\" },\n    { \"id\": \"Inventory\", \"minVersion\": \"1.4.0\" },\n    { \"id\": \"StructureTemplates\", \"minVersion\": \"1.0.0-SNAPSHOT\", \"optional\": true },\n    { \"id\": \"WeatherManager\", \"minVersion\": \"1.0.0-SNAPSHOT\" }\n  ],\n  \"serverSideOnly\": false\n}\n"
    },
    "readme": {
      "text": "<p align=\"center\">\n<img src=\"./docs/banner.png\" alt=\"Xmas\"/>\n</p>\n\n# Xmas\n\n🎄 Merry, Gooey Christmas! A wintry, holiday-themed module for the festive season. 🎁\n\n## Features\n\n<div align=\"center\">\n<figure>\n<img src=\"./docs/chests.jpg\" alt=\"Chests with wrapping paper.\">\n<figcaption><b>Wrapped Chests</b> - Turn all chests into Christmas presents.</figcaption>\n</figure>\n</div>\n\n<div align=\"center\">\n<figure>\n<img src=\"./docs/snow_and_present.jpg\" alt=\"Snowfall and Player Present\">\n<figcaption><b>Snowfall and Presents</b> - Each player receives a small Christmas present when joining game. Furthermore, white Christmas is guaranteed with everlasting snowfall!</figcaption>\n</figure>\n</div>\n\n<div align=\"center\">\n<figure>\n<img src=\"./docs/xmas_tree.jpg\" alt=\"A Festive Christmas Tree\">\n<figcaption><b>Christmas Tree Template</b> - With the support of <a href=\"https://github.com/Terasology/StructureTemplates\">StructureTemplates</a> you can easily place a festive Christmas tree wherever you want.</figcaption>\n</figure>\n</div>\n"
    }
  },
  {
    "id": "MDEwOlJlcG9zaXRvcnkxNjE1MDYyNA==",
    "name": "Zones",
    "url": "https://github.com/Terasology/Zones",
    "description": "Utility module for defining zones",
    "homepageUrl": null,
    "openGraphImageUrl": "https://opengraph.githubassets.com/8cead245aef7c7daa029e11f268c010d138c753629dfa2b7a428baa27d7fa981/Terasology/Zones",
    "usesCustomOpenGraphImage": false,
    "moduleTxt": {
      "text": "{\n    \"id\" : \"Zones\",\n    \"version\" : \"0.1.0\",\n    \"author\" : \"\",\n    \"displayName\" : \"Zones\",\n    \"description\" : \"Zones provides the ability to select a block region, then name and classify the selected region as a zone\",\n    \"dependencies\" : [],\n    \"isServerSideOnly\" : false\n}"
    },
    "readme": null
  }
]